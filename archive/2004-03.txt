From thunt01@harris.com  Thu Mar  4 16:26:41 2004
From: thunt01@harris.com (Hunt, Thomas (Contractor))
Date: Thu, 4 Mar 2004 11:26:41 -0500
Subject: [concurrency-interest] Newbie wants to use concurrent utilities
Message-ID: <EFAA78F77E74D411A0F700508BDFEAD60BDA9F48@mlbmx9.cs.myharris.net>

This message is in MIME format. Since your mail reader does not understand
this format, some or all of this message may not be legible.

------_=_NextPart_000_01C40205.7A097A30
Content-Type: multipart/alternative;
	boundary="----_=_NextPart_001_01C40205.7A097A30"


------_=_NextPart_001_01C40205.7A097A30
Content-Type: text/plain;
	charset="ISO-8859-1"

I am developing with JDK1.4
 
I have a requirement for concurrency and concurrent1.3.3 looks great.
 
Of course, I would like the API I use to be as close to the JDK1.5
java.util.concurrent packages as possible.
 
Using JDK1.4...
Is concurrent1.3.3 my only option?
What about jsr166.jar?
 
thanks,
tommy~

------_=_NextPart_001_01C40205.7A097A30
Content-Type: text/html;
	charset="ISO-8859-1"
Content-Transfer-Encoding: quoted-printable

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<HTML><HEAD>
<META HTTP-EQUIV=3D"Content-Type" CONTENT=3D"text/html; =
charset=3DISO-8859-1">


<STYLE>P.msoNormal {
	FONT-WEIGHT: normal; FONT-SIZE: 12pt; MARGIN-LEFT: 50px; COLOR: black; =
FONT-FAMILY: "MS Sans Serif", "sans serif"
}
LI.msoNormal {
	FONT-WEIGHT: normal; FONT-SIZE: 12pt; MARGIN-LEFT: 50px; COLOR: black; =
FONT-FAMILY: "MS Sans Serif", "sans serif"
}
BODY {
	FONT-WEIGHT: normal; FONT-SIZE: 12pt; MARGIN-LEFT: 50px; COLOR: black; =
BACKGROUND-REPEAT: repeat-y; FONT-FAMILY: "MS Sans Serif", "sans serif"
}
HR {
	WIDTH: 100%; COLOR: #00ffff; HEIGHT: 1px
}
</STYLE>

<META content=3D"MSHTML 6.00.2800.1170" name=3DGENERATOR></HEAD>
<BODY bgColor=3D#ffffff background=3Dcid:839111816@04032004-1cde>
<DIV><SPAN class=3D839111816-04032004>I am&nbsp;developing=20
with</SPAN>&nbsp;JDK1.4</DIV>
<DIV><SPAN class=3D839111816-04032004></SPAN>&nbsp;</DIV>
<DIV><SPAN class=3D839111816-04032004><FONT face=3D'"MS Sans Serif"'>I =
have a=20
requirement for concurrency and concurrent1.3.3 looks =
great.</FONT></SPAN></DIV>
<DIV><SPAN class=3D839111816-04032004></SPAN>&nbsp;</DIV>
<DIV><SPAN class=3D839111816-04032004><FONT face=3D'"MS Sans Serif"'>Of =
course, I=20
would like the API I use to be as close to the JDK1.5 =
java.util.concurrent=20
packages as possible.</FONT></SPAN></DIV>
<DIV><SPAN class=3D839111816-04032004><FONT=20
face=3D'"MS Sans Serif"'></FONT></SPAN>&nbsp;</DIV>
<DIV><SPAN class=3D839111816-04032004><FONT face=3D'"MS Sans =
Serif"'>Using=20
JDK1.4...</FONT></SPAN></DIV>
<DIV><SPAN class=3D839111816-04032004><FONT face=3D'"MS Sans Serif"'>Is =

concurrent1.3.3 my only option</FONT></SPAN><SPAN =
class=3D839111816-04032004><FONT=20
face=3D'"MS Sans Serif"'>?</FONT></SPAN></DIV>
<DIV><SPAN class=3D839111816-04032004>What about =
jsr166.jar?</SPAN></DIV>
<DIV><SPAN class=3D839111816-04032004></SPAN>&nbsp;</DIV>
<DIV><SPAN class=3D839111816-04032004><FONT=20
face=3D'"MS Sans Serif"'>thanks,</FONT></SPAN></DIV>
<DIV><SPAN class=3D839111816-04032004>tommy~</SPAN></DIV></BODY></HTML>

------_=_NextPart_001_01C40205.7A097A30--

------_=_NextPart_000_01C40205.7A097A30
Content-Type: image/jpeg;
	name="Notebook.jpg"
Content-Transfer-Encoding: base64
Content-Disposition: attachment;
	filename="Notebook.jpg"
Content-ID: <839111816@04032004-1cde>

/9j/4AAQSkZJRgABAgEASABIAAD/7QSyUGhvdG9zaG9wIDMuMAA4QklNA+kAAAAAAHgAAwAAAEgA
SAAAAAADBgJS//f/9wMPAlsDRwUoA/wAAgAAAEgASAAAAAAC2AIoAAEAAABkAAAAAQADAwMAAAAB
Jw8AAQABAAAAAAAAAAAAAAAAYAgAGQGQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA4
QklNA+0AAAAAABAASAAAAAEAAQBIAAAAAQABOEJJTQPzAAAAAAAIAAAAAAAAAAA4QklNBAoAAAAA
AAEAADhCSU0nEAAAAAAACgABAAAAAAAAAAI4QklNA/UAAAAAAEgAL2ZmAAEAbGZmAAYAAAAAAAEA
L2ZmAAEAoZmaAAYAAAAAAAEAMgAAAAEAWgAAAAYAAAAAAAEANQAAAAEALQAAAAYAAAAAAAE4QklN
A/gAAAAAAHAAAP////////////////////////////8D6AAAAAD/////////////////////////
////A+gAAAAA/////////////////////////////wPoAAAAAP//////////////////////////
//8D6AAAOEJJTQQAAAAAAAACAAA4QklNBAIAAAAAAAIAADhCSU0ECAAAAAAAEAAAAAEAAAJAAAAC
QAAAAAA4QklNBAkAAAAAAqIAAAABAAAAgAAAAAIAAAGAAAADAAAAAoYAGAAB/9j/4AAQSkZJRgAB
AgEASABIAAD//gAnRmlsZSB3cml0dGVuIGJ5IEFkb2JlIFBob3Rvc2hvcKggNC4wAP/uAA5BZG9i
ZQBkgAAAAAH/2wCEAAwICAgJCAwJCQwRCwoLERUPDAwPFRgTExUTExgRDAwMDAwMEQwMDAwMDAwM
DAwMDAwMDAwMDAwMDAwMDAwMDAwBDQsLDQ4NEA4OEBQODg4UFA4ODg4UEQwMDAwMEREMDAwMDAwR
DAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDP/AABEIAAIAgAMBIgACEQEDEQH/3QAEAAj/xAE/
AAABBQEBAQEBAQAAAAAAAAADAAECBAUGBwgJCgsBAAEFAQEBAQEBAAAAAAAAAAEAAgMEBQYHCAkK
CxAAAQQBAwIEAgUHBggFAwwzAQACEQMEIRIxBUFRYRMicYEyBhSRobFCIyQVUsFiMzRygtFDByWS
U/Dh8WNzNRaisoMmRJNUZEXCo3Q2F9JV4mXys4TD03Xj80YnlKSFtJXE1OT0pbXF1eX1VmZ2hpam
tsbW5vY3R1dnd4eXp7fH1+f3EQACAgECBAQDBAUGBwcGBTUBAAIRAyExEgRBUWFxIhMFMoGRFKGx
QiPBUtHwMyRi4XKCkkNTFWNzNPElBhaisoMHJjXC0kSTVKMXZEVVNnRl4vKzhMPTdePzRpSkhbSV
xNTk9KW1xdXl9VZmdoaWprbG1ub2JzdHV2d3h5ent8f/2gAMAwEAAhEDEQA/APROif0Kv6X81T9L
j+ar/m/5K0F8rJJIfqlJfKySKn6pSXyskkp+qUl8rJJKfqlJfKySSn6pSXyskkp+qUl8rJJKfqlJ
fKySSn//2ThCSU0EBgAAAAAABwABAAAAAQEA//4AJ0ZpbGUgd3JpdHRlbiBieSBBZG9iZSBQaG90
b3Nob3CoIDQuMAD/7gAOQWRvYmUAZIAAAAAB/9sAhAAMCAgNCQ0VDAwVGhQQFBogGxoaGyAiFxcX
FxciEQwMDAwMDBEMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMAQ0NDREOERsRERsUDg4OFBQO
Dg4OFBEMDAwMDBERDAwMDAwMEQwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAz/wAARCAAYBaAD
ASIAAhEBAxEB/90ABABa/8QBPwAAAQUBAQEBAQEAAAAAAAAAAwABAgQFBgcICQoLAQABBQEBAQEB
AQAAAAAAAAABAAIDBAUGBwgJCgsQAAEEAQMCBAIFBwYIBQMMMwEAAhEDBCESMQVBUWETInGBMgYU
kaGxQiMkFVLBYjM0coLRQwclklPw4fFjczUWorKDJkSTVGRFwqN0NhfSVeJl8rOEw9N14/NGJ5Sk
hbSVxNTk9KW1xdXl9VZmdoaWprbG1ub2N0dXZ3eHl6e3x9fn9xEAAgIBAgQEAwQFBgcHBgU1AQAC
EQMhMRIEQVFhcSITBTKBkRShsUIjwVLR8DMkYuFygpJDUxVjczTxJQYWorKDByY1wtJEk1SjF2RF
VTZ0ZeLys4TD03Xj80aUpIW0lcTU5PSltcXV5fVWZnaGlqa2xtbm9ic3R1dnd4eXp7fH/9oADAMB
AAIRAxEAPwCv0T+n4/8AxrP+qavW15J0U/r+P/xrP+qavWg8eKElsWSHZfXWYe4A+ZUMjIFTJBE/
Fc1kXbg63mJP+amk0uesGqdc19Sup2ZrLmWGQxwLR4B35v8A0V0qKlJJJIqUkkkkpSSSSSlJJJJK
UkkkkpSSSSSlJJJJKUkkkkpSSSSSlJJJJKUkkkkpSSSSSlJJJJKUkkkkpSSSSSlJJJJKUkkkkpSS
SSSlJJJJKUkkkkpSSSSSlJJJJKUkkkkpSSSSSlJJJJKUkkkkpSSSSSlJJJJKUkkkkpSSSSSlJJJJ
KUkkkkpSSSSSlJJJJKUkkkkpSSSSSlJJJJKUkkkkpSSSSSlJJJJKUkkkkpSSSSSlJJJJKUkkkkpS
SSSSlJJJJKUkkkkpSSSSSlJJJJKUkkkkpSSSSSlJJJJKUkkkkpSSSSSlJJJJKUkkkkpSSSSSlJJJ
JKUkkkkpSSSSSlJJJJKUkkkkpSSSSSlJJJJKUkkkkpSSSSSlJJJJKUkkkkpSSSSSlJJJJKUkkkkp
SSSSSlJJJJKUkkkkpSSSSSlJJJJKUkkkkpSSSSSlJJJJKUkkkkpSSSSSlJJJJKUkkkkpSSSSSlJJ
JJKUkkkkpSSSSSn/0J9G6oKn04zKKXOdYA6x7d1kOP8Ag/3Hs/MXY/sOl/0hYfCT/wCQavnZJArQ
/S1HTXVN21+weYa7/vqzcroeQ+Q3XcYOn/mbF89pIaJfpboXRK+k1uDQPUsILyONPotZ/JatRfKq
SSX6qSXyqkip+qkl8qpJKfqpJfKqSSn6qSXyqkkp+qkl8qpJKfqpJfKqSSn6qSXyqkkp+qkl8qpJ
KfqpJfKqSSn6qSXyqkkp+qkl8qpJKfqpJfKqSSn6qSXyqkkp+qkl8qpJKfqpJfKqSSn6qSXyqkkp
+qkl8qpJKfqpJfKqSSn6qSXyqkkp+qkl8qpJKfqpJfKqSSn6qSXyqkkp+qkl8qpJKfqpJfKqSSn6
qSXyqkkp+qkl8qpJKfqpJfKqSSn6qSXyqkkp+qkl8qpJKfqpJfKqSSn6qSXyqkkp+qkl8qpJKfqp
JfKqSSn6qSXyqkkp+qkl8qpJKfqpJfKqSSn6qSXyqkkp+qkl8qpJKfqpJfKqSSn6qSXyqkkp+qkl
8qpJKfqpJfKqSSn6qSXyqkkp+qkl8qpJKfqpJfKqSSn6qSXyqkkp+qkl8qpJKfqpJfKqSSn6qSXy
qkkp+qkl8qpJKfqpJfKqSSn6qSXyqkkp+qkl8qpJKfqpJfKqSSn6qSXyqkkp+qkl8qpJKfqpJfKq
SSn6qSXyqkkp+qkl8qpJKfqpJfKqSSn6qSXyqkkp+qkl8qpJKfqpJfKqSSn6qSXyqkkp+qkl8qpJ
KfqpJfKqSSn6qSXyqkkp+qkl8qpJKfqpJfKqSSn6qSXyqkkp+qkl8qpJKfqpJfKqSSn6qSXyqkkp
+qkl8qpJKfqpJfKqSSn6qSXyqkkp+qkl8qpJKfqpJfKqSSn6qSXyqkkp+qkl8qpJKfqpJfKqSSn6
qSXyqkkp+qkl8qpJKfqpJfKqSSn6qSXyqkkp+qkl8qpJKfqpJfKqSSn/2Q==

------_=_NextPart_000_01C40205.7A097A30--

From osvaldo@visionnaire.com.br  Thu Mar  4 16:48:01 2004
From: osvaldo@visionnaire.com.br (Osvaldo Pinali Doederlein)
Date: Thu, 04 Mar 2004 13:48:01 -0300
Subject: [concurrency-interest] Newbie wants to use concurrent utilities
In-Reply-To: <EFAA78F77E74D411A0F700508BDFEAD60BDA9F48@mlbmx9.cs.myharris.net>
References: <EFAA78F77E74D411A0F700508BDFEAD60BDA9F48@mlbmx9.cs.myharris.net>
Message-ID: <40475DC1.8020601@visionnaire.com.br>

Hi,

I noticed some bad performance in beta1 that seems to be related to a
missing optimization -- no "intrinsification" of the new Unsafe methods
(park(), unpark()).  I assume this is coming soon (beta2 if I'm lucky)?
Right now, standard benchmarks like JGF's show traditional, "handmade"
barriers running circles around CyclicBarrier; it looks bad even with
the caveats of microbenchmarks.  The new API is looking great otherwise,
but perfect is better than great :)

A+
Osvaldo

-- 
-----------------------------------------------------------------------
Osvaldo Pinali Doederlein                   Visionnaire Informática S/A
osvaldo@visionnaire.com.br                http://www.visionnaire.com.br
Arquiteto de Tecnologia                          +55 (41) 373-7400 #228

From dl@cs.oswego.edu  Fri Mar  5 12:36:51 2004
From: dl@cs.oswego.edu (Doug Lea)
Date: Fri, 5 Mar 2004 07:36:51 -0500
Subject: [concurrency-interest] Newbie wants to use concurrent utilities
In-Reply-To: <40475DC1.8020601@visionnaire.com.br>
References: <EFAA78F77E74D411A0F700508BDFEAD60BDA9F48@mlbmx9.cs.myharris.net>
 <40475DC1.8020601@visionnaire.com.br>
Message-ID: <16456.29795.68216.182527@altair.cs.oswego.edu>

> I noticed some bad performance in beta1

(As Osvaldo and I discovered, this was due to the Windows-only spin
bug in beta1. Hopefully he will be able to test using an updated JVM
soon.  On other platforms, performance of java.util.concurrent
versions of barriers etc used in those tests seems to be pretty good.)

-Doug



From dl@cs.oswego.edu  Fri Mar  5 12:47:29 2004
From: dl@cs.oswego.edu (Doug Lea)
Date: Fri, 5 Mar 2004 07:47:29 -0500
Subject: [concurrency-interest] Newbie wants to use concurrent utilities
In-Reply-To: <EFAA78F77E74D411A0F700508BDFEAD60BDA9F48@mlbmx9.cs.myharris.net>
References: <EFAA78F77E74D411A0F700508BDFEAD60BDA9F48@mlbmx9.cs.myharris.net>
Message-ID: <16456.30433.657336.24695@altair.cs.oswego.edu>

> I have a requirement for concurrency and concurrent1.3.3 looks great.
>  
> Of course, I would like the API I use to be as close to the JDK1.5
> java.util.concurrent packages as possible.
>  
> Using JDK1.4...
> Is concurrent1.3.3 my only option?

Unfortunately, yes. It is not a good idea to start new development
using old dl.util.concurrent though. While the functionality is
similar, most of the APIs are different/better. It would require a
fair amount of manual adjustment when you move to JDK1.5.

> What about jsr166.jar?

No, this requires a 1.5 JVM (i.e., new native support.)

We orginally had plans for a back-port, but after our experience with
the 1.5 JVM emulation layer in last summer's preliminary test release,
I don't think this would do anyone a favor -- performance of the
emulation version was nowhere near good enough for production use.

-Doug

From ccox@tripos.com  Fri Mar  5 15:46:18 2004
From: ccox@tripos.com (Curt Cox)
Date: Fri, 5 Mar 2004 09:46:18 -0600
Subject: [concurrency-interest] Newbie wants to use concurrent utilities
In-Reply-To: <16456.30433.657336.24695@altair.cs.oswego.edu>
Message-ID: <MDEIJLCNINPJGNEJMGODAEDLCJAA.ccox@tripos.com>

Doug,

I could definitely use a wrapper around dl.util.concurrent
that exposed an interface as close as possible to the new
1.5 APIs.

Exactly how bad would the performance of a wrapper be?
Depending on the parts of the API being used by an
application, the speed could be virtually as fast as
using the dl.util.concurrent API directly.

Let's say you have an application that you would like to use
java.util.concurrent for.  If you code to JSR-166, you
are currently tied to the 1.5 JRE.  It is an unreleased
product with unknown bugs.  There is a beta available,
but you can't ship a product with a beta JRE.  Worse
yet, many organizations have corporate standards that
are just considering adopting the 1.4.* JRE.  For them
the JSR-166 APIs won't be available for years.

If your application spends 0.1 percent of its time in
java.util.concurrent code, you won't really care if
the implementation is 10 times slower than it could be
on another JVM.  If you are in this camp, you want
a nice, well documented API with no bugs.

This sort of thing can be really handy.
http://javalogging.sourceforge.net/

There are issues.
- ownership of the java.* namespace
- development resources for actually writing the code

Unless the performance is insanely pathological, then
there are many applications where it won't be an issue.

- Curt

-----Original Message-----
From: concurrency-interest-admin@cs.oswego.edu
[mailto:concurrency-interest-admin@cs.oswego.edu]On Behalf Of Doug Lea
Sent: Friday, March 05, 2004 6:47 AM
To: Hunt, Thomas (Contractor)
Cc: 'concurrency-interest@altair.cs.oswego.edu'
Subject: Re: [concurrency-interest] Newbie wants to use concurrent
utilities


> I have a requirement for concurrency and concurrent1.3.3 looks great.
>  
> Of course, I would like the API I use to be as close to the JDK1.5
> java.util.concurrent packages as possible.
>  
> Using JDK1.4...
> Is concurrent1.3.3 my only option?

Unfortunately, yes. It is not a good idea to start new development
using old dl.util.concurrent though. While the functionality is
similar, most of the APIs are different/better. It would require a
fair amount of manual adjustment when you move to JDK1.5.

> What about jsr166.jar?

No, this requires a 1.5 JVM (i.e., new native support.)

We orginally had plans for a back-port, but after our experience with
the 1.5 JVM emulation layer in last summer's preliminary test release,
I don't think this would do anyone a favor -- performance of the
emulation version was nowhere near good enough for production use.

-Doug
_______________________________________________
Concurrency-interest mailing list
Concurrency-interest@altair.cs.oswego.edu
http://altair.cs.oswego.edu/mailman/listinfo/concurrency-interest







From dl@cs.oswego.edu  Fri Mar  5 16:11:19 2004
From: dl@cs.oswego.edu (Doug Lea)
Date: Fri, 5 Mar 2004 11:11:19 -0500
Subject: [concurrency-interest] Newbie wants to use concurrent utilities
In-Reply-To: <MDEIJLCNINPJGNEJMGODAEDLCJAA.ccox@tripos.com>
References: <16456.30433.657336.24695@altair.cs.oswego.edu>
 <MDEIJLCNINPJGNEJMGODAEDLCJAA.ccox@tripos.com>
Message-ID: <16456.42663.353071.712426@altair.cs.oswego.edu>

> I could definitely use a wrapper around dl.util.concurrent
> that exposed an interface as close as possible to the new
> 1.5 APIs.

This is right now a very low priority for me compared to
JDK1.5-related stuff. But it is all open-source.  Perhaps those who
need it could conspire to create it?

-Doug


From news@kav.dk  Fri Mar  5 17:20:05 2004
From: news@kav.dk (Kasper Nielsen)
Date: Fri, 05 Mar 2004 18:20:05 +0100
Subject: [concurrency-interest] Too late for API additions?
Message-ID: <4048B6C5.1030800@kav.dk>

Hi,

One thing I really miss and that I find myself using in many 
applications is a DaemonThreadPool. The behaviour is the same as 
DefaultThreadPool except that it produces daemon threads.

             if (!t.isDaemon())
                 t.setDaemon(true);
instead of
             if (t.isDaemon())
                 t.setDaemon(false);


It would be really nice with an additional method in Executors
     public static ThreadFactory defaultThreadFactory(boolean isDaemon) {
         return new DefaultThreadFactory(isDaemon);
     }

Don't know if it is to late.
- Kasper

From news@kav.dk  Fri Mar  5 17:47:19 2004
From: news@kav.dk (Kasper Nielsen)
Date: Fri, 05 Mar 2004 18:47:19 +0100
Subject: [concurrency-interest] Newbie wants to use concurrent utilities
In-Reply-To: <16456.30433.657336.24695@altair.cs.oswego.edu>
References: <EFAA78F77E74D411A0F700508BDFEAD60BDA9F48@mlbmx9.cs.myharris.net> <16456.30433.657336.24695@altair.cs.oswego.edu>
Message-ID: <4048BD27.1070501@kav.dk>

Doug Lea wrote:

>>I have a requirement for concurrency and concurrent1.3.3 looks great.
>> 
>>Of course, I would like the API I use to be as close to the JDK1.5
>>java.util.concurrent packages as possible.
>> 
>>Using JDK1.4...
>>Is concurrent1.3.3 my only option?
> 
> 
> Unfortunately, yes. It is not a good idea to start new development
> using old dl.util.concurrent though. While the functionality is
> similar, most of the APIs are different/better. It would require a
> fair amount of manual adjustment when you move to JDK1.5.
> 
> 
>>What about jsr166.jar?
> 
> 
> No, this requires a 1.5 JVM (i.e., new native support.)
> 
> We orginally had plans for a back-port, but after our experience with
> the 1.5 JVM emulation layer in last summer's preliminary test release,
> I don't think this would do anyone a favor -- performance of the
> emulation version was nowhere near good enough for production use.

Another problem would be people writing applications based on j.u.c with 
the new JMM in mind - using volatiles - and expect that just by 
including a jsr166.jar the applications world be able to run smoothly on 
any <1.5 jvms. Allthough people that has to deploy applications on jvms 
that doesn't obey volatile semantics are probably aware of the problem.

However I do still see some benefits - if the performance is around that 
of util.concurrent - first of all if people where able to build <1.5 
applications around j.u.c I think we would see a much faster adaption of 
j.u.c. Consider something like NIO although 1.4 has been available for 
several years, regular IO is still used in products such as tomcat & 
jboss (AFAIK). The adoption of NIO has been really slow and its not 
until recently I've seen a lot of products based around it (I know there 
where some serious bugs before <1.4.2, but still)

And its not just the actual implementation of j.u.c but also the 
interfaces themself, that would be very nice to have. Having to design 
for example a framework around some interfaces in 
mynamespace.util.concurrent, is just a PITA if you have a large userbase 
and wants to swith to j.u.c. later on.

Im sure there are a a number of additional reasons for providing a 
jsr166 emulation layer.

- Kasper

From ccox@tripos.com  Fri Mar  5 17:59:33 2004
From: ccox@tripos.com (Curt Cox)
Date: Fri, 5 Mar 2004 11:59:33 -0600
Subject: [concurrency-interest] Newbie wants to use concurrent utilities
In-Reply-To: <16456.42663.353071.712426@altair.cs.oswego.edu>
Message-ID: <MDEIJLCNINPJGNEJMGODOEDMCJAA.ccox@tripos.com>

Doug,

What code resources would be available to conspirators?

Is the TCK free for use?
http://gee.cs.oswego.edu/dl/concurrent/testdocs/index.html

If the 1.5 emulation code was available, that might provide
the easiest way of implementing a compatible, if slow,
JSR-166 on pre 1.5 JREs.

The emulation layer is currently "for evaluation purposes only".
http://gee.cs.oswego.edu/dl/concurrency-interest/jsr166/
That means no shipping applications, right?
Is there any chance of a change on that?

If the emulation layer was released on a
"no warranties--this code is radio active" basis,
would that allow some derivative of the JSR-166 code to
run on pre 1.5 JREs, or do licensing issues force a
clean-room implementation?

-Curt
-----Original Message-----
From: concurrency-interest-admin@cs.oswego.edu
[mailto:concurrency-interest-admin@cs.oswego.edu]On Behalf Of Doug Lea
Sent: Friday, March 05, 2004 10:11 AM
To: concurrency-interest@altair.cs.oswego.edu
Subject: RE: [concurrency-interest] Newbie wants to use concurrent
utilities


> I could definitely use a wrapper around dl.util.concurrent
> that exposed an interface as close as possible to the new
> 1.5 APIs.

This is right now a very low priority for me compared to
JDK1.5-related stuff. But it is all open-source.  Perhaps those who
need it could conspire to create it?

-Doug

_______________________________________________
Concurrency-interest mailing list
Concurrency-interest@altair.cs.oswego.edu
http://altair.cs.oswego.edu/mailman/listinfo/concurrency-interest







From dl@cs.oswego.edu  Fri Mar  5 18:56:07 2004
From: dl@cs.oswego.edu (Doug Lea)
Date: Fri, 5 Mar 2004 13:56:07 -0500
Subject: [concurrency-interest] Newbie wants to use concurrent utilities
In-Reply-To: <MDEIJLCNINPJGNEJMGODOEDMCJAA.ccox@tripos.com>
References: <16456.42663.353071.712426@altair.cs.oswego.edu>
 <MDEIJLCNINPJGNEJMGODOEDMCJAA.ccox@tripos.com>
Message-ID: <16456.52551.660403.268558@altair.cs.oswego.edu>

> What code resources would be available to conspirators?

Almost everything.  Everything produced originally by me or JSR166 is
released to public domain. The non-original parts include the modified
1.4.2 JVM prerelease last summer that was binary-only and
for-evaluation only, and the changes to Sun code (e.g.,
UncaughtExceptionHandlers in Thread class) retain Sun copyright --
Officially, these were done by us suggesting changes, that were then
adopted.

(Please don't ask me to legally interpret any of this though.
I'm not a lawyer.)

-Doug



From dl@cs.oswego.edu  Sat Mar  6 00:04:48 2004
From: dl@cs.oswego.edu (Doug Lea)
Date: Fri, 5 Mar 2004 19:04:48 -0500
Subject: [concurrency-interest] Too late for API additions?
In-Reply-To: <4048B6C5.1030800@kav.dk>
References: <4048B6C5.1030800@kav.dk>
Message-ID: <16457.5536.285553.483050@altair.cs.oswego.edu>

>      public static ThreadFactory defaultThreadFactory(boolean isDaemon) 

This is a very reasonable request. It is probably too late to
accommodate, but we'll investigate.

-Doug



From mark@klomp.org  Sat Mar  6 16:14:16 2004
From: mark@klomp.org (Mark Wielaard)
Date: Sat, 06 Mar 2004 17:14:16 +0100
Subject: [concurrency-interest] Newbie wants to use concurrent utilities
In-Reply-To: <16456.52551.660403.268558@altair.cs.oswego.edu>
References: <16456.42663.353071.712426@altair.cs.oswego.edu>
 <MDEIJLCNINPJGNEJMGODOEDMCJAA.ccox@tripos.com>
 <16456.52551.660403.268558@altair.cs.oswego.edu>
Message-ID: <1078589656.1445.55.camel@localhost>

--=-OL+Lz5QVOAWUOljkffJ9
Content-Type: text/plain
Content-Transfer-Encoding: quoted-printable

Hi,

On Fri, 2004-03-05 at 19:56, Doug Lea wrote:
> > What code resources would be available to conspirators?
>=20
> Almost everything.  Everything produced originally by me or JSR166 is
> released to public domain. The non-original parts include the modified
> 1.4.2 JVM prerelease last summer that was binary-only and
> for-evaluation only, and the changes to Sun code (e.g.,
> UncaughtExceptionHandlers in Thread class) retain Sun copyright --
> Officially, these were done by us suggesting changes, that were then
> adopted.
>=20
> (Please don't ask me to legally interpret any of this though.
> I'm not a lawyer.)

I am the GNU Classpath maintainer. GNU Classpath is a GNU project to
create free core class libraries for use with virtual machines and
compilers for the java programming language. It is used by VMs and
compilers like gcj (part of GCC), kaffe and the IBM Jikes Research VM.
It is mostly compatible with JDK 1.4, but still missing some support for
certain packages (e.g. swing, corba and imageio is still being worked
on).

We recently got asked to provide Sun with legal issues we see with the
SCSL and JCP. One of the reasons few Free Software projects work with
Sun and the JCP on standards is the uncertain legal situation described
above by Doug Lea. We have tried in the past to clear up any legal
uncertainty with the way some of the sources which were previously in
the public domain, but which later got combined with proprietary code
copyrighted by Sun could be used in free software projects and with the
above free VM implementations. Despite several emails from both Doug Lea
and me to Sun and FSF legal staff we couldn't come to a clear legal
statement that would allow reuse of the java.util.concurrent classes in
gcj or kaffe. I will certainly bring this up again with Sun and add that
others have also expressed interest in other ways to use the results of
JSR-166 with other non JDK-1.5 VMs. (Being able to reuse the code sure
beats having to re-implement the whole thing in a clean-room way!)

If people have feedback on how working inside the JCP on standards, were
free software/public domain code gets combined with previously
proprietary code, can be improved to make working together with free
java-like implementations and/or other free software and open source
projects easier I would be happy to hear about it so I can give Sun
clear feedback.

BTW. If there was a "clean" archive of the JSR 166 sources which only
contain certified public domain code without any code that is (derived
from) proprietary code then that would be a great starting point for
reuse in non-Sun-JDK-1.5 projects.

Sincerely,

Mark Wielaard

--=-OL+Lz5QVOAWUOljkffJ9
Content-Type: application/pgp-signature; name=signature.asc
Content-Description: This is a digitally signed message part

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.2.4 (GNU/Linux)

iD8DBQBASfjYxVhZCJWr9QwRAjHAAJ9/EaX9/ka6c2h57HEgpevzome4IwCfUFk8
oJdw6Haxv8itZJpmFT88sm4=
=nL96
-----END PGP SIGNATURE-----

--=-OL+Lz5QVOAWUOljkffJ9--


From dl@cs.oswego.edu  Mon Mar  8 00:17:58 2004
From: dl@cs.oswego.edu (Doug Lea)
Date: Sun, 7 Mar 2004 19:17:58 -0500
Subject: [concurrency-interest] Too late for API additions?
In-Reply-To: <4048B6C5.1030800@kav.dk>
References: <4048B6C5.1030800@kav.dk>
Message-ID: <16459.48054.245687.559184@altair.cs.oswego.edu>

> It would be really nice with an additional method in Executors
>      public static ThreadFactory defaultThreadFactory(boolean isDaemon) {

Thanks again for the suggestion, but on further consideration, we
decided not to do this, even if we could. (To keep on JDK1.5 schedule,
we are supposed to only "fix" things from now until release.)

Doing this would lead to adding methods to handle all permutations of
non-default settings, which are probably handled better by little
3-line methods people can write themselves. Also, isDaemon status is
an odd one to single out -- When you use it, executing tasks will be
automatically terminated by JVM when non-daemon threads exit, which is
not usually desirable.

BTW, Note that ThreadPoolExecutor has a finalizer that shuts itself
down gracefully when it is no longer referenced. Exploiting this
might work out better for you than setting isDaemon.

-Doug


From dl@cs.oswego.edu  Mon Mar  8 13:59:10 2004
From: dl@cs.oswego.edu (Doug Lea)
Date: Mon, 8 Mar 2004 08:59:10 -0500
Subject: [concurrency-interest] Proposed Final Draft submitted
Message-ID: <16460.31790.643151.908409@altair.cs.oswego.edu>

Another boring milestone: We just submitted current javadocs etc to
JCP as the official JSR166 "Proposed Final Draft". It usually takes a
few days for this to show up at jcp.org, but it is the same as at
  http://gee.cs.oswego.edu/dl/concurrency-interest/index.html
which has itself hardly changed over the past month.

Procedurally, the next milestone is final approval, which I think will
be scheduled to be just before JDK1.5 FCS release. 

As we've been saying for a while, barring any unforseen crises, the
only changes anyone should expect from this point onward are
clarifications and corrections. We appreciate your continued help in
finding anything needing such changes.

-Doug






From dl@cs.oswego.edu  Tue Mar  9 01:34:36 2004
From: dl@cs.oswego.edu (Doug Lea)
Date: Mon, 8 Mar 2004 20:34:36 -0500
Subject: [concurrency-interest] Newbie wants to use concurrent utilities
In-Reply-To: <1078589656.1445.55.camel@localhost>
References: <16456.42663.353071.712426@altair.cs.oswego.edu>
 <MDEIJLCNINPJGNEJMGODOEDMCJAA.ccox@tripos.com>
 <16456.52551.660403.268558@altair.cs.oswego.edu>
 <1078589656.1445.55.camel@localhost>
Message-ID: <16461.7980.67330.681609@altair.cs.oswego.edu>

> BTW. If there was a "clean" archive of the JSR 166 sources which only
> contain certified public domain code without any code that is (derived
> from) proprietary code then that would be a great starting point for
> reuse in non-Sun-JDK-1.5 projects.

Well, at least this part is easy:

We don't provide an archive at all; just file-by-file CVS.  Of the
files in package java.util.concurrent and its subpackages, there is
only one file with Sun attribution, the (infamous)
CopyOnWriteArraList.java.  (Digression: This class was created in the
obvious way: take ArrayList, and re-implement every method using COW.
Out of curiosity I just checked and found that the resulting files
have 19 lines of non-comment code in common (mostly lines like "return
-1;") But it still seemed appropriate to credit the original source.)

All test and documentation files are also ours. Also 
Queue.java in java.util.

-Doug


From thunt01@harris.com  Tue Mar  9 14:31:22 2004
From: thunt01@harris.com (Hunt, Thomas (Contractor))
Date: Tue, 9 Mar 2004 09:31:22 -0500
Subject: [concurrency-interest] Newbie wants to use concurrent utiliti
 es
Message-ID: <EFAA78F77E74D411A0F700508BDFEAD60BDA9F6D@mlbmx9.cs.myharris.net>

Fellas,

So, this CVS repository of the 1.5 emmulation code sounds like a great place to
start.  How can I access this repository in a read-only way?  Do you have a URL?

tommy~

-----Original Message-----
From: Curt Cox [mailto:ccox@tripos.com]
Sent: Friday, March 05, 2004 1:00 PM
To: Doug Lea; concurrency-interest@altair.cs.oswego.edu
Subject: RE: [concurrency-interest] Newbie wants to use concurrent
utilities


Doug,

What code resources would be available to conspirators?

Is the TCK free for use?
http://gee.cs.oswego.edu/dl/concurrent/testdocs/index.html

If the 1.5 emulation code was available, that might provide
the easiest way of implementing a compatible, if slow,
JSR-166 on pre 1.5 JREs.

The emulation layer is currently "for evaluation purposes only".
http://gee.cs.oswego.edu/dl/concurrency-interest/jsr166/
That means no shipping applications, right?
Is there any chance of a change on that?

If the emulation layer was released on a
"no warranties--this code is radio active" basis,
would that allow some derivative of the JSR-166 code to
run on pre 1.5 JREs, or do licensing issues force a
clean-room implementation?

-Curt
-----Original Message-----
From: concurrency-interest-admin@cs.oswego.edu
[mailto:concurrency-interest-admin@cs.oswego.edu]On Behalf Of Doug Lea
Sent: Friday, March 05, 2004 10:11 AM
To: concurrency-interest@altair.cs.oswego.edu
Subject: RE: [concurrency-interest] Newbie wants to use concurrent
utilities


> I could definitely use a wrapper around dl.util.concurrent
> that exposed an interface as close as possible to the new
> 1.5 APIs.

This is right now a very low priority for me compared to
JDK1.5-related stuff. But it is all open-source.  Perhaps those who
need it could conspire to create it?

-Doug

_______________________________________________
Concurrency-interest mailing list
Concurrency-interest@altair.cs.oswego.edu
http://altair.cs.oswego.edu/mailman/listinfo/concurrency-interest






_______________________________________________
Concurrency-interest mailing list
Concurrency-interest@altair.cs.oswego.edu
http://altair.cs.oswego.edu/mailman/listinfo/concurrency-interest

From dl@cs.oswego.edu  Tue Mar  9 15:33:51 2004
From: dl@cs.oswego.edu (Doug Lea)
Date: Tue, 9 Mar 2004 10:33:51 -0500
Subject: [concurrency-interest] Newbie wants to use concurrent utiliti
 es
In-Reply-To: <EFAA78F77E74D411A0F700508BDFEAD60BDA9F6D@mlbmx9.cs.myharris.net>
References: <EFAA78F77E74D411A0F700508BDFEAD60BDA9F6D@mlbmx9.cs.myharris.net>
Message-ID: <16461.58335.664979.497280@altair.cs.oswego.edu>

> How can I access this repository in a read-only way? 

You can read using the viewcvs links at 
  http://gee.cs.oswego.edu/dl/concurrency-interest/index.html

You can also get anonymous read-only CVS access setting CVSROOT to
  :pserver:anonymous@gee.cs.oswego.edu/export/home/jsr166/jsr166
with project also named jsr166 (as in "cvs co jsr166")

-Doug

  

From romanv@cs.ucsb.edu  Thu Mar 11 12:15:15 2004
From: romanv@cs.ucsb.edu (Roman Vitenberg)
Date: Thu, 11 Mar 2004 04:15:15 -0800 (PST)
Subject: [concurrency-interest] CFP: DISC 2004
Message-ID: <Pine.GSO.4.21.0403110413050.15155-100000@huron>



(Apologies if you receive this message several times)

Call for Papers http://lpdwww.epfl.ch/disc/)
18th International Symposium on Distributed Computing
DISC 2004 (http://homepages.cwi.nl/~paulv/disc04/)
Amsterdam, Netherlands, October 4 -8, 2004


IMPORTANT DATES
# Submission Deadline: May 15, 2004, 12PM (CET; UTC+1)
# Acceptance Notification: July 5, 2004
# Camera ready copy due: August 5, 2004



DISC, the International Symposium on DIStributed Computing, is an annual
forum for research presentations on all facets of distributed computing.
DISC 2004 is organized in cooperation with the European Association for
Theoretical Computer Science (EATCS).

SCOPE

Original contributions to the theory, design, analysis, implementation,
or application of distributed systems and networks are solicited.

Topics of interest include, but are not limited to:
# distributed algorithms and their complexity
# fault-tolerance of distributed systems
# consistency conditions and synchronization
# multiprocessor/cluster architectures and algorithms
# cryptographic and security protocols for distributed systems
# distributed programing languages
# distributed operating systems
# distributed computing issues on the Internet and the Web
# distributed systems management
# distributed applications such as databases, mobile agents, electronic
commerce, and peer-to-peer networks
# communication network architectures and protocols
# specification, semantics, and verification of distributed systems



PUBLICATION AND PRESENTATION

The symposium program lists all accepted papers--regular and brief
announcements. Brief Announcements get 5 to 10 minutes each and Regular
Papers get 25 minutes each. The symposium proceedings will include only
accepted regular papers and will be published by Springer in its Lecture
Notes in Computer Science series. Extended and revised versions of
selected papers will be considered for a special issue of the
international journal: Distributed Computing

BRIEF ANNOUNCEMENT TRACK

Ongoing work for which full papers are not ready yet or recent results
published elsewhere are suitable for submission as brief announcements.
It is hoped that researchers will use the brief announcement track to
quickly draw the attention of the community to their experiences,
insights and results from ongoing distributed computing research and
projects.

SUBMISSION FORMAT

Every submission, regular or brief, should be in English, begin with a
cover page (not a cover letter), and be followed by an extended
abstract. The cover page must include:
# title,
# the names of all authors and their affiliations,
# contact author's postal address, email address, and telephone number,
# a brief, one paragraph abstract of the paper,
# whether the paper is to be considered for the regular track, the brief
announcement track, or both, and
# whether the submission should be considered for the best student paper
award.

A regular submission's extended abstract should be no longer than 4500
words and not exceed 10 pages on letter-size paper using at least 11
point font and reasonable margins. (The page limit includes all figures,
tables, graphs, and references.) Additional necessary details may be
included in a clearly marked appendix that will be read at the
discretion of the program committee.

A brief announcement's extended abstract should not exceed 4 pages using
at least 11 point font and reasonable margins. Submissions deviating
from these guidelines will be rejected without consideration of their
merits.

It is recommended that the extended abstract begin with a succinct
statement of the problem or the issue being addressed, a summary of the
main results or conclusions, a brief explanation of their significance,
a brief statement of the key ideas, and a comparison with related work,
all tailored to a non-specialist. Technical development of the work,
directed to the specialist, should follow.

SUBMISSION

Authors are strongly encouraged to submit their papers electronically.
Information about how to submit papers will be available on
http://lpdwww.epfl.ch/DISC. Authors who cannot submit electronically
must submit a printed copy to the DISC program chair at the following
address:
Rachid Guerraoui,
EPFL-I&C-LPD,
Bat. IN,
CH-1015 Lausanne,
Switzerland
Email: Rachid.Guerraoui@epfl.ch,
Phone:+41-21.693.52.72 Authors submitting hard copies should also send
an e-mail to the program chair indicating that they are submitting in
this manner.

BEST STUDENT PAPER AWARD

A paper is eligible for the best student paper award only if it is a
regular submission, one of its authors is a full-time student at the
time of submission and the student's contribution is significant. The
program committee may split this award or decline to make it.

ORGANIZATION

Paul Vitanyi (Chair) and Jaap-Henk Hoepman (Co-Chair) (Univ of
Amsterdam)

PROGRAM CHAIR

R. Guerraoui, EPFL

PROGRAMME COMMITTEE

Mustaque Ahamad (Georgia Tech)
Lorenzo Alvisi (UT Austin)
James Anderson (Univ of North Carolina at Chapel Hill)
Paul Attie (Northeastern Univ)
Ozalp Babaoglu (Univ of Bologna)
Carole Delporte (Univ of Paris VII)
Shlomi Dolev (Ben-Gurion Univ)
Pierre Fraignaud (CNRS)
Felix Gaertner (Univ of Aachen)
Maurice Herlihy (Brown Univ)
Nancy Lynch (MIT)
Michael Merritt (AT&T)
Achour Mostefaoui (IRISA)
Mike Reiter (CMU)
Robbert van Renesse (Cornell Univ)
Luis Rodrigues (Univ of Lisboa)
Paul Spirakis (CTI and Univ of Patras)
Philippas Tsigas (Chalmers Univ)
Paul Vitanyi (Univ of Amsterdam)
Roman Vitenberg (UCSB)




From news@kav.dk  Fri Mar 12 10:40:50 2004
From: news@kav.dk (Kasper Nielsen)
Date: Fri, 12 Mar 2004 11:40:50 +0100
Subject: [concurrency-interest] issue with FutureTask.cancel?
Message-ID: <405193B2.6060404@kav.dk>

Hi,

I think there is an issue with tbe cancel() method (and the 
corresponding javadoc) in FutureTask. The javadoc for cancel(boolean 
mayInterruptIfRunning states that

boolean cancel(boolean mayInterruptIfRunning)
Attempts to cancel execution of this task. This attempt will fail if the 
task has already completed, already been cancelled, or could not be 
cancelled for some other reason.

         boolean innerCancel(boolean mayInterruptIfRunning) {
             int s = getState();
             if (ranOrCancelled(s) || !compareAndSetState(s, CANCELLED))
                 return false;
             if (mayInterruptIfRunning) {
                 Thread r = runner;
                 if (r != null)
                     r.interrupt();
             }
             releaseShared(0);
             done();
             return true;
         }

calling cancel(false) on a task that is allready running, which I 
presume would into the "or could not be cancelled for some other reason" 
category", will return true.
And by calling cancel(true) you really have no idea at all wheater or 
not the task gets cancelled.


- Kasper

From dl@cs.oswego.edu  Fri Mar 12 11:55:39 2004
From: dl@cs.oswego.edu (Doug Lea)
Date: Fri, 12 Mar 2004 06:55:39 -0500
Subject: [concurrency-interest] issue with FutureTask.cancel?
In-Reply-To: <405193B2.6060404@kav.dk>
References: <405193B2.6060404@kav.dk>
Message-ID: <16465.42299.481298.76189@altair.cs.oswego.edu>

>          boolean innerCancel(boolean mayInterruptIfRunning) {

Please take a look at the current specs and code at interest site and
use the supplied jsr166.jar if you can. The beta1 versions you are
looking at are from early November, before we merged Cancellable and
Future.  (This sort of thing is going to haunt us a while longer
because beta2 is now not scheduled to appear until May.)

In any case though, "cancel" affects a task's run-status only -- it
cannot (in prinicple) tell if a task has actually terminated.  So
cancel(false) of a running task can succeed in changing its status,
but does not interrupt it. Do you have any suggestions about how to
more clearly say this?

-Doug

From news@kav.dk  Fri Mar 12 13:25:48 2004
From: news@kav.dk (Kasper Nielsen)
Date: Fri, 12 Mar 2004 14:25:48 +0100
Subject: [concurrency-interest] issue with FutureTask.cancel?
In-Reply-To: <16465.42299.481298.76189@altair.cs.oswego.edu>
References: <405193B2.6060404@kav.dk> <16465.42299.481298.76189@altair.cs.oswego.edu>
Message-ID: <4051BA5C.4060908@kav.dk>

Doug Lea wrote:

>>         boolean innerCancel(boolean mayInterruptIfRunning) {
> 
> 
> Please take a look at the current specs and code at interest site and
> use the supplied jsr166.jar if you can. The beta1 versions you are
> looking at are from early November, before we merged Cancellable and
> Future.  (This sort of thing is going to haunt us a while longer
> because beta2 is now not scheduled to appear until May.)

I was actually looking at the current cvs version. And besides the 
javadoc for Cancellable.cancel() and Future.cancel is almost identically.

> In any case though, "cancel" affects a task's run-status only -- it
> cannot (in prinicple) tell if a task has actually terminated.  So
> cancel(false) of a running task can succeed in changing its status,
> but does not interrupt it. Do you have any suggestions about how to
> more clearly say this?

I am not sure in what way the user would benefit for knowing wheater or 
not the task's run-status was affected.

Having read that [future javadoc] ... Cancellation is performed by the 
cancel method. Additional methods are provided to determine if the task 
completed normally or was cancelled...

And then having a call to MyEmailFuture.cancel() return true, I would 
expect that my email hadn't been sent.

Perhaps we could warn the user, by saying that cancel() is only a hint 
to stop execution and then make it *void.

-Kasper

From thunt01@harris.com  Mon Mar 15 17:01:33 2004
From: thunt01@harris.com (Hunt, Thomas (Contractor))
Date: Mon, 15 Mar 2004 12:01:33 -0500
Subject: [concurrency-interest] Newbie wants to use concurrent utiliti
 es
Message-ID: <EFAA78F77E74D411A0F700508BDFEAD610307444@mlbmx9.cs.myharris.net>

Thanks everyone,

I have compiled a test program using the jdk1.4.1 and JSR166's JDK1.5 emmulator
(a.k.a. jsr166-0.3.21-dist.jar) and I am getting the SecurityException...

Exception in thread "main" java.lang.SecurityException: Prohibited package name:
 java.util.concurrent
        at java.lang.ClassLoader.defineClass(ClassLoader.java:488)
        at java.security.SecureClassLoader.defineClass(SecureClassLoader.java:12
3)
        at java.net.URLClassLoader.defineClass(URLClassLoader.java:250)
        at java.net.URLClassLoader.access$100(URLClassLoader.java:54)
        at java.net.URLClassLoader$1.run(URLClassLoader.java:193)
        at java.security.AccessController.doPrivileged(Native Method)
        at java.net.URLClassLoader.findClass(URLClassLoader.java:186)
        at java.lang.ClassLoader.loadClass(ClassLoader.java:299)
        at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:265)
        at java.lang.ClassLoader.loadClass(ClassLoader.java:255)
        at java.lang.ClassLoader.loadClassInternal(ClassLoader.java:315)
        at util.TestClient.main(TestClient.java:15)

I tried this in my java.policy file but it has no effect...
	// Special permission for JDK1.5 emmulator //
grant {
	permission java.lang.RuntimePermission "defineClassInPackage.java.util";
	permission java.lang.RuntimePermission
"defineClassInPackage.java.util.concurrent";
};

Any suggestions?

thanks,
tommy~

-----Original Message-----
From: Doug Lea [mailto:dl@cs.oswego.edu]
Sent: Tuesday, March 09, 2004 10:34 AM
To: Hunt, Thomas (Contractor)
Cc: concurrency-interest@altair.cs.oswego.edu
Subject: RE: [concurrency-interest] Newbie wants to use concurrent
utiliti es



> How can I access this repository in a read-only way? 

You can read using the viewcvs links at 
  http://gee.cs.oswego.edu/dl/concurrency-interest/index.html

You can also get anonymous read-only CVS access setting CVSROOT to
  :pserver:anonymous@gee.cs.oswego.edu/export/home/jsr166/jsr166
with project also named jsr166 (as in "cvs co jsr166")

-Doug

  

From thunt01@harris.com  Thu Mar 18 15:25:50 2004
From: thunt01@harris.com (Hunt, Thomas (Contractor))
Date: Thu, 18 Mar 2004 10:25:50 -0500
Subject: [concurrency-interest] AbstractQueuedSynchronizer
Message-ID: <EFAA78F77E74D411A0F700508BDFEAD61030746D@mlbmx9.cs.myharris.net>

This message is in MIME format. Since your mail reader does not understand
this format, some or all of this message may not be legible.

------_=_NextPart_000_01C40CFD.4B798B94
Content-Type: multipart/alternative;
	boundary="----_=_NextPart_001_01C40CFD.4B798B94"


------_=_NextPart_001_01C40CFD.4B798B94
Content-Type: text/plain;
	charset="ISO-8859-1"

I am attempting to use JDK1.4 to implement SynchronousQueue.
 
Inner class, SynchronousQueue.Node, extends AbstractQueuedSynchronizer and this
class depends on nanosecond technology not available in JDK1.4
 
I believe the only methods required are
head
tail
AbstractQueuedSynchronizer()
setItem(Object o)
getItem()
waitForTake()
waitForTake(nanos)
waitForPut()
waitForPut(nanos)
 
Looking at Concurrent 1.3.3, which class would fufill the same semantics of this
"abbreviated" AbstractQueuedSynchronizer?
 
thanks
tommy~

------_=_NextPart_001_01C40CFD.4B798B94
Content-Type: text/html;
	charset="ISO-8859-1"
Content-Transfer-Encoding: quoted-printable

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<HTML><HEAD>
<META HTTP-EQUIV=3D"Content-Type" CONTENT=3D"text/html; =
charset=3DISO-8859-1">


<STYLE>P.msoNormal {
	FONT-WEIGHT: normal; FONT-SIZE: 12pt; MARGIN-LEFT: 50px; COLOR: black; =
FONT-FAMILY: "MS Sans Serif", "sans serif"
}
LI.msoNormal {
	FONT-WEIGHT: normal; FONT-SIZE: 12pt; MARGIN-LEFT: 50px; COLOR: black; =
FONT-FAMILY: "MS Sans Serif", "sans serif"
}
BODY {
	FONT-WEIGHT: normal; FONT-SIZE: 12pt; MARGIN-LEFT: 50px; COLOR: black; =
BACKGROUND-REPEAT: repeat-y; FONT-FAMILY: "MS Sans Serif", "sans serif"
}
HR {
	WIDTH: 100%; COLOR: #00ffff; HEIGHT: 1px
}
</STYLE>

<META content=3D"MSHTML 6.00.2800.1400" name=3DGENERATOR></HEAD>
<BODY bgColor=3D#ffffff background=3Dcid:042070315@18032004-2701>
<DIV><SPAN class=3D042070315-18032004><FONT face=3D'"MS Sans Serif"'>I =
am attempting=20
to use JDK1.4 to implement SynchronousQueue.</FONT></SPAN></DIV>
<DIV><SPAN class=3D042070315-18032004><FONT=20
face=3D'"MS Sans Serif"'></FONT></SPAN>&nbsp;</DIV>
<DIV><SPAN class=3D042070315-18032004><FONT face=3D'"MS Sans =
Serif"'>Inner class,=20
SynchronousQueue.Node, extends AbstractQueuedSynchronizer and this =
class depends=20
on nanosecond technology not available in JDK1.4</FONT></SPAN></DIV>
<DIV><SPAN class=3D042070315-18032004><FONT=20
face=3D'"MS Sans Serif"'></FONT></SPAN>&nbsp;</DIV>
<DIV><SPAN class=3D042070315-18032004><FONT face=3D'"MS Sans Serif"'>I =
believe the=20
only methods required are</FONT></SPAN></DIV>
<DIV><SPAN class=3D042070315-18032004>head</SPAN></DIV>
<DIV><SPAN class=3D042070315-18032004>tail</SPAN></DIV>
<DIV><SPAN =
class=3D042070315-18032004>AbstractQueuedSynchronizer()</SPAN></DIV>
<DIV><SPAN class=3D042070315-18032004>setItem(Object o)</SPAN></DIV>
<DIV><SPAN class=3D042070315-18032004>
<DIV><SPAN class=3D042070315-18032004><FONT=20
face=3D'"MS Sans Serif"'>getItem()</FONT></SPAN></DIV>
<DIV><SPAN=20
class=3D042070315-18032004>waitForTake()</SPAN></DIV>waitForTake(nanos)<=
/SPAN></DIV>
<DIV><SPAN class=3D042070315-18032004>waitForPut()</SPAN></DIV>
<DIV><SPAN class=3D042070315-18032004>
<DIV><SPAN class=3D042070315-18032004>waitForPut(nanos)</SPAN></DIV>
<DIV><SPAN class=3D042070315-18032004></SPAN>&nbsp;</DIV>
<DIV><SPAN class=3D042070315-18032004><FONT face=3D'"MS Sans =
Serif"'>Looking at=20
Concurrent 1.3.3, which class would fufill the same semantics of this=20
"abbreviated" AbstractQueuedSynchronizer?</FONT></SPAN></DIV>
<DIV><SPAN class=3D042070315-18032004></SPAN>&nbsp;</DIV>
<DIV><SPAN class=3D042070315-18032004><FONT=20
face=3D'"MS Sans Serif"'>thanks</FONT></SPAN></DIV>
<DIV><SPAN=20
class=3D042070315-18032004>tommy~</SPAN></DIV></SPAN></DIV></BODY></HTML=
>

------_=_NextPart_001_01C40CFD.4B798B94--

------_=_NextPart_000_01C40CFD.4B798B94
Content-Type: image/jpeg;
	name="Notebook.jpg"
Content-Transfer-Encoding: base64
Content-Disposition: attachment;
	filename="Notebook.jpg"
Content-ID: <042070315@18032004-2701>

/9j/4AAQSkZJRgABAgEASABIAAD/7QSyUGhvdG9zaG9wIDMuMAA4QklNA+kAAAAAAHgAAwAAAEgA
SAAAAAADBgJS//f/9wMPAlsDRwUoA/wAAgAAAEgASAAAAAAC2AIoAAEAAABkAAAAAQADAwMAAAAB
Jw8AAQABAAAAAAAAAAAAAAAAYAgAGQGQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA4
QklNA+0AAAAAABAASAAAAAEAAQBIAAAAAQABOEJJTQPzAAAAAAAIAAAAAAAAAAA4QklNBAoAAAAA
AAEAADhCSU0nEAAAAAAACgABAAAAAAAAAAI4QklNA/UAAAAAAEgAL2ZmAAEAbGZmAAYAAAAAAAEA
L2ZmAAEAoZmaAAYAAAAAAAEAMgAAAAEAWgAAAAYAAAAAAAEANQAAAAEALQAAAAYAAAAAAAE4QklN
A/gAAAAAAHAAAP////////////////////////////8D6AAAAAD/////////////////////////
////A+gAAAAA/////////////////////////////wPoAAAAAP//////////////////////////
//8D6AAAOEJJTQQAAAAAAAACAAA4QklNBAIAAAAAAAIAADhCSU0ECAAAAAAAEAAAAAEAAAJAAAAC
QAAAAAA4QklNBAkAAAAAAqIAAAABAAAAgAAAAAIAAAGAAAADAAAAAoYAGAAB/9j/4AAQSkZJRgAB
AgEASABIAAD//gAnRmlsZSB3cml0dGVuIGJ5IEFkb2JlIFBob3Rvc2hvcKggNC4wAP/uAA5BZG9i
ZQBkgAAAAAH/2wCEAAwICAgJCAwJCQwRCwoLERUPDAwPFRgTExUTExgRDAwMDAwMEQwMDAwMDAwM
DAwMDAwMDAwMDAwMDAwMDAwMDAwBDQsLDQ4NEA4OEBQODg4UFA4ODg4UEQwMDAwMEREMDAwMDAwR
DAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDP/AABEIAAIAgAMBIgACEQEDEQH/3QAEAAj/xAE/
AAABBQEBAQEBAQAAAAAAAAADAAECBAUGBwgJCgsBAAEFAQEBAQEBAAAAAAAAAAEAAgMEBQYHCAkK
CxAAAQQBAwIEAgUHBggFAwwzAQACEQMEIRIxBUFRYRMicYEyBhSRobFCIyQVUsFiMzRygtFDByWS
U/Dh8WNzNRaisoMmRJNUZEXCo3Q2F9JV4mXys4TD03Xj80YnlKSFtJXE1OT0pbXF1eX1VmZ2hpam
tsbW5vY3R1dnd4eXp7fH1+f3EQACAgECBAQDBAUGBwcGBTUBAAIRAyExEgRBUWFxIhMFMoGRFKGx
QiPBUtHwMyRi4XKCkkNTFWNzNPElBhaisoMHJjXC0kSTVKMXZEVVNnRl4vKzhMPTdePzRpSkhbSV
xNTk9KW1xdXl9VZmdoaWprbG1ub2JzdHV2d3h5ent8f/2gAMAwEAAhEDEQA/APROif0Kv6X81T9L
j+ar/m/5K0F8rJJIfqlJfKySKn6pSXyskkp+qUl8rJJKfqlJfKySSn6pSXyskkp+qUl8rJJKfqlJ
fKySSn//2ThCSU0EBgAAAAAABwABAAAAAQEA//4AJ0ZpbGUgd3JpdHRlbiBieSBBZG9iZSBQaG90
b3Nob3CoIDQuMAD/7gAOQWRvYmUAZIAAAAAB/9sAhAAMCAgNCQ0VDAwVGhQQFBogGxoaGyAiFxcX
FxciEQwMDAwMDBEMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMAQ0NDREOERsRERsUDg4OFBQO
Dg4OFBEMDAwMDBERDAwMDAwMEQwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAz/wAARCAAYBaAD
ASIAAhEBAxEB/90ABABa/8QBPwAAAQUBAQEBAQEAAAAAAAAAAwABAgQFBgcICQoLAQABBQEBAQEB
AQAAAAAAAAABAAIDBAUGBwgJCgsQAAEEAQMCBAIFBwYIBQMMMwEAAhEDBCESMQVBUWETInGBMgYU
kaGxQiMkFVLBYjM0coLRQwclklPw4fFjczUWorKDJkSTVGRFwqN0NhfSVeJl8rOEw9N14/NGJ5Sk
hbSVxNTk9KW1xdXl9VZmdoaWprbG1ub2N0dXZ3eHl6e3x9fn9xEAAgIBAgQEAwQFBgcHBgU1AQAC
EQMhMRIEQVFhcSITBTKBkRShsUIjwVLR8DMkYuFygpJDUxVjczTxJQYWorKDByY1wtJEk1SjF2RF
VTZ0ZeLys4TD03Xj80aUpIW0lcTU5PSltcXV5fVWZnaGlqa2xtbm9ic3R1dnd4eXp7fH/9oADAMB
AAIRAxEAPwCv0T+n4/8AxrP+qavW15J0U/r+P/xrP+qavWg8eKElsWSHZfXWYe4A+ZUMjIFTJBE/
Fc1kXbg63mJP+amk0uesGqdc19Sup2ZrLmWGQxwLR4B35v8A0V0qKlJJJIqUkkkkpSSSSSlJJJJK
UkkkkpSSSSSlJJJJKUkkkkpSSSSSlJJJJKUkkkkpSSSSSlJJJJKUkkkkpSSSSSlJJJJKUkkkkpSS
SSSlJJJJKUkkkkpSSSSSlJJJJKUkkkkpSSSSSlJJJJKUkkkkpSSSSSlJJJJKUkkkkpSSSSSlJJJJ
KUkkkkpSSSSSlJJJJKUkkkkpSSSSSlJJJJKUkkkkpSSSSSlJJJJKUkkkkpSSSSSlJJJJKUkkkkpS
SSSSlJJJJKUkkkkpSSSSSlJJJJKUkkkkpSSSSSlJJJJKUkkkkpSSSSSlJJJJKUkkkkpSSSSSlJJJ
JKUkkkkpSSSSSlJJJJKUkkkkpSSSSSlJJJJKUkkkkpSSSSSlJJJJKUkkkkpSSSSSlJJJJKUkkkkp
SSSSSlJJJJKUkkkkpSSSSSlJJJJKUkkkkpSSSSSlJJJJKUkkkkpSSSSSlJJJJKUkkkkpSSSSSlJJ
JJKUkkkkpSSSSSn/0J9G6oKn04zKKXOdYA6x7d1kOP8Ag/3Hs/MXY/sOl/0hYfCT/wCQavnZJArQ
/S1HTXVN21+weYa7/vqzcroeQ+Q3XcYOn/mbF89pIaJfpboXRK+k1uDQPUsILyONPotZ/JatRfKq
SSX6qSXyqkip+qkl8qpJKfqpJfKqSSn6qSXyqkkp+qkl8qpJKfqpJfKqSSn6qSXyqkkp+qkl8qpJ
KfqpJfKqSSn6qSXyqkkp+qkl8qpJKfqpJfKqSSn6qSXyqkkp+qkl8qpJKfqpJfKqSSn6qSXyqkkp
+qkl8qpJKfqpJfKqSSn6qSXyqkkp+qkl8qpJKfqpJfKqSSn6qSXyqkkp+qkl8qpJKfqpJfKqSSn6
qSXyqkkp+qkl8qpJKfqpJfKqSSn6qSXyqkkp+qkl8qpJKfqpJfKqSSn6qSXyqkkp+qkl8qpJKfqp
JfKqSSn6qSXyqkkp+qkl8qpJKfqpJfKqSSn6qSXyqkkp+qkl8qpJKfqpJfKqSSn6qSXyqkkp+qkl
8qpJKfqpJfKqSSn6qSXyqkkp+qkl8qpJKfqpJfKqSSn6qSXyqkkp+qkl8qpJKfqpJfKqSSn6qSXy
qkkp+qkl8qpJKfqpJfKqSSn6qSXyqkkp+qkl8qpJKfqpJfKqSSn6qSXyqkkp+qkl8qpJKfqpJfKq
SSn6qSXyqkkp+qkl8qpJKfqpJfKqSSn6qSXyqkkp+qkl8qpJKfqpJfKqSSn6qSXyqkkp+qkl8qpJ
KfqpJfKqSSn6qSXyqkkp+qkl8qpJKfqpJfKqSSn6qSXyqkkp+qkl8qpJKfqpJfKqSSn6qSXyqkkp
+qkl8qpJKfqpJfKqSSn6qSXyqkkp+qkl8qpJKfqpJfKqSSn6qSXyqkkp+qkl8qpJKfqpJfKqSSn6
qSXyqkkp+qkl8qpJKfqpJfKqSSn6qSXyqkkp+qkl8qpJKfqpJfKqSSn/2Q==

------_=_NextPart_000_01C40CFD.4B798B94--

From _shawn_curry_@excite.com  Wed Mar 24 06:07:23 2004
From: _shawn_curry_@excite.com (Shawn Curry)
Date: Wed, 24 Mar 2004 01:07:23 -0500 (EST)
Subject: [concurrency-interest] Spin problem?
Message-ID: <20040324060723.5E5BEBFB1@xprdmailfe13.nwk.excite.com>

I think I may be experiencing the spin problem that's described on jsr-166 site.  I am on a windows machine(it happens on both 2000 Server and XP). It seems to peg my cpu to 100% while I wait on FutureTasks.  There is a brief window where no thread is waiting on a FutureTask, and during this time the cpu returns to normal.

What's the eta on 1.5 beta 2?  Or do you have any suggestions for a work-around?

Thanks
Shawn

_______________________________________________
Join Excite! - http://www.excite.com
The most personalized portal on the Web!

From dl@cs.oswego.edu  Wed Mar 24 12:55:35 2004
From: dl@cs.oswego.edu (Doug Lea)
Date: Wed, 24 Mar 2004 07:55:35 -0500
Subject: [concurrency-interest] Spin problem?
In-Reply-To: <20040324060723.5E5BEBFB1@xprdmailfe13.nwk.excite.com>
References: <20040324060723.5E5BEBFB1@xprdmailfe13.nwk.excite.com>
Message-ID: <16481.34119.759758.357845@altair.cs.oswego.edu>

> I think I may be experiencing the spin problem that's described on
> jsr-166 site.  I am on a windows machine(it happens on both 2000
> Server and XP).

Yes, this happens on all Win32 platforms.

> What's the eta on 1.5 beta 2?

This has been slipped to late May. This is very annoying to us in
JSR166. Besides the windows spin bug, the APIs in beta1 were from
before public review, and the longer they delay beta2, the more people
will need to adjust their code when the updated APIs appear. But
apparently other Tiger JSRs are enough behind that they needed to push
back schedules.

> Or do you have any suggestions for a work-around?

Sorry, I don't think there is one. The only advice I have is that if
you are developing real applications for 1.5 using beta1, you should
use the jsr166.jar from our site (which has the updated APIs) and
run/test on linux-x86 or solaris-sparc, for which the underlying
hotspot support has been stable for a long time. Even with this, you
may still encounter minor snags, for example because the javac
compiler has changed since beta1.

Alternatively, if you or anyone else are developing "serious" enough
applications that you could help run tests and submit reports, I think
it is still possible to get into an early-access program to get
current builds. (At this moment, the internal unreleased builds (43+)
are in sync with JSR166.) If you are interested, please get in touch
with me and I'll pursue.

-Doug

From calum.maclean@aspectssoftware.com  Fri Mar 26 14:32:32 2004
From: calum.maclean@aspectssoftware.com (Calum MacLean)
Date: Fri, 26 Mar 2004 14:32:32 -0000
Subject: [concurrency-interest] CancellationException
Message-ID: <F31784173128174A80020EDA7E32BB61134F4E@ed-serv10.aspects-sw.com>

This is a multi-part message in MIME format.

------_=_NextPart_001_01C4133F.2CAF5693
Content-Type: text/plain;
	charset="US-ASCII"
Content-Transfer-Encoding: quoted-printable

Hi

=20

I'm just starting having a look through java.util.Concurrent in 1.5.0
Beta.

=20

Future.get() can throw a CancellationException.  I'm wondering if a
CancellationException should be checked instead of unchecked?

My reasoning would be that you don't know on calling get() if some other
thread will cancel the future; so you should always be prepared to allow
for it being cancelled.

In general, I tend to think that for all (or nearly all) occasions when
an unchecked exception may be thrown, you should be able to perform some
check in advance of calling the method to ensure that the exception
won't be thrown when you call the method.  E.g. List.get(index) - you
can (should) call List.size() before to check if index is valid.

=20

Also, if Future.get() can throw a CancellationException, shouldn't
Future.get(...timeout...) also be documented to throw
CancellationException?  (It currently isn't).  I notice that
FutureTask.get(...timeout...) is documented to throw
CancellationException.

=20

Calum


------_=_NextPart_001_01C4133F.2CAF5693
Content-Type: text/html;
	charset="US-ASCII"
Content-Transfer-Encoding: quoted-printable

<html>

<head>
<meta http-equiv=3DContent-Type content=3D"text/html; =
charset=3Dus-ascii">
<meta name=3DGenerator content=3D"Microsoft Word 10 (filtered)">

<style>
<!--
 /* Font Definitions */
 @font-face
	{font-family:PMingLiU;
	panose-1:2 2 3 0 0 0 0 0 0 0;}
@font-face
	{font-family:"\@PMingLiU";
	panose-1:2 2 3 0 0 0 0 0 0 0;}
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{margin-top:2.0pt;
	margin-right:0cm;
	margin-bottom:2.0pt;
	margin-left:0cm;
	font-size:12.0pt;
	font-family:"Times New Roman";}
a:link, span.MsoHyperlink
	{color:blue;
	text-decoration:underline;}
a:visited, span.MsoHyperlinkFollowed
	{color:purple;
	text-decoration:underline;}
span.EmailStyle17
	{font-family:Arial;
	color:windowtext;}
@page Section1
	{size:612.0pt 792.0pt;
	margin:72.0pt 90.0pt 72.0pt 90.0pt;}
div.Section1
	{page:Section1;}
-->
</style>

</head>

<body lang=3DEN-US link=3Dblue vlink=3Dpurple>

<div class=3DSection1>

<p class=3DMsoNormal><font size=3D2 face=3DArial><span lang=3DEN-GB =
style=3D'font-size:
10.0pt;font-family:Arial'>Hi</span></font></p>

<p class=3DMsoNormal><font size=3D2 face=3DArial><span lang=3DEN-GB =
style=3D'font-size:
10.0pt;font-family:Arial'>&nbsp;</span></font></p>

<p class=3DMsoNormal><font size=3D2 face=3DArial><span lang=3DEN-GB =
style=3D'font-size:
10.0pt;font-family:Arial'>I&#8217;m just starting having a look through
java.util.Concurrent in 1.5.0 Beta.</span></font></p>

<p class=3DMsoNormal><font size=3D2 face=3DArial><span lang=3DEN-GB =
style=3D'font-size:
10.0pt;font-family:Arial'>&nbsp;</span></font></p>

<p class=3DMsoNormal><font size=3D2 face=3DArial><span lang=3DEN-GB =
style=3D'font-size:
10.0pt;font-family:Arial'>Future.get() can throw a =
CancellationException.&nbsp;
I&#8217;m wondering if a CancellationException should be checked instead =
of unchecked?</span></font></p>

<p class=3DMsoNormal><font size=3D2 face=3DArial><span lang=3DEN-GB =
style=3D'font-size:
10.0pt;font-family:Arial'>My reasoning would be that you don&#8217;t =
know on
calling get() if some other thread will cancel the future; so you should =
always
be prepared to allow for it being cancelled.</span></font></p>

<p class=3DMsoNormal><font size=3D2 face=3DArial><span lang=3DEN-GB =
style=3D'font-size:
10.0pt;font-family:Arial'>In general, I tend to think that for all (or =
nearly
all) occasions when an unchecked exception may be thrown, you should be =
able to
perform some check in advance of calling the method to ensure that the
exception won&#8217;t be thrown when you call the method.&nbsp; E.g. =
List.get(index)
&#8211; you can (should) call List.size() before to check if index is =
valid.</span></font></p>

<p class=3DMsoNormal><font size=3D2 face=3DArial><span lang=3DEN-GB =
style=3D'font-size:
10.0pt;font-family:Arial'>&nbsp;</span></font></p>

<p class=3DMsoNormal><font size=3D2 face=3DArial><span lang=3DEN-GB =
style=3D'font-size:
10.0pt;font-family:Arial'>Also, if Future.get() can throw a =
CancellationException,
shouldn&#8217;t Future.get(&#8230;timeout&#8230;) also be documented to =
throw
CancellationException?&nbsp; (It currently isn&#8217;t).&nbsp; I notice =
that FutureTask.get(&#8230;timeout&#8230;)
is documented to throw CancellationException.</span></font></p>

<p class=3DMsoNormal><font size=3D2 face=3DArial><span lang=3DEN-GB =
style=3D'font-size:
10.0pt;font-family:Arial'>&nbsp;</span></font></p>

<p class=3DMsoNormal><font size=3D2 face=3DArial><span lang=3DEN-GB =
style=3D'font-size:
10.0pt;font-family:Arial'>Calum</span></font></p>

</div>

</body>

</html>
=00
------_=_NextPart_001_01C4133F.2CAF5693--

From Victor.Luchangco@Sun.COM  Fri Mar 26 17:12:42 2004
From: Victor.Luchangco@Sun.COM (Victor Luchangco)
Date: Fri, 26 Mar 2004 12:12:42 -0500
Subject: [concurrency-interest] CSJP deadline extended
Message-ID: <4064648A.6060005@Sun.COM>

Dear Colleagues,

The submission deadline for the

   Workshop on Concurrency and Synchronization in Java Programs

has been extended by a week to April 11, 2004.
Please see the webpage at

   http://www.podc.org/podc2004/csjp-cfp.html

for details on how to submit papers to the workshop.

                               Victor

From dl@cs.oswego.edu  Fri Mar 26 17:15:43 2004
From: dl@cs.oswego.edu (Doug Lea)
Date: Fri, 26 Mar 2004 12:15:43 -0500
Subject: [concurrency-interest] CancellationException
In-Reply-To: <F31784173128174A80020EDA7E32BB61134F4E@ed-serv10.aspects-sw.com>
References: <F31784173128174A80020EDA7E32BB61134F4E@ed-serv10.aspects-sw.com>
Message-ID: <16484.25919.619906.289526@altair.cs.oswego.edu>

> In general, I tend to think that for all (or nearly all) occasions when
> an unchecked exception may be thrown, you should be able to perform some
> check in advance of calling the method to ensure that the exception
> won't be thrown when you call the method.  E.g. List.get(index) - you
> can (should) call List.size() before to check if index is valid.

This is a good rule of thumb in sequential programming, but
doesn't usually apply in concurrent programming. For example, 
  if (!queue.isEmpty()) x = queue.remove();
is a bad idea unless you ensure that access to queue is
purely single-threaded. (Instead use queue.poll()).

>  I'm wondering if a
> CancellationException should be checked instead of unchecked?

The expert group discussed the options, but ultimately it was an easy
decision. CancellationException is clearly a form of
IllegalStateException.

> Also, if Future.get() can throw a CancellationException, shouldn't
> Future.get(...timeout...) also be documented to throw
> CancellationException?  (It currently isn't). 

Thanks. This currently wasn't, back in November when the snapshot that
made it into beta1 was integrated into J2SE/hotspot, but now is.
The actual current and hopefully final versions (that will be 
in beta2 when it ships) are at
  http://gee.cs.oswego.edu/dl/concurrency-interest/index.html

-Doug


From c1johnso@us.ibm.com  Fri Mar 26 18:46:39 2004
From: c1johnso@us.ibm.com (Chris D Johnson)
Date: Fri, 26 Mar 2004 12:46:39 -0600
Subject: [concurrency-interest] Chris D Johnson/Rochester/IBM is out of the office.
Message-ID: <OFD803A9FB.5526784F-ON86256E63.0067262A-86256E63.0067262B@us.ibm.com>




I will be out of the office starting  03/26/2004 and will not return until
03/29/2004.

I will respond to your message upon my return.  If you need immediate
assistance, you can contact my backup, Todd Johnson or my manager, Joe
Bockhold


From calum.maclean@aspectssoftware.com  Fri Mar 26 19:58:26 2004
From: calum.maclean@aspectssoftware.com (Calum MacLean)
Date: Fri, 26 Mar 2004 19:58:26 -0000
Subject: [concurrency-interest] CancellationException
Message-ID: <F31784173128174A80020EDA7E32BB61134F4F@ed-serv10.aspects-sw.com>

This is a multi-part message in MIME format.

------_=_NextPart_001_01C4136C.B3725CAB
Content-Type: text/plain;
	charset="utf-8"
Content-Transfer-Encoding: base64

VGhhbmtzIGZvciB0aGUgcHJvbXB0IHJlc3BvbnNlLg0KIA0KSSB1bmRlcnN0YW5kIHRoYXQsIGlu
IGNvbmN1cnJlbnQgcHJvZ3JhbW1pbmcsIHlvdSBjYW4ndCBkbyBwcmUtY2FsbCBjaGVja3MgaW4g
dGhlIHNhbWUgd2F5IGFzIGluIHNlcXVlbnRpYWwgcHJvZ3JhbW1pbmcuDQpBbmQgaW4gYSB3YXkg
dGhpcyB3YXMgcHJlY2lzZWx5IG15IHBvaW50IC0gaWYgeW91IGRvbid0IGtub3cgd2hldGhlciB0
aGUgZnV0dXJlIHdpbGwgYmUgY2FuY2VsbGVkLCB0aGVuIHlvdSBzaG91bGQgYmUgZm9yY2VkIHRv
IGRlYWwgd2l0aCB0aGUgc2l0dWF0aW9uIHdoZXJlIGl0IGlzIGNhbmNlbGxlZCAtIGkuZS4gQ2Fu
Y2VsbGF0aW9uRXhjZXB0aW9uIHNob3VsZCBiZSBjaGVja2VkLCBzbyB0aGF0IHlvdSBoYXZlIHRv
IGNhdGNoIGl0Lg0KIA0KV2l0aCBpdCBjdXJyZW50bHkgYmVpbmcgdW5jaGVja2VkLCBkb2VzIHRo
YXQgbWVhbiB0aGF0IEkgaGF2ZSB0byByZW1lbWJlciB0byB1c2UgYSBjYXRjaCAoQ2FuY2VsbGF0
aW9uRXhjZXB0aW9uKSBjbGF1c2UgZXZlcnkgdGltZSBJIGNhbGwgRnV0dXJlLmdldCgpLCByYXRo
ZXIgdGhhbiBoYXZpbmcgdGhlIGNvbXBpbGVyIHJlbWluZCBtZT8NCiANCkZvciBtZSwgYW4gSWxs
ZWdhbFN0YXRlRXhjZXB0aW9uIHN1Z2dlc3RzIGEgcHJvZ3JhbW1pbmcgZXJyb3IgLSB5b3Ugc2hv
dWxkIGhhdmUgY2hlY2tlZCB0aGF0IHRoZSBtZXRob2QgY291bGQgYmUgY2FsbGVkIGJlZm9yZSB5
b3UgY2FsbGVkIGl0LCBhbmQgeW91IG5lZWQgdG8gZml4IHlvdXIgY29kZSB0byBlbnN1cmUgdGhh
dCBpdCBjYW4ndCBoYXBwZW4uDQogDQpDYWx1bQ0KIA0KDQoJLS0tLS1PcmlnaW5hbCBNZXNzYWdl
LS0tLS0gDQoJRnJvbTogRG91ZyBMZWEgW21haWx0bzpkbEBjcy5vc3dlZ28uZWR1XSANCglTZW50
OiBGcmkgMjYvMDMvMjAwNCAxNzoxNSANCglUbzogQ2FsdW0gTWFjTGVhbiANCglDYzogY29uY3Vy
cmVuY3ktaW50ZXJlc3RAYWx0YWlyLmNzLm9zd2Vnby5lZHUgDQoJU3ViamVjdDogUmU6IFtjb25j
dXJyZW5jeS1pbnRlcmVzdF0gQ2FuY2VsbGF0aW9uRXhjZXB0aW9uDQoJDQoJDQoNCgk+IEluIGdl
bmVyYWwsIEkgdGVuZCB0byB0aGluayB0aGF0IGZvciBhbGwgKG9yIG5lYXJseSBhbGwpIG9jY2Fz
aW9ucyB3aGVuDQoJPiBhbiB1bmNoZWNrZWQgZXhjZXB0aW9uIG1heSBiZSB0aHJvd24sIHlvdSBz
aG91bGQgYmUgYWJsZSB0byBwZXJmb3JtIHNvbWUNCgk+IGNoZWNrIGluIGFkdmFuY2Ugb2YgY2Fs
bGluZyB0aGUgbWV0aG9kIHRvIGVuc3VyZSB0aGF0IHRoZSBleGNlcHRpb24NCgk+IHdvbid0IGJl
IHRocm93biB3aGVuIHlvdSBjYWxsIHRoZSBtZXRob2QuICBFLmcuIExpc3QuZ2V0KGluZGV4KSAt
IHlvdQ0KCT4gY2FuIChzaG91bGQpIGNhbGwgTGlzdC5zaXplKCkgYmVmb3JlIHRvIGNoZWNrIGlm
IGluZGV4IGlzIHZhbGlkLg0KCQ0KCVRoaXMgaXMgYSBnb29kIHJ1bGUgb2YgdGh1bWIgaW4gc2Vx
dWVudGlhbCBwcm9ncmFtbWluZywgYnV0DQoJZG9lc24ndCB1c3VhbGx5IGFwcGx5IGluIGNvbmN1
cnJlbnQgcHJvZ3JhbW1pbmcuIEZvciBleGFtcGxlLA0KCSAgaWYgKCFxdWV1ZS5pc0VtcHR5KCkp
IHggPSBxdWV1ZS5yZW1vdmUoKTsNCglpcyBhIGJhZCBpZGVhIHVubGVzcyB5b3UgZW5zdXJlIHRo
YXQgYWNjZXNzIHRvIHF1ZXVlIGlzDQoJcHVyZWx5IHNpbmdsZS10aHJlYWRlZC4gKEluc3RlYWQg
dXNlIHF1ZXVlLnBvbGwoKSkuDQoJDQoJPiAgSSdtIHdvbmRlcmluZyBpZiBhDQoJPiBDYW5jZWxs
YXRpb25FeGNlcHRpb24gc2hvdWxkIGJlIGNoZWNrZWQgaW5zdGVhZCBvZiB1bmNoZWNrZWQ/DQoJ
DQoJVGhlIGV4cGVydCBncm91cCBkaXNjdXNzZWQgdGhlIG9wdGlvbnMsIGJ1dCB1bHRpbWF0ZWx5
IGl0IHdhcyBhbiBlYXN5DQoJZGVjaXNpb24uIENhbmNlbGxhdGlvbkV4Y2VwdGlvbiBpcyBjbGVh
cmx5IGEgZm9ybSBvZg0KCUlsbGVnYWxTdGF0ZUV4Y2VwdGlvbi4NCgkNCgk+IEFsc28sIGlmIEZ1
dHVyZS5nZXQoKSBjYW4gdGhyb3cgYSBDYW5jZWxsYXRpb25FeGNlcHRpb24sIHNob3VsZG4ndA0K
CT4gRnV0dXJlLmdldCguLi50aW1lb3V0Li4uKSBhbHNvIGJlIGRvY3VtZW50ZWQgdG8gdGhyb3cN
Cgk+IENhbmNlbGxhdGlvbkV4Y2VwdGlvbj8gIChJdCBjdXJyZW50bHkgaXNuJ3QpLg0KCQ0KCVRo
YW5rcy4gVGhpcyBjdXJyZW50bHkgd2Fzbid0LCBiYWNrIGluIE5vdmVtYmVyIHdoZW4gdGhlIHNu
YXBzaG90IHRoYXQNCgltYWRlIGl0IGludG8gYmV0YTEgd2FzIGludGVncmF0ZWQgaW50byBKMlNF
L2hvdHNwb3QsIGJ1dCBub3cgaXMuDQoJVGhlIGFjdHVhbCBjdXJyZW50IGFuZCBob3BlZnVsbHkg
ZmluYWwgdmVyc2lvbnMgKHRoYXQgd2lsbCBiZQ0KCWluIGJldGEyIHdoZW4gaXQgc2hpcHMpIGFy
ZSBhdA0KCSAgaHR0cDovL2dlZS5jcy5vc3dlZ28uZWR1L2RsL2NvbmN1cnJlbmN5LWludGVyZXN0
L2luZGV4Lmh0bWwNCgkNCgktRG91Zw0KCQ0KCQ0KDQo=

------_=_NextPart_001_01C4136C.B3725CAB
Content-Type: text/html;
	charset="utf-8"
Content-Transfer-Encoding: base64

PE1FVEEgSFRUUC1FUVVJVj0iQ29udGVudC1UeXBlIiBDT05URU5UPSJ0ZXh0L2h0bWw7IGNoYXJz
ZXQ9dXRmLTgiPgo8IURPQ1RZUEUgSFRNTCBQVUJMSUMgIi0vL1czQy8vRFREIEhUTUwgMy4yLy9F
TiI+CjxIVE1MPgo8SEVBRD4KCjxNRVRBIE5BTUU9IkdlbmVyYXRvciIgQ09OVEVOVD0iTVMgRXhj
aGFuZ2UgU2VydmVyIHZlcnNpb24gNi4wLjY0ODcuMSI+CjxUSVRMRT5SZTogW2NvbmN1cnJlbmN5
LWludGVyZXN0XSBDYW5jZWxsYXRpb25FeGNlcHRpb248L1RJVExFPgo8L0hFQUQ+CjxCT0RZIGRp
cj1sdHI+CjxESVY+VGhhbmtzIGZvciB0aGUgcHJvbXB0IHJlc3BvbnNlLjwvRElWPgo8RElWPiZu
YnNwOzwvRElWPgo8RElWPkkgdW5kZXJzdGFuZCB0aGF0LCBpbiBjb25jdXJyZW50IHByb2dyYW1t
aW5nLCB5b3UgY2FuJ3QgZG8gcHJlLWNhbGwgY2hlY2tzIAppbiB0aGUgc2FtZSB3YXkgYXMgaW4g
c2VxdWVudGlhbCBwcm9ncmFtbWluZy48L0RJVj4KPERJVj5BbmQgaW4gYSB3YXkgdGhpcyB3YXMg
cHJlY2lzZWx5IG15IHBvaW50IC0gaWYgeW91IGRvbid0IGtub3cgd2hldGhlciB0aGUgCmZ1dHVy
ZSB3aWxsIGJlIGNhbmNlbGxlZCwgdGhlbiB5b3Ugc2hvdWxkIGJlIGZvcmNlZCB0byBkZWFsIHdp
dGggdGhlIHNpdHVhdGlvbiAKd2hlcmUgaXQgaXMgY2FuY2VsbGVkIC0gaS5lLiBDYW5jZWxsYXRp
b25FeGNlcHRpb24gc2hvdWxkIGJlIGNoZWNrZWQsIHNvIHRoYXQgCnlvdSBoYXZlIHRvIGNhdGNo
IGl0LjwvRElWPgo8RElWPiZuYnNwOzwvRElWPgo8RElWPldpdGggaXQgY3VycmVudGx5IGJlaW5n
IHVuY2hlY2tlZCwgZG9lcyB0aGF0IG1lYW4gdGhhdCBJIGhhdmUgdG8gcmVtZW1iZXIgCnRvIHVz
ZSBhIGNhdGNoIChDYW5jZWxsYXRpb25FeGNlcHRpb24pIGNsYXVzZSBldmVyeSB0aW1lIEkgY2Fs
bCBGdXR1cmUuZ2V0KCksIApyYXRoZXIgdGhhbiBoYXZpbmcgdGhlIGNvbXBpbGVyIHJlbWluZCBt
ZT88L0RJVj4KPERJVj4mbmJzcDs8L0RJVj4KPERJVj5Gb3IgbWUsIGFuIElsbGVnYWxTdGF0ZUV4
Y2VwdGlvbiBzdWdnZXN0cyBhIHByb2dyYW1taW5nIGVycm9yIC0geW91IHNob3VsZCAKaGF2ZSBj
aGVja2VkIHRoYXQgdGhlIG1ldGhvZCBjb3VsZCBiZSBjYWxsZWQgYmVmb3JlIHlvdSBjYWxsZWQg
aXQsIGFuZCB5b3UgbmVlZCAKdG8gZml4IHlvdXIgY29kZSB0byBlbnN1cmUgdGhhdCBpdCBjYW4n
dCBoYXBwZW4uPC9ESVY+CjxESVY+Jm5ic3A7PC9ESVY+CjxESVY+Q2FsdW08L0RJVj4KPERJVj4m
bmJzcDs8L0RJVj4KPEJMT0NLUVVPVEUgZGlyPWx0ciBzdHlsZT0iTUFSR0lOLVJJR0hUOiAwcHgi
PgogIDxESVY+PEZPTlQgc2l6ZT0yPi0tLS0tT3JpZ2luYWwgTWVzc2FnZS0tLS0tIDxCUj48Qj5G
cm9tOjwvQj4gRG91ZyBMZWEgCiAgW21haWx0bzpkbEBjcy5vc3dlZ28uZWR1XSA8QlI+PEI+U2Vu
dDo8L0I+IEZyaSAyNi8wMy8yMDA0IDE3OjE1IDxCUj48Qj5Ubzo8L0I+IAogIENhbHVtIE1hY0xl
YW4gPEJSPjxCPkNjOjwvQj4gY29uY3VycmVuY3ktaW50ZXJlc3RAYWx0YWlyLmNzLm9zd2Vnby5l
ZHUgCiAgPEJSPjxCPlN1YmplY3Q6PC9CPiBSZTogW2NvbmN1cnJlbmN5LWludGVyZXN0XSAKICBD
YW5jZWxsYXRpb25FeGNlcHRpb248QlI+PEJSPjwvRk9OVD48L0RJVj4KICA8UD48Rk9OVCBzaXpl
PTI+Jmd0OyBJbiBnZW5lcmFsLCBJIHRlbmQgdG8gdGhpbmsgdGhhdCBmb3IgYWxsIChvciBuZWFy
bHkgYWxsKSAKICBvY2Nhc2lvbnMgd2hlbjxCUj4mZ3Q7IGFuIHVuY2hlY2tlZCBleGNlcHRpb24g
bWF5IGJlIHRocm93biwgeW91IHNob3VsZCBiZSAKICBhYmxlIHRvIHBlcmZvcm0gc29tZTxCUj4m
Z3Q7IGNoZWNrIGluIGFkdmFuY2Ugb2YgY2FsbGluZyB0aGUgbWV0aG9kIHRvIGVuc3VyZSAKICB0
aGF0IHRoZSBleGNlcHRpb248QlI+Jmd0OyB3b24ndCBiZSB0aHJvd24gd2hlbiB5b3UgY2FsbCB0
aGUgbWV0aG9kLiZuYnNwOyAKICBFLmcuIExpc3QuZ2V0KGluZGV4KSAtIHlvdTxCUj4mZ3Q7IGNh
biAoc2hvdWxkKSBjYWxsIExpc3Quc2l6ZSgpIGJlZm9yZSB0byAKICBjaGVjayBpZiBpbmRleCBp
cyB2YWxpZC48QlI+PEJSPlRoaXMgaXMgYSBnb29kIHJ1bGUgb2YgdGh1bWIgaW4gc2VxdWVudGlh
bCAKICBwcm9ncmFtbWluZywgYnV0PEJSPmRvZXNuJ3QgdXN1YWxseSBhcHBseSBpbiBjb25jdXJy
ZW50IHByb2dyYW1taW5nLiBGb3IgCiAgZXhhbXBsZSw8QlI+Jm5ic3A7IGlmICghcXVldWUuaXNF
bXB0eSgpKSB4ID0gcXVldWUucmVtb3ZlKCk7PEJSPmlzIGEgYmFkIGlkZWEgCiAgdW5sZXNzIHlv
dSBlbnN1cmUgdGhhdCBhY2Nlc3MgdG8gcXVldWUgaXM8QlI+cHVyZWx5IHNpbmdsZS10aHJlYWRl
ZC4gKEluc3RlYWQgCiAgdXNlIHF1ZXVlLnBvbGwoKSkuPEJSPjxCUj4mZ3Q7Jm5ic3A7IEknbSB3
b25kZXJpbmcgaWYgYTxCUj4mZ3Q7IAogIENhbmNlbGxhdGlvbkV4Y2VwdGlvbiBzaG91bGQgYmUg
Y2hlY2tlZCBpbnN0ZWFkIG9mIHVuY2hlY2tlZD88QlI+PEJSPlRoZSAKICBleHBlcnQgZ3JvdXAg
ZGlzY3Vzc2VkIHRoZSBvcHRpb25zLCBidXQgdWx0aW1hdGVseSBpdCB3YXMgYW4gZWFzeTxCUj5k
ZWNpc2lvbi4gCiAgQ2FuY2VsbGF0aW9uRXhjZXB0aW9uIGlzIGNsZWFybHkgYSBmb3JtIAogIG9m
PEJSPklsbGVnYWxTdGF0ZUV4Y2VwdGlvbi48QlI+PEJSPiZndDsgQWxzbywgaWYgRnV0dXJlLmdl
dCgpIGNhbiB0aHJvdyBhIAogIENhbmNlbGxhdGlvbkV4Y2VwdGlvbiwgc2hvdWxkbid0PEJSPiZn
dDsgRnV0dXJlLmdldCguLi50aW1lb3V0Li4uKSBhbHNvIGJlIAogIGRvY3VtZW50ZWQgdG8gdGhy
b3c8QlI+Jmd0OyBDYW5jZWxsYXRpb25FeGNlcHRpb24/Jm5ic3A7IChJdCBjdXJyZW50bHkgCiAg
aXNuJ3QpLjxCUj48QlI+VGhhbmtzLiBUaGlzIGN1cnJlbnRseSB3YXNuJ3QsIGJhY2sgaW4gTm92
ZW1iZXIgd2hlbiB0aGUgCiAgc25hcHNob3QgdGhhdDxCUj5tYWRlIGl0IGludG8gYmV0YTEgd2Fz
IGludGVncmF0ZWQgaW50byBKMlNFL2hvdHNwb3QsIGJ1dCBub3cgCiAgaXMuPEJSPlRoZSBhY3R1
YWwgY3VycmVudCBhbmQgaG9wZWZ1bGx5IGZpbmFsIHZlcnNpb25zICh0aGF0IHdpbGwgYmU8QlI+
aW4gCiAgYmV0YTIgd2hlbiBpdCBzaGlwcykgYXJlIGF0PEJSPiZuYnNwOyA8QSAKICBocmVmPSJo
dHRwOi8vZ2VlLmNzLm9zd2Vnby5lZHUvZGwvY29uY3VycmVuY3ktaW50ZXJlc3QvaW5kZXguaHRt
bCI+aHR0cDovL2dlZS5jcy5vc3dlZ28uZWR1L2RsL2NvbmN1cnJlbmN5LWludGVyZXN0L2luZGV4
Lmh0bWw8L0E+PEJSPjxCUj4tRG91ZzxCUj48QlI+PC9GT05UPjwvUD48L0JMT0NLUVVPVEU+Cgo8
L0JPRFk+CjwvSFRNTD4=

------_=_NextPart_001_01C4136C.B3725CAB--

