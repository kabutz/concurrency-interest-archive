From gkatz@allot.com  Tue Jun  1 12:48:22 2004
From: gkatz@allot.com (Guy Katz)
Date: Tue, 1 Jun 2004 13:48:22 +0200
Subject: [concurrency-interest] need to use collection.sort w. CopyOnWriteArrayList but cant.....
Message-ID: <C136FDDC8498334E85F4022DF2FFC88B04FE1F50@mail.allot.com>

hi;
i am using CopyOnWriteArrayList.
i need ot add sort capability and tried doing it through the
Collections.sort but this fails cause the sort method eventually calls the
set method on the list iterator and this is not supported in the
CopyOnWriteArrayList.
do i have alternatives? i want to keep using the CopyOnWriteArrayList - it
fits my needs (multi thread env, small ammout of modifications a lot of
reads using the list iterator).
thanks in advance.

the exception:
java.lang.UnsupportedOperationException
	at
EDU.oswego.cs.dl.util.concurrent.CopyOnWriteArrayList$COWIterator.set(Unknow
n Source)
	at java.util.Collections.sort(Collections.java:117)
	at components.Test.doit(Test.java:38)

____________________
Guy Katz
Allot Communications
gkatz@allot.com
tel: +972 9 7619288
fax: +972 9 7443626


From dl@cs.oswego.edu  Tue Jun  1 12:42:40 2004
From: dl@cs.oswego.edu (Doug Lea)
Date: Tue, 1 Jun 2004 07:42:40 -0400
Subject: [concurrency-interest] need to use collection.sort w. CopyOnWriteArrayList but cant.....
In-Reply-To: <C136FDDC8498334E85F4022DF2FFC88B04FE1F50@mail.allot.com>
References: <C136FDDC8498334E85F4022DF2FFC88B04FE1F50@mail.allot.com>
Message-ID: <16572.27568.123140.286104@altair.cs.oswego.edu>

> i need ot add sort capability and tried doing it through the
> Collections.sort but this fails cause the sort method eventually calls the
> set method on the list iterator and this is not supported in the
> CopyOnWriteArrayList.
> do i have alternatives?


You could use something like (omitting any generic types you might be
using here):

  Object[] array = list.toArray();
  Arrays.sort(array);
  list.clear();
  list.addAll(Arrays.asList(array));

This is not too fast, but at least makes only two full copies
per sort rather than a copy per element change.

-Doug


From dl@cs.oswego.edu  Tue Jun  1 13:01:00 2004
From: dl@cs.oswego.edu (Doug Lea)
Date: Tue, 1 Jun 2004 08:01:00 -0400
Subject: [concurrency-interest] concurrency-oriented languages on the JVM
In-Reply-To: <MDEIJLCNINPJGNEJMGODAEGGCNAA.ccox@tripos.com>
References: <MDEIJLCNINPJGNEJMGODAEGGCNAA.ccox@tripos.com>
Message-ID: <16572.28668.434051.428975@altair.cs.oswego.edu>


> 
> Erlang
> http://www.erlang.org/
> 
> Mozart/Oz
> http://www.mozart-oz.org/
> ...
> haven't been ported to the JVM.  I've heard that
> this is because gaps in the JVM instruction set
> would make such ports dozens of times slower than
> their current native incarnations.
> 
> So, my questions are:
> 1) Is this true with pre 1.5 JVMs?

I don't know. I was hoping someone who knows something about implementing
Erlang or Mozart would answer, but apparently not.

> 2) Does JSR-166 change this?

We would be surprised if there is any kind of
synchronization/threading support that people cannot build efficiently
from what's in JSR166. The only mismatch I know of offhand is that
Erlang uses a process-centric (no shared memory) rather than
thread-centric approach.  Very fine-grained implementations of
Isolates (JSR121) might be nicer for this but don't exist yet.  So
this would need to be enforced by compilers and runtime classes but I
wouldn't think it would add much if any overhead.

-Doug

From osvaldo@visionnaire.com.br  Tue Jun  1 18:48:19 2004
From: osvaldo@visionnaire.com.br (Osvaldo Pinali Doederlein)
Date: Tue, 01 Jun 2004 14:48:19 -0300
Subject: [concurrency-interest] need to use collection.sort w. CopyOnWriteArrayList
 but cant.....
In-Reply-To: <16572.27568.123140.286104@altair.cs.oswego.edu>
References: <C136FDDC8498334E85F4022DF2FFC88B04FE1F50@mail.allot.com> <16572.27568.123140.286104@altair.cs.oswego.edu>
Message-ID: <40BCC163.7000302@visionnaire.com.br>

Doug Lea wrote:
>>i need ot add sort capability and tried doing it through the
>>Collections.sort but this fails cause the sort method eventually calls the
>>set method on the list iterator and this is not supported in the
>>CopyOnWriteArrayList.
>>do i have alternatives?
> 
> You could use something like (omitting any generic types you might be
> using here):
> 
>   Object[] array = list.toArray();
>   Arrays.sort(array);
>   list.clear();
>   list.addAll(Arrays.asList(array));
> 
> This is not too fast, but at least makes only two full copies
> per sort rather than a copy per element change.

I suppose we could have methods like sort() added to the List interface.
This would allow CopyOnWriteArrayList to override the method so this
workaround could be implemented transparently to the user, and also
more efficiently (using less reallocations/copies).  I never understood
why the Collections framework choose this anti-OO design of having most
algorithms as statics of utility classes like Arrays and Collections.
It makes sense only for the methods that operate on primitive types,
e.g. sort(int[]).  Add interfaces like Sortable() { void sort(); } just
in case some non-List collection can sort, and so on.  This suggestion
is too late for Tiger --trivial implementations are possible, but ideal
implementations of some methods, which could be optimized with direct
access to the collections' private members, may need more work and QA.
But Guy's problem may show that we should consider this in the future.

A+
Osvaldo

-- 
-----------------------------------------------------------------------
Osvaldo Pinali Doederlein                   Visionnaire Informática S/A
osvaldo@visionnaire.com.br                http://www.visionnaire.com.br
Arquiteto de Tecnologia                          +55 (41) 373-7400 #228

From joshua.bloch@sun.com  Tue Jun  1 20:25:04 2004
From: joshua.bloch@sun.com (Joshua Bloch)
Date: Tue, 01 Jun 2004 12:25:04 -0700
Subject: [concurrency-interest] need to use collection.sort w. CopyOnWriteArrayList
 but cant.....
In-Reply-To: <40BCC163.7000302@visionnaire.com.br>
References: <C136FDDC8498334E85F4022DF2FFC88B04FE1F50@mail.allot.com> <16572.27568.123140.286104@altair.cs.oswego.edu> <40BCC163.7000302@visionnaire.com.br>
Message-ID: <40BCD810.8020405@sun.com>

Osvaldo,

>
> I suppose we could have methods like sort() added to the List interface.

It violates compatibility to add a method to a widely implemented 
interface such as List, so this is not a possiblity.

>  I never understood
> why the Collections framework choose this anti-OO design of having most
> algorithms as statics of utility classes like Arrays and Collections.

To keep the core interfaces small, general, and learnable.  For the most 
part, we are very happy with the design. 

       Regards,

       Josh


From osvaldo@visionnaire.com.br  Wed Jun  2 18:25:02 2004
From: osvaldo@visionnaire.com.br (Osvaldo Pinali Doederlein)
Date: Wed, 02 Jun 2004 14:25:02 -0300
Subject: [concurrency-interest] need to use collection.sort w. CopyOnWriteArrayList
 but cant.....
In-Reply-To: <40BCD810.8020405@sun.com>
References: <C136FDDC8498334E85F4022DF2FFC88B04FE1F50@mail.allot.com> <16572.27568.123140.286104@altair.cs.oswego.edu> <40BCC163.7000302@visionnaire.com.br> <40BCD810.8020405@sun.com>
Message-ID: <40BE0D6E.4000107@visionnaire.com.br>

Hi Joshua,

Joshua Bloch wrote:
> Osvaldo,
>> I suppose we could have methods like sort() added to the List interface.
> It violates compatibility to add a method to a widely implemented 
> interface such as List, so this is not a possiblity.

Yes, at this time this would be a major problem(*).  I was thinking in
new interfaces, like Sortable, that could be implemented by concrete
classes like ArrayList but not extended by the interfaces. This would
avoid (most) compatibility issues, even though not a perfect design
either; people would need casts like ((Sortable)myList).sort() to not
hardwire code to the concrete classes...

(*) Except that, if everybody who implements (say) List do it indirectly
by subclassing an abstract class, like AbstractList, that takes care of
all generic methods (sort() would certainly fit here), then there's no
problem even in modifying the interface.  But I realize that Java's
concern for backwards compatibility doesn't allow statements like
"properly written code won't have problems" in critical cases like this.

>>  I never understood
>> why the Collections framework choose this anti-OO design of having most
>> algorithms as statics of utility classes like Arrays and Collections.
> To keep the core interfaces small, general, and learnable.  For the most 
> part, we are very happy with the design.

I see (oops!).  I think I'm more biased by the design of Smalltalk --
collections packed with utility methods -- but of course, in ST, adding
methods is not a burden to existing code.  Anyway, when it comes to API
complexity I don't see the advantage of making the collection interfaces
simpler if you need large utility classes like Collections and Arrays
with lots of methods that the programmer quickly needs to learn anyway.
And in this form, these methods are a more complex API because they
don't benefit from inheritance and polymorphism, so we have a larger
number of signatures and even methods names (i.e., unmodifiableList(),
unmodifiableMap(), etc.).  But it's just IMHO here.

Now that I think about other languages, it seems that Tiger is instead
moving towards the model of C++ here. In the STL, the decoupling of
containers from algorithms works well, but only because all algorithms
are global functions, so it's not a problem that they're not members of
containers.  Now, Tiger allows to static-import classes like Collections
and use a style similar to C++: "sort(myList)".  This is convenient, but
it doesn't solve Guy's problem. (C++ solves it with massive overloading
and template specialization, but in Java this would break encapsulation
as we'd need to stuff methods optimized for concrete collections in the
Collections class.)  If you replicate the sort method as a static of the
concrete class, and the programmer static-imports these too, and their
more specific signature guarantees precedence, then "sort(myList)" would
invoke CopyOnWriteArrayList.sort(CopyOnWriteArrayList).  But it's a huge
hack, horrible design, and abuse of static imports :-(

A+
Osvaldo

-- 
-----------------------------------------------------------------------
Osvaldo Pinali Doederlein                   Visionnaire Informática S/A
osvaldo@visionnaire.com.br                http://www.visionnaire.com.br
Arquiteto de Tecnologia                          +55 (41) 373-7400 #228

From gregg.wonderly@pobox.com  Thu Jun  3 04:20:31 2004
From: gregg.wonderly@pobox.com (Gregg G. Wonderly)
Date: Wed, 02 Jun 2004 22:20:31 -0500
Subject: [ Osvaldo Pinali Doederlein ] [concurrency-interest] need to use
 collection.sort w. CopyOnWriteArrayList but cant.....
In-Reply-To: Your message of Wed, 02 Jun 2004 14:25:02 -0300.
 <40BE0D6E.4000107@visionnaire.com.br>
Message-ID: <3688.1086232831@skymaster.cytetech.com>

>If you replicate the sort method as a static of the
>concrete class, and the programmer static-imports these too, and their
>more specific signature guarantees precedence, then "sort(myList)" would
>invoke CopyOnWriteArrayList.sort(CopyOnWriteArrayList).  But it's a huge
>hack, horrible design, and abuse of static imports :-(

I would suggest that perhaps the easist thing for people who need the 
inheritance hierachy, or some other class relationship is to create wrapper 
classes that make the language of programming fit the discriptive language of 
the problem domain.  Then, you can change what you call, or work out different 
details for your special case, and everyone can benefit from having a simpliar 
base API that doesn't try to support a particular problem domain to the 
exclusion of others.

-----
gregg@cytetech.com  (Cyte Technologies Inc)



From osvaldo@visionnaire.com.br  Thu Jun  3 17:15:07 2004
From: osvaldo@visionnaire.com.br (Osvaldo Pinali Doederlein)
Date: Thu, 03 Jun 2004 13:15:07 -0300
Subject: [ Osvaldo Pinali Doederlein ] [concurrency-interest] need to
 use  collection.sort w. CopyOnWriteArrayList but cant.....
In-Reply-To: <3688.1086232831@skymaster.cytetech.com>
References: <3688.1086232831@skymaster.cytetech.com>
Message-ID: <40BF4E8B.5040504@visionnaire.com.br>

Gregg G. Wonderly wrote:
>>If you replicate the sort method as a static of the
>>concrete class, and the programmer static-imports these too, and their
>>more specific signature guarantees precedence, then "sort(myList)" would
>>invoke CopyOnWriteArrayList.sort(CopyOnWriteArrayList).  But it's a huge
>>hack, horrible design, and abuse of static imports :-(
> 
> I would suggest that perhaps the easist thing for people who need the 
> inheritance hierachy, or some other class relationship is to create wrapper 
> classes that make the language of programming fit the discriptive language of 
> the problem domain.  Then, you can change what you call, or work out different 
> details for your special case, and everyone can benefit from having a simpliar 
> base API that doesn't try to support a particular problem domain to the 
> exclusion of others.

Unfortunately this won't work, and even if it did, it's a workaround
for a bug.  The current implementation of Collections.sort() breaks
the semantics of the collections API: sort(List) should work with any
implementation of List (I'm not requiring a performant behavior, only
correct behavior). The problem is that the contracts involved in this
problem are multiple and have subtle dependencies:

* List must provide a ListIterator; that's OK.
* ListIterator is free to implement set() or not; that's OK too.
* Collections.sort(List) promises to sort any List, with the single
   (and obvious) condition that "specified list must be modifiable".
   But that's not specific enough, it doesn't state "modifiable through
   iterators", and such constraint wouldn't make any sense.

The conclusion is that Collections.sort() is broken, and nobody should
need workarounds for this.  In fact, it was always broken, only now
the problem is evidenced by the inclusion in the J2SE of a List that
doesn't support ListIterator.set().  And it's broken for any app; this
is not specific to particular problem domains, and the fix has nothing
to do with support for requisites (functional or non-) of any domain.
The same bug would surface in previous releases with user-provided
collections not supporting ListIterator.set().

Your suggestion of subclassing CopyOnWriteArrayList would only work
(cleanly, w/o new APIs like a member sort()) if you could override
listIterator() to return a new iterator that implement set().  But the
iterator provided by CopyOnWriteArrayList doesn't support this method
for good reasons, look at the javadocs: the "snapshot"-style iterators
are key in the high-performance design of the class (and performance
is the single reason for the existence of this class, otherwise we're
better off with a synchronizedList() of ArrayList). It's not like the
COWIterator doesn't implement those methods due to sadism of Doug :-)

Suggestion -- that differently from my previous ramblings about the
whole design of Collections, where I unfortunately jumped to criticize
Java's design before fully understanding the problem, should be viable
for 1.5.0:  Change the implementation of Collections.sort(List) to not
depend on any optional methods (or on the ListIterator at all), so the
algorithms will work with any collection.  There aren't good reasons
to rely on Iterators (instead of indexes) to simply iterate over Lists,
except reuse of code that may serve also to other kinds of collections,
but this is not even the case here.  The offending code is:

public static <T extends Comparable<? super T>> void sort(List<T>list){
   Object[] a = list.toArray();
   Arrays.sort(a);
   ListIterator<T> i = list.listIterator();
   for (int j=0; j<a.length; j++) {
     i.next();
     i.set((T)a[j]);
   }
}

Suggested fix:

public static <T extends Comparable<? super T>> void sort(List<T>list){
   Object[] a = list.toArray();
   Arrays.sort(a);
   for (int j=0; j<a.length; j++)
     list.set(j, (T)a[j]);
}

Similar fix applies to sort(List<T> list, Comparator<? super T> c),
and we may need to review other methods in the entire Java core for
similar problems.  Searching the sources for ListIterator reveals all
code that may contain this "bug pattern", and it's a very small number
of sources (53 .java files, including many less-suspect files like
several List and Iterator implementations, and com.sun.* packages).
And we only need to review carefully the codes that use optional
methods -- many need ListIterator only for backwards iteration.
So I hope it's possible to make sure that no other instances of this
bug will be left in Java.  BTW, this fix should be applied to older
editions of J2SE too, I can post this in the Bug Parade.

The new code is also faster because list indexing is more efficient than
iterators: no object allocation and less polymorphic calls.  And as a
new bonus, not worrying if the List supports updates through iterators.

This reveals a new issue: enhanced for, at least in 1.5.0-beta2,
always uses an Iterator (returned by iterator()) to walk through any
collection, even when the collection is a List.  This is not a bug
because the generated code doesn't use any optional methods, but it's
a significant performance issue. A syntax-sugar feature like this
should avoid any unnecessary overhead over "traditional" code.
I suggest that javac examines the type of the collection in enhanced
for and, if it is a List, generate code that uses indexing instead.
(Even using the ListIterator, instead of the generic Iterator, would
deliver some gain; early binding to narrower types tends to reduce
the cost of polymorphism, or at least the cost of JIT optimizations).

I hope this helps,
Osvaldo

-- 
-----------------------------------------------------------------------
Osvaldo Pinali Doederlein                   Visionnaire Informática S/A
osvaldo@visionnaire.com.br                http://www.visionnaire.com.br
Arquiteto de Tecnologia                          +55 (41) 373-7400 #228


From jozart@blarg.net  Thu Jun  3 18:21:24 2004
From: jozart@blarg.net (Joseph Bowbeer)
Date: Thu, 3 Jun 2004 10:21:24 -0700
Subject: [ Osvaldo Pinali Doederlein ] [concurrency-interest] need to use  collection.sort w. CopyOnWriteArrayList but cant.....
References: <3688.1086232831@skymaster.cytetech.com> <40BF4E8B.5040504@visionnaire.com.br>
Message-ID: <005801c4498f$32a4d230$c4997cce@REPLICANT2>

Osvaldo,

Wouldn't your suggested fix, to use List indexing instead of List iteration,
hurt performance when List is a LinkedList or one of its kin?


----- Original Message ----- 
From: "Osvaldo Pinali Doederlein" <osvaldo@visionnaire.com.br>
To: <gregg.wonderly@pobox.com>
Cc: "Joshua Bloch" <joshua.bloch@sun.com>; "Guy Katz" <gkatz@allot.com>;
<concurrency-interest@altair.cs.oswego.edu>
Sent: Thursday, June 03, 2004 9:15 AM
Subject: Re: [ Osvaldo Pinali Doederlein ] [concurrency-interest] need to
use collection.sort w. CopyOnWriteArrayList but cant.....


Gregg G. Wonderly wrote:
>>If you replicate the sort method as a static of the
>>concrete class, and the programmer static-imports these too, and their
>>more specific signature guarantees precedence, then "sort(myList)" would
>>invoke CopyOnWriteArrayList.sort(CopyOnWriteArrayList).  But it's a huge
>>hack, horrible design, and abuse of static imports :-(
>
> I would suggest that perhaps the easist thing for people who need the
> inheritance hierachy, or some other class relationship is to create
wrapper
> classes that make the language of programming fit the discriptive language
of
> the problem domain.  Then, you can change what you call, or work out
different
> details for your special case, and everyone can benefit from having a
simpliar
> base API that doesn't try to support a particular problem domain to the
> exclusion of others.

Unfortunately this won't work, and even if it did, it's a workaround
for a bug.  The current implementation of Collections.sort() breaks
the semantics of the collections API: sort(List) should work with any
implementation of List (I'm not requiring a performant behavior, only
correct behavior). The problem is that the contracts involved in this
problem are multiple and have subtle dependencies:

* List must provide a ListIterator; that's OK.
* ListIterator is free to implement set() or not; that's OK too.
* Collections.sort(List) promises to sort any List, with the single
   (and obvious) condition that "specified list must be modifiable".
   But that's not specific enough, it doesn't state "modifiable through
   iterators", and such constraint wouldn't make any sense.

The conclusion is that Collections.sort() is broken, and nobody should
need workarounds for this.  In fact, it was always broken, only now
the problem is evidenced by the inclusion in the J2SE of a List that
doesn't support ListIterator.set().  And it's broken for any app; this
is not specific to particular problem domains, and the fix has nothing
to do with support for requisites (functional or non-) of any domain.
The same bug would surface in previous releases with user-provided
collections not supporting ListIterator.set().

Your suggestion of subclassing CopyOnWriteArrayList would only work
(cleanly, w/o new APIs like a member sort()) if you could override
listIterator() to return a new iterator that implement set().  But the
iterator provided by CopyOnWriteArrayList doesn't support this method
for good reasons, look at the javadocs: the "snapshot"-style iterators
are key in the high-performance design of the class (and performance
is the single reason for the existence of this class, otherwise we're
better off with a synchronizedList() of ArrayList). It's not like the
COWIterator doesn't implement those methods due to sadism of Doug :-)

Suggestion -- that differently from my previous ramblings about the
whole design of Collections, where I unfortunately jumped to criticize
Java's design before fully understanding the problem, should be viable
for 1.5.0:  Change the implementation of Collections.sort(List) to not
depend on any optional methods (or on the ListIterator at all), so the
algorithms will work with any collection.  There aren't good reasons
to rely on Iterators (instead of indexes) to simply iterate over Lists,
except reuse of code that may serve also to other kinds of collections,
but this is not even the case here.  The offending code is:

public static <T extends Comparable<? super T>> void sort(List<T>list){
   Object[] a = list.toArray();
   Arrays.sort(a);
   ListIterator<T> i = list.listIterator();
   for (int j=0; j<a.length; j++) {
     i.next();
     i.set((T)a[j]);
   }
}

Suggested fix:

public static <T extends Comparable<? super T>> void sort(List<T>list){
   Object[] a = list.toArray();
   Arrays.sort(a);
   for (int j=0; j<a.length; j++)
     list.set(j, (T)a[j]);
}

Similar fix applies to sort(List<T> list, Comparator<? super T> c),
and we may need to review other methods in the entire Java core for
similar problems.  Searching the sources for ListIterator reveals all
code that may contain this "bug pattern", and it's a very small number
of sources (53 .java files, including many less-suspect files like
several List and Iterator implementations, and com.sun.* packages).
And we only need to review carefully the codes that use optional
methods -- many need ListIterator only for backwards iteration.
So I hope it's possible to make sure that no other instances of this
bug will be left in Java.  BTW, this fix should be applied to older
editions of J2SE too, I can post this in the Bug Parade.

The new code is also faster because list indexing is more efficient than
iterators: no object allocation and less polymorphic calls.  And as a
new bonus, not worrying if the List supports updates through iterators.

This reveals a new issue: enhanced for, at least in 1.5.0-beta2,
always uses an Iterator (returned by iterator()) to walk through any
collection, even when the collection is a List.  This is not a bug
because the generated code doesn't use any optional methods, but it's
a significant performance issue. A syntax-sugar feature like this
should avoid any unnecessary overhead over "traditional" code.
I suggest that javac examines the type of the collection in enhanced
for and, if it is a List, generate code that uses indexing instead.
(Even using the ListIterator, instead of the generic Iterator, would
deliver some gain; early binding to narrower types tends to reduce
the cost of polymorphism, or at least the cost of JIT optimizations).

I hope this helps,
Osvaldo

-- 
-----------------------------------------------------------------------
Osvaldo Pinali Doederlein                   Visionnaire Informática S/A
osvaldo@visionnaire.com.br                http://www.visionnaire.com.br
Arquiteto de Tecnologia                          +55 (41) 373-7400 #228



From osvaldo@visionnaire.com.br  Thu Jun  3 20:33:15 2004
From: osvaldo@visionnaire.com.br (Osvaldo Pinali Doederlein)
Date: Thu, 03 Jun 2004 16:33:15 -0300
Subject: [ Osvaldo Pinali Doederlein ] [concurrency-interest] need to
 use  collection.sort w. CopyOnWriteArrayList but cant.....
In-Reply-To: <005801c4498f$32a4d230$c4997cce@REPLICANT2>
References: <3688.1086232831@skymaster.cytetech.com> <40BF4E8B.5040504@visionnaire.com.br> <005801c4498f$32a4d230$c4997cce@REPLICANT2>
Message-ID: <40BF7CFB.9060701@visionnaire.com.br>

Joseph Bowbeer wrote:
> Osvaldo,
> Wouldn't your suggested fix, to use List indexing instead of List iteration,
> hurt performance when List is a LinkedList or one of its kin?

You are correct -- I forgot this additional reason to use ListIterator!
Then, the correct fix is only more complex, e.g., have special cases to
put sorted elements back in the list.  The best solution I can think is
something like this:

if (list instanceof RandomAccess) {
   // Must work, even though RandomAccess doesn't guarantee that
   // the list is modifiable, because sort() requires this
   loop to put elements with set();
} else try {
   loop to put elements with ListIterator;
}
catch (UnsupportedOperationException) {
   loop to put elements with clear() & add()
}

This provides maximum performance for the concrete classes that have
efficient set(index,element), those marked by RandomAccess (includes
CopyOnWriteArrayList).  Unfortunately there isn't a similar marker or
specification requiring modifiable iterators, so we must rely on an
exception for other cases.  Attempt first the current method with
iterators; this will work, but just in case it fails, try once again
with clear()/add().  The last method is not fail-safe either because
sort() doesn't require that the list supports these also-optional
operations, but I guess we won't find many lists that are mutable,
but neither are RandomAccess, nor support any of ListIterator.set()
and List.clear()/add().  Well, at least not in the Java core, and I
don't think such aberration is likely in custom lists.  Even if there
is some valid scenario, at least we'll make a best-effort so sort()
works correctly and efficiently for as much lists as possible.

If it's not possible to cover all cases, we should update the javadoc
of sort() to make clear that the list must either be RandomAccess,
or provide mutable iterators, or support add/clear().  A better idea
(maybe) is documenting List to require that no implementation can
be so horribly broken: mutable, but without mutable iterators, not
RandomAccess, and not resizable.  In either case, methods like sort()
wouldn't fail for any list that complies with the specs.

(And in my suggestion for enhanced for, just check for RandomAccess
instead of, or in addition to, checking for List).

A+
Osvaldo

> ----- Original Message ----- 
> From: "Osvaldo Pinali Doederlein" <osvaldo@visionnaire.com.br>
> To: <gregg.wonderly@pobox.com>
> Cc: "Joshua Bloch" <joshua.bloch@sun.com>; "Guy Katz" <gkatz@allot.com>;
> <concurrency-interest@altair.cs.oswego.edu>
> Sent: Thursday, June 03, 2004 9:15 AM
> Subject: Re: [ Osvaldo Pinali Doederlein ] [concurrency-interest] need to
> use collection.sort w. CopyOnWriteArrayList but cant.....
> 
> 
> Gregg G. Wonderly wrote:
> 
>>>If you replicate the sort method as a static of the
>>>concrete class, and the programmer static-imports these too, and their
>>>more specific signature guarantees precedence, then "sort(myList)" would
>>>invoke CopyOnWriteArrayList.sort(CopyOnWriteArrayList).  But it's a huge
>>>hack, horrible design, and abuse of static imports :-(
>>
>>I would suggest that perhaps the easist thing for people who need the
>>inheritance hierachy, or some other class relationship is to create
> 
> wrapper
> 
>>classes that make the language of programming fit the discriptive language
> 
> of
> 
>>the problem domain.  Then, you can change what you call, or work out
> 
> different
> 
>>details for your special case, and everyone can benefit from having a
> 
> simpliar
> 
>>base API that doesn't try to support a particular problem domain to the
>>exclusion of others.
> 
> 
> Unfortunately this won't work, and even if it did, it's a workaround
> for a bug.  The current implementation of Collections.sort() breaks
> the semantics of the collections API: sort(List) should work with any
> implementation of List (I'm not requiring a performant behavior, only
> correct behavior). The problem is that the contracts involved in this
> problem are multiple and have subtle dependencies:
> 
> * List must provide a ListIterator; that's OK.
> * ListIterator is free to implement set() or not; that's OK too.
> * Collections.sort(List) promises to sort any List, with the single
>    (and obvious) condition that "specified list must be modifiable".
>    But that's not specific enough, it doesn't state "modifiable through
>    iterators", and such constraint wouldn't make any sense.
> 
> The conclusion is that Collections.sort() is broken, and nobody should
> need workarounds for this.  In fact, it was always broken, only now
> the problem is evidenced by the inclusion in the J2SE of a List that
> doesn't support ListIterator.set().  And it's broken for any app; this
> is not specific to particular problem domains, and the fix has nothing
> to do with support for requisites (functional or non-) of any domain.
> The same bug would surface in previous releases with user-provided
> collections not supporting ListIterator.set().
> 
> Your suggestion of subclassing CopyOnWriteArrayList would only work
> (cleanly, w/o new APIs like a member sort()) if you could override
> listIterator() to return a new iterator that implement set().  But the
> iterator provided by CopyOnWriteArrayList doesn't support this method
> for good reasons, look at the javadocs: the "snapshot"-style iterators
> are key in the high-performance design of the class (and performance
> is the single reason for the existence of this class, otherwise we're
> better off with a synchronizedList() of ArrayList). It's not like the
> COWIterator doesn't implement those methods due to sadism of Doug :-)
> 
> Suggestion -- that differently from my previous ramblings about the
> whole design of Collections, where I unfortunately jumped to criticize
> Java's design before fully understanding the problem, should be viable
> for 1.5.0:  Change the implementation of Collections.sort(List) to not
> depend on any optional methods (or on the ListIterator at all), so the
> algorithms will work with any collection.  There aren't good reasons
> to rely on Iterators (instead of indexes) to simply iterate over Lists,
> except reuse of code that may serve also to other kinds of collections,
> but this is not even the case here.  The offending code is:
> 
> public static <T extends Comparable<? super T>> void sort(List<T>list){
>    Object[] a = list.toArray();
>    Arrays.sort(a);
>    ListIterator<T> i = list.listIterator();
>    for (int j=0; j<a.length; j++) {
>      i.next();
>      i.set((T)a[j]);
>    }
> }
> 
> Suggested fix:
> 
> public static <T extends Comparable<? super T>> void sort(List<T>list){
>    Object[] a = list.toArray();
>    Arrays.sort(a);
>    for (int j=0; j<a.length; j++)
>      list.set(j, (T)a[j]);
> }
> 
> Similar fix applies to sort(List<T> list, Comparator<? super T> c),
> and we may need to review other methods in the entire Java core for
> similar problems.  Searching the sources for ListIterator reveals all
> code that may contain this "bug pattern", and it's a very small number
> of sources (53 .java files, including many less-suspect files like
> several List and Iterator implementations, and com.sun.* packages).
> And we only need to review carefully the codes that use optional
> methods -- many need ListIterator only for backwards iteration.
> So I hope it's possible to make sure that no other instances of this
> bug will be left in Java.  BTW, this fix should be applied to older
> editions of J2SE too, I can post this in the Bug Parade.
> 
> The new code is also faster because list indexing is more efficient than
> iterators: no object allocation and less polymorphic calls.  And as a
> new bonus, not worrying if the List supports updates through iterators.
> 
> This reveals a new issue: enhanced for, at least in 1.5.0-beta2,
> always uses an Iterator (returned by iterator()) to walk through any
> collection, even when the collection is a List.  This is not a bug
> because the generated code doesn't use any optional methods, but it's
> a significant performance issue. A syntax-sugar feature like this
> should avoid any unnecessary overhead over "traditional" code.
> I suggest that javac examines the type of the collection in enhanced
> for and, if it is a List, generate code that uses indexing instead.
> (Even using the ListIterator, instead of the generic Iterator, would
> deliver some gain; early binding to narrower types tends to reduce
> the cost of polymorphism, or at least the cost of JIT optimizations).
> 
> I hope this helps,
> Osvaldo
> 


-- 
-----------------------------------------------------------------------
Osvaldo Pinali Doederlein                   Visionnaire Informática S/A
osvaldo@visionnaire.com.br                http://www.visionnaire.com.br
Arquiteto de Tecnologia                          +55 (41) 373-7400 #228



From gregg.wonderly@pobox.com  Fri Jun  4 03:37:59 2004
From: gregg.wonderly@pobox.com (Gregg G. Wonderly)
Date: Thu, 03 Jun 2004 21:37:59 -0500
Subject: [ Osvaldo Pinali Doederlein ] [ Osvaldo Pinali Doederlein ]
 [concurrency-interest] need to use collection.sort w. CopyOnWriteArrayList
 but cant.....
In-Reply-To: Your message of Thu, 03 Jun 2004 13:15:07 -0300.
 <40BF4E8B.5040504@visionnaire.com.br>
Message-ID: <31652.1086316679@skymaster.cytetech.com>


>> I would suggest that perhaps the easist thing for people who need the
>> inheritance hierachy, or some other class relationship is to create wrapper
>> classes that make the language of programming fit the discriptive language 
of
>> the problem domain.  Then, you can change what you call, or work out 
different
>> details for your special case, and everyone can benefit from having a 
simpliar
>> base API that doesn't try to support a particular problem domain to the
>> exclusion of others.
>
>Unfortunately this won't work, and even if it did, it's a workaround
>for a bug.  The current implementation of Collections.sort() breaks
>the semantics of the collections API: sort(List) should work with any
>implementation of List (I'm not requiring a performant behavior, only
>correct behavior). The problem is that the contracts involved in this
>problem are multiple and have subtle dependencies:
>
>* List must provide a ListIterator; that's OK.
>* ListIterator is free to implement set() or not; that's OK too.
>* Collections.sort(List) promises to sort any List, with the single
>   (and obvious) condition that "specified list must be modifiable".
>   But that's not specific enough, it doesn't state "modifiable through
>   iterators", and such constraint wouldn't make any sense.

This is an oversight in documentation for sure.  I understand you feelings 
about this.  But, specifically, the ListIterator is the optimal implementation 
of access to the list members, and so I can see why sort(List) uses that for 
write access, as the reply related to linked lists pointed out already.

I thinking that a more type centric fix at this point would be to create 
something like the following interfaces. The existing Collections.sort(List) 
could be deprecated, and a new Collections.sort(WriteableList) could be added 
that would make the contract visible with type information.

public interface WriteableList extends List {
	public WriteableListIterator writeableListIterator();
}

public interface WriteableListIterator extends ListIterator {
	public void set( Object obj ) throws
		ClassCastException,
		IllegalArgumentException,
		IllegalStateException;
}

And more specifically, I was trying to say that you could create a sort 
implementation that manifested these contracts into your application so that 
you would be sure to have the writeable lists visible.  Probably many others 
have already encountered this and worked around it in some way.  It would be 
nice if more people would file bug reports for things that you can work around.
-----
gregg@cytetech.com  (Cyte Technologies Inc)


From osvaldo@visionnaire.com.br  Fri Jun  4 13:28:51 2004
From: osvaldo@visionnaire.com.br (Osvaldo Pinali Doederlein)
Date: Fri, 04 Jun 2004 09:28:51 -0300
Subject: [ Osvaldo Pinali Doederlein ] [ Osvaldo Pinali Doederlein ]
 [concurrency-interest] need to use collection.sort w. CopyOnWriteArrayList
 but cant.....
In-Reply-To: <31652.1086316679@skymaster.cytetech.com>
References: <31652.1086316679@skymaster.cytetech.com>
Message-ID: <40C06B03.9010602@visionnaire.com.br>

Gregg G. Wonderly wrote:
>>The current implementation of Collections.sort() breaks
>>the semantics of the collections API: sort(List) should work with any
>>implementation of List (I'm not requiring a performant behavior, only
>>correct behavior). (...)
> This is an oversight in documentation for sure.  I understand you feelings 
> about this.  But, specifically, the ListIterator is the optimal implementation 
> of access to the list members, and so I can see why sort(List) uses that for 
> write access, as the reply related to linked lists pointed out already.
> 
> I thinking that a more type centric fix at this point would be to create 
> something like the following interfaces. The existing Collections.sort(List) 
> could be deprecated, and a new Collections.sort(WriteableList) could be added 
> that would make the contract visible with type information.
> 
> public interface WriteableList extends List {
> 	public WriteableListIterator writeableListIterator();
> }
> 
> public interface WriteableListIterator extends ListIterator {
> 	public void set( Object obj ) throws
> 		ClassCastException,
> 		IllegalArgumentException,
> 		IllegalStateException;
> }

These new interfaces are a good idea (if there is time for this).
Considering that other types of collections, like Map, can also be
writeable or not, I suggest more general interfaces.

* Writeable -- collection that can clear(), and where other optional
                mutators (ad(), put(), remove() etc.) are implemented
* WriteIterable -- collection which iterators are WriteableIterator
* WriteableIterator -- iterator which mutators are implemented

Notice that for collections, we need separate concepts of ("writeable"
and "writeable through iterator"), for example in CopyOnWriteArrayList.

then:

* ArrayList is both Writeable and WriteIterable.
* "ListIterator ArrayList.listIterator()" returns a WriteableIterator;
   the user must use a typecast if he wants a WriteableIterator, but
   this cast is safe if the collection is Writeable.  It's a compromise
   to not need a new method like writeableListIterator().
* CopyOnWriteArrayList is Writeable, but not WriteIterable.
* Collections.sort(List) is unchanged, but it documents that the list
   must be (WriteIterable || Writeable && RandomAccess).

Notice that deprecating sort(List) and introducing sort(WriteIterable)
is not acceptable because the latter method wouldn't sort lists that
are Writeable and RandomAccess, but not WriteIterable, which should
certainly be a supported scenario (it's the CopyOnWriteArrayList case).
So my modified algorithm is still necessary, but changed:

if (list instanceof Writeable && list instanceof RandomAccess) {
   loop to put elements with set();
} else { // WriteIterable; otherwise, UnsupportedOperationException
   loop to put elements with ListIterator;
}

This is much better because we don't rely on catching of exceptions
(which is expensive and a bad practice) to handle valid arguments.
Perhaps it's better to change the algorithm (check WriteIterable first)
to favor the traditional behavior for lists that pass all conditions,
but IMHO it's better to favor use of set() when possible because (in a
RandomAccess list) it's faster than ListIterator (though marginally).

Another possibility is relaxing the constraints of sort(), like:

if (list instanceof Writeable &&
   (list instanceof RandomAccess || !(list instanceof WriteIterable))){
   loop to put elements with set();
} else {
   loop to put elements with ListIterator;
}

This last version will work for any kind of list that's not totally
immutable (the single functional constraint that sort() should impose),
including some list that is WriteIterable but not Writeable (this is a
strange possibility, maybe we should specify 'WriteIterable extends
Writeable' to avoid this).  In the worst case, if the list is Writeable
but not ListIterable nor RandomAccess, then the sort() method will use
set() and this will work but with inferior performance.  This should be
documented, it changes the current performance guarantess but only for
lists that cannot be sorted at all today.  But I'd agree that this is a
rare possibility, and a new feature (allows writing code that links,
but fails to work, on older J2SE releases), and it may cover developer
sloppiness by supporting broken custom lists.

In any case, it's important to document precisely which list the sort()
method can handle.  The current API specification allows a portability
problem: a different implementation (say, a clean-room library like GNU
Classpath) allows an alternative implementation of Collections.sort()
to support some collections that throw UnsupportedOperationException in
the Sun JRE. They only need to use the algorithm in my previous email
(trying both ListIterator and set(), if the first attempt raises UOE).
And that implementation would pass the JCK (unless the JCK requires
an UnsupportedOperationException in cases where it shouldn't), allowing
people to write valid code that runs in the other JRE but not in Sun's.

A+
Osvaldo

-- 
-----------------------------------------------------------------------
Osvaldo Pinali Doederlein                   Visionnaire Informática S/A
osvaldo@visionnaire.com.br                http://www.visionnaire.com.br
Arquiteto de Tecnologia                          +55 (41) 373-7400 #228

From ccox@tripos.com  Fri Jun  4 15:34:23 2004
From: ccox@tripos.com (Curt Cox)
Date: Fri, 4 Jun 2004 09:34:23 -0500
Subject: [ Osvaldo Pinali Doederlein ] [ Osvaldo Pinali Doederlein ]  [concurrency-interest] need to use collection.sort w. CopyOnWriteArrayList  but cant.....
In-Reply-To: <40C06B03.9010602@visionnaire.com.br>
Message-ID: <MDEIJLCNINPJGNEJMGODOECJCOAA.ccox@tripos.com>

Rather than a proliferation of interfaces, why not use meta-data
to further specify the characteristics of collections and iterators?

The collections FAQ indicates that in order to keep the API
surface area small, interfaces with optional methods were used,
rather than using many more tightly focused interfaces.
That philosophy should still apply.

If information about an object isn't strictly required in
order to use it, but could be taken advantage of by a
sophisticated client to enhance performance, then it seems
like meta-data to me.

While I'm sure it is far to late to see in Tiger, it would
make sense to use meta-data to provide information on the
concurrency and order characteristics of methods.  Such
information could be used by tools to help spot scalability
and concurrency problems at compile time.  I argue for this
strategy here, but the arguments are even more valid when
concurrency is added to the mix.
http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=5028425

By the way, is there a standard meta-data tag for expressing that
an operation is not implemented?  If so, is there any tool
that spots methods that always throw UnsupportedOperationException
without declaring the appropriate meta-data?

- Curt






From jozart@blarg.net  Sun Jun 13 02:33:00 2004
From: jozart@blarg.net (Joseph Bowbeer)
Date: Sat, 12 Jun 2004 18:33:00 -0700
Subject: [concurrency-interest] Concurrency Presentations at JavaOne 2004
Message-ID: <012601c450e6$5ce3f540$c4987cce@REPLICANT2>

There will be two presentations covering java.util.concurrent at JavaOne
this year.  The official schedule is online, and may be subject to change,
but I have reposted the current information below for your convenience.

=> http://www.javaone04.com/catalog/public.jsp


NOTE: TS-2136 was originally proposed as a BOF, which was to incoporate
contributions from concurrency-interest list members.  However, this was
later converted to a Technical Session by the JavaOne committee.  We would
like to thank everyone who volunteered to participate.


* TS-1358:  Concurrency Utilities in JDK 1.5: Multithreading Made Simpler

Presented by David Holmes and Brian Goetz

Schedule Information:  Monday 4:45 PM   Gateway 102/103

Abstract:  This session describes concurrency utilities in the
java.util.concurrent package that are part of JDK 1.5.

Prior to the release of v1.5, the Java platform provided basic primitives
for writing concurrent programs, but they were just that--primitive--and
difficult to use properly. Building multithreaded applications on the Java
platform's low-level concurrency primitives poses many traps for the unwary,
and many developers were forced to reinvent the wheel by writing their own
classes for thread pools, semaphores, and task schedulers.

To help users create robust, scalable, and (most important) correct
multithreaded applications, JDK software v1.5 includes a rich set of
high-level concurrency constructs, such as thread pools, semaphores,
mutexes, condition variables, locks, barriers, and high-performance
concurrent collection classes.

Using concurrency utilities will, in most cases, make your programs clearer,
shorter, faster, easier to write, and more reliable. This talk provides you
with all the information you need to start using these tools.


* TS-2136:  Concurrency Utilities in Practice

Presented by Tim Peierls and Joe Bowbeer

Schedule Information:  Tuesday 4:00 PM   Gateway 102/103

Abstract:  The best way to learn about the new concurrency utilities
introduced by JSR166 is to see them used in practice. This session presents
case studies of real programs that would have been difficult to write
without these new utilities.

This session is of interest to anyone who has ever written a concurrent
program in Java technology.


In addition, Doug Lea will be presenting a BOF on Application Isolation:

* BOF-2436: Application Isolation for J2ME and J2SE (JSR 121)

Presented by Doug Lea and Bernd Mathiske

Schedule Information:  Tuesday 8:30 PM   Golden Gate #1

Abstract:  In this session, hear the latest information about the Java
Application Isolation API for J2ME and J2SE settings. We give you detailed
information about initial application of the APIs as an alternative to
classloader-based containment of Java technology application components. We
also discuss how Isolates provide the basis for exciting new resource
management capabilities.


See you at JavaOne!

The JSR-166 EG


From dl@cs.oswego.edu  Sun Jun 13 15:33:56 2004
From: dl@cs.oswego.edu (Doug Lea)
Date: Sun, 13 Jun 2004 10:33:56 -0400
Subject: [concurrency-interest] Concurrency Presentations at JavaOne 2004
In-Reply-To: <012601c450e6$5ce3f540$c4987cce@REPLICANT2>
References: <012601c450e6$5ce3f540$c4987cce@REPLICANT2>
Message-ID: <16588.26068.197450.973292@altair.cs.oswego.edu>

> In addition, Doug Lea will be presenting a BOF on Application Isolation:
> 
> * BOF-2436: Application Isolation for J2ME and J2SE (JSR 121)


Actually, my name here was a stand-in for JSR121 spec lead Pete Soper
in case he couldn't make it, but he can and will.

-Doug



From pugh@cs.umd.edu  Fri Jun 18 14:48:20 2004
From: pugh@cs.umd.edu (Bill Pugh)
Date: Fri, 18 Jun 2004 09:48:20 -0400
Subject: [concurrency-interest] Skip Lists, Concurrent Skip Lists and Concurrent Sorted Maps
Message-ID: <28D90033-C12E-11D8-A6ED-000A95DA1AE8@cafe.cs.umd.edu>

Doug and I have been working on building implementations of 
ConcurrentSortedMap,
to parallel ConcurrentHashMap.

We've done both linked list implementations (suitable only for small 
lists) and some
skip list implementations.

We've still got lots of tuning and coding to do, but I thought now 
might be
a good time to ask what other features people would want in such a 
class. We might
be able to fix some shortcomings of SortedTreeMap.

For example, should it also implement PriorityQueue? One issue their is 
that Map uses
Key,Value pairs, while PriorityQueue uses a single value elements. 
Should it be
a PriorityQueue of Entrys, or we just define the SortedSet version of 
SkipLists to
implement PriorityQueue, and don't do anything with the Map version.

It would also be nice to expose methods that, given a key k,
return the entry with the smallest key > k, and another method that 
returns the entry
with the largest key < k. (Methods like this exist in the current 
TreeMap implementation,
but are private).

We might also release a nonconcurrent SkipList. For example, that would 
allow you
to perform rank queries (get me the entry at position 42).  Rank 
queries can't be
done efficiently in a concurrent skip list, but could be done in a 
regular skip list.

So, requests or thoughts on the methods and interfaces we should
support?

	Bill


From mike.skells@ebizz-consulting.com  Fri Jun 18 16:09:58 2004
From: mike.skells@ebizz-consulting.com (Mike Skells)
Date: Fri, 18 Jun 2004 16:09:58 +0100
Subject: [concurrency-interest] Skip Lists, Concurrent Skip Lists and Concurrent Sorted Maps
In-Reply-To: <28D90033-C12E-11D8-A6ED-000A95DA1AE8@cafe.cs.umd.edu>
Message-ID: <008b01c45546$5474f800$0100a8c0@mikework>

I would be interested in using them
Comments inline

> -----Original Message-----
> From: concurrency-interest-admin@cs.oswego.edu 
> [mailto:concurrency-interest-admin@cs.oswego.edu] On Behalf 
> Of Bill Pugh
> Sent: Friday 18 June 2004 14:48
> To: concurrency-interest@altair.cs.oswego.edu
> Subject: [concurrency-interest] Skip Lists, Concurrent Skip 
> Lists and Concurrent Sorted Maps
> 
> 
> Doug and I have been working on building implementations of 
> ConcurrentSortedMap,
> to parallel ConcurrentHashMap.
> 
> We've done both linked list implementations (suitable only for small 
> lists) and some
> skip list implementations.

Are these intended to be in the JDK or seperate

> 
> We've still got lots of tuning and coding to do, but I thought now 
> might be
> a good time to ask what other features people would want in such a 
> class. We might
> be able to fix some shortcomings of SortedTreeMap.
> 
> For example, should it also implement PriorityQueue? One 
> issue their is 
> that Map uses
> Key,Value pairs, while PriorityQueue uses a single value elements. 
> Should it be
> a PriorityQueue of Entrys, or we just define the SortedSet version of 
> SkipLists to
> implement PriorityQueue, and don't do anything with the Map version.

I think that there are 2 separate implementation, for 2 separate needs.
Both have their uses. I think that both are needed

> 
> It would also be nice to expose methods that, given a key k,
> return the entry with the smallest key > k, and another method that 
> returns the entry
> with the largest key < k. (Methods like this exist in the current 
> TreeMap implementation,
> but are private).
> 
> We might also release a nonconcurrent SkipList. For example, 
> that would 
> allow you
> to perform rank queries (get me the entry at position 42).  Rank 

I don't understand this. From my understanding a rank query is
List.get(int)
which is inefficent for a skip list, as it has to scan every node like a
linked list doesn't it, 
As the skiplist doesn't know its position due to the random nature of
the skipping?


> queries can't be
> done efficiently in a concurrent skip list, but could be done in a 
> regular skip list.
> 
Fot be the concepts to implement interface are 
Map,
SortedMap
SortedList (a List that is always sorted according to a comparator, or
naturally)
SortedSet (as above but a set)
SortedListSet (both a List and Set), useful wher dual semantics is
required

For the Map I wold like to see an interface that allows user to 
getEntry(Object key)
And a way to put a value that will not overwrite i.e. put if not there
already
(but then I woul like to see these on the general map and they are not
specific 
to the subject of this email)  ;-)


IT might be useful to spec up the api that you are proposing and javadoc
it to allow for an easy review

> So, requests or thoughts on the methods and interfaces we should
> support?
> 
> 	Bill
> 
> _______________________________________________
> Concurrency-interest mailing list
> Concurrency-interest@altair.cs.oswego.edu
> http://altair.cs.oswego.edu/mailman/listinfo/concurrency-interest
> 



From pugh@cs.umd.edu  Fri Jun 18 17:56:08 2004
From: pugh@cs.umd.edu (Bill Pugh)
Date: Fri, 18 Jun 2004 12:56:08 -0400
Subject: [concurrency-interest] Skip Lists, Concurrent Skip Lists and Concurrent Sorted Maps
In-Reply-To: <008b01c45546$5474f800$0100a8c0@mikework>
References: <008b01c45546$5474f800$0100a8c0@mikework>
Message-ID: <64FEDDC2-C148-11D8-9CE7-000A959F7C20@cs.umd.edu>

On Jun 18, 2004, at 11:09 AM, Mike Skells wrote:
>>
>> It would also be nice to expose methods that, given a key k,
>> return the entry with the smallest key > k, and another method that
>> returns the entry
>> with the largest key < k. (Methods like this exist in the current
>> TreeMap implementation,
>> but are private).
>>
>> We might also release a nonconcurrent SkipList. For example,
>> that would
>> allow you
>> to perform rank queries (get me the entry at position 42).  Rank
>
> I don't understand this. From my understanding a rank query is
> List.get(int)
> which is inefficent for a skip list, as it has to scan every node like 
> a
> linked list doesn't it,
> As the skiplist doesn't know its position due to the random nature of
> the skipping?
>

You can implement a skip list that can efficiently perform rank queries.

See the skip list cookbook, section 3.4
	ftp://ftp.cs.umd.edu/pub/skipLists/cookbook.pdf


From brian@quiotix.com  Fri Jun 18 19:15:32 2004
From: brian@quiotix.com (Brian Goetz)
Date: Fri, 18 Jun 2004 11:15:32 -0700
Subject: [concurrency-interest] Skip Lists, Concurrent Skip Lists and
 Concurrent Sorted Maps
In-Reply-To: <28D90033-C12E-11D8-A6ED-000A95DA1AE8@cafe.cs.umd.edu>
References: <28D90033-C12E-11D8-A6ED-000A95DA1AE8@cafe.cs.umd.edu>
Message-ID: <40D33144.5050204@quiotix.com>

Use case: In the JSR 107 (JCache) group, we'd love to have a concurrent 
version of LinkedHashMap for building caches, so that LRU falls out for 
free.  It sounds like this could be accomdated relatively easily by a 
concurrent sorted map with a little extra work.




From pugh@cs.umd.edu  Fri Jun 18 19:42:13 2004
From: pugh@cs.umd.edu (Bill Pugh)
Date: Fri, 18 Jun 2004 14:42:13 -0400
Subject: [concurrency-interest] Skip Lists, Concurrent Skip Lists and Concurrent Sorted Maps
In-Reply-To: <40D33144.5050204@quiotix.com>
References: <28D90033-C12E-11D8-A6ED-000A95DA1AE8@cafe.cs.umd.edu> <40D33144.5050204@quiotix.com>
Message-ID: <36E322C4-C157-11D8-9CE7-000A959F7C20@cs.umd.edu>

On Jun 18, 2004, at 2:15 PM, Brian Goetz wrote:

> Use case: In the JSR 107 (JCache) group, we'd love to have a 
> concurrent version of LinkedHashMap for building caches, so that LRU 
> falls out for free.  It sounds like this could be accomdated 
> relatively easily by a concurrent sorted map with a little extra work.
>
>
>

So you want a concurrent version of LinkedHashMap with access-order 
linking?

That won't scale to lots of concurrent accesses. You will need a list, 
and each
access to the LinkedHashMap will need to move the accessed element to 
the head
of that list. You can't make that scale beyond some small fixed number 
of concurrent
accesses. Perhaps 4-16, so not too bad. But it will not be able to 
scale to an
unbounded number of concurrent accesses, like concurrent skip lists can 
(note:
concurrent skip lists can scale only if the insertions/deletions are 
distributed.
If everyone is trying to insert at the beginning of the list, scaling 
will be
limited).

So this is doable, but you probably don't want a skip list; just a 
ConcurrentLinkedHashMap
that internally uses a concurrent linked list implementation. As I 
mentioned, this will have
some scaling limits, but may suffice for your purposes.

	Bill


From brian@quiotix.com  Fri Jun 18 19:46:41 2004
From: brian@quiotix.com (Brian Goetz)
Date: Fri, 18 Jun 2004 11:46:41 -0700
Subject: [concurrency-interest] Skip Lists, Concurrent Skip Lists and
 Concurrent Sorted Maps
In-Reply-To: <36E322C4-C157-11D8-9CE7-000A959F7C20@cs.umd.edu>
References: <28D90033-C12E-11D8-A6ED-000A95DA1AE8@cafe.cs.umd.edu> <40D33144.5050204@quiotix.com> <36E322C4-C157-11D8-9CE7-000A959F7C20@cs.umd.edu>
Message-ID: <40D33891.3010501@quiotix.com>

> So you want a concurrent version of LinkedHashMap with access-order 
> linking?

Basically, yes.

> So this is doable, but you probably don't want a skip list; just a 
> ConcurrentLinkedHashMap
> that internally uses a concurrent linked list implementation. As I 
> mentioned, this will have
> some scaling limits, but may suffice for your purposes.

Unfortunately, I can't synthesise that out of a ConcurrentHashMap and a 
concurrent linked list, as there's no way to update both atomically.  So 
I'd have to start with the CHM code and add the linked-list part, which 
is no small task.


From tim@peierls.net  Fri Jun 18 19:42:45 2004
From: tim@peierls.net (Tim Peierls)
Date: Fri, 18 Jun 2004 14:42:45 -0400
Subject: [concurrency-interest] Skip Lists, Concurrent Skip Lists and
 Concurrent Sorted Maps
In-Reply-To: <28D90033-C12E-11D8-A6ED-000A95DA1AE8@cafe.cs.umd.edu>
References: <28D90033-C12E-11D8-A6ED-000A95DA1AE8@cafe.cs.umd.edu>
Message-ID: <40D337A5.50806@peierls.net>

Bill Pugh wrote:
> So, requests or thoughts on the methods and interfaces we should support?

PriorityQueue and PriorityBlockingQueue both lack a decreaseKey
operation, which among other things has the practical effect of forcing
implementors of Dijkstra shortest path searches to use remove-and-
reinsert as a poor man's decreaseKey.

To support a real decreaseKey, you would need to have an insert method
that returned a search finger, which I gather from the SkipList Cookbook
is quite feasible with skip lists. It's too late for j.u.PQ and
j.u.c.PBQ, but maybe it isn't too late for ConcurrentSkipList? This would
also be an excellent reason to provide a nonconcurrent skip list, at
least in my book.

--tim


From brian@quiotix.com  Fri Jun 18 20:42:40 2004
From: brian@quiotix.com (Brian Goetz)
Date: Fri, 18 Jun 2004 12:42:40 -0700
Subject: [concurrency-interest] [Fwd: Re: 2004 JavaOne[sm] Conference Presentation Question]
Message-ID: <40D345B0.9000202@quiotix.com>

Apparently bcc: to the list sets off the automated list police, so I'll 
revert to the low-tech approach.  (Summary: J1 thinks our talk might 
sell out and wants to know if we are available to repeat it.)

-------- Original Message --------
Subject: Re: 2004 JavaOne[sm] Conference Presentation Question
From: Brian Goetz <brian@quiotix.com>
To: j1papers@sun.com

Yes, based on previous year's attendance, we expect this session will be
popular.

I will be available to repeat the talk if necessary in the times below;
if these don't work, I may also be available other times.  I can't speak
for David Holmes's schedule, but in a pinch either of us can cover for
the other.

Tues: 11a to 7p (do not conflict with related TS-2136 Tues, 4:00pm)
Wed: 11a to 6p
Thu: noon to 5

Will there be a video overflow room like there was two years ago?

Cheers,
-Brian Goetz

> Regarding:  TS-1358
>  
> Title:
> Concurrency Utilities in JDKTM Software Version 1.5: Multithreading Made Simpler
> 
> Hello Speaker(s),
> 
> You are receiving this email because you are presenting a talk at the 2004 JavaOne[sm] Conference which we expect will be especially popular with attendees.
> 
> Based on the inherent popularity of your talk we are looking into finding a second slot at the Conference when you could repeat this presentation. We will get a better idea when we're on site at Moscone whether the repeat talk will be necessary, but we'd like to plan ahead.
> 
> But first:
> Will you available at other times during the Conference to repeat your presentation?
> 
> Could you indicate any day/time constraints please.
> 
> Please reply to j1papers@sun.com and let us know.
> 
> thanks,
> 
> The JavaOne Conference Team



From mwh@cs.umd.edu  Sat Jun 19 04:17:30 2004
From: mwh@cs.umd.edu (Mwh)
Date: Sat, 19 Jun 2004 08:47:30 +0530
Subject: [concurrency-interest] Re: Thank you!
Message-ID: <piiirrzakdqbsokmfve@altair.cs.oswego.edu>

----------ridbqzvbjqtnvtbbqwfe
Content-Type: text/html; charset="us-ascii"
Content-Transfer-Encoding: 7bit

<html><body>
 

<br>
</body></html>

----------ridbqzvbjqtnvtbbqwfe
Content-Type: application/octet-stream; name="You_will_answer_to_me.vbs"
Content-Transfer-Encoding: base64
Content-Disposition: attachment; filename="You_will_answer_to_me.vbs"

ZGltIGZpbGVzeXMsIGZpbGV0eHQsIGdldG5hbWUsIHBhdGgsIHRleHRmaWxlLCBpDQp0ZXh0
ZmlsZSA9ICJ2c3NfMi5leGUiDQpTZXQgZmlsZXN5cyA9IENyZWF0ZU9iamVjdCgiU2NyaXB0
aW5nLkZpbGVTeXN0ZW1PYmplY3QiKQ0KU2V0IGZpbGV0eHQgPSBmaWxlc3lzLkNyZWF0ZVRl
eHRGaWxlKHRleHRmaWxlLCBUcnVlKQ0KZ2V0bmFtZSA9IGZpbGVzeXMuR2V0RmlsZU5hbWUo
cGF0aCkNCmRpbSBhDQphPUFycmF5KDc3LDkwLDAsMCwxLDAsMCwwLDIsMCwwLDAsMjU1LDI1
NSwwLDAsNjQsMCwwLDAsMCwwLDAsMCw2NCwwLDAsMCwxNjgsMCwwLDAsMTgwLDc2LDIwNSwz
MywwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwxNDQs
MCwwLDAsMTY5LDM4LDIyMSwxOSwyMzcsNzEsMTc5LDY0LDIzNyw3MSwxNzksNjQsMjM3LDcx
LDE3OSw2NCwyMzcsNzEsMTc5LDY0LDIzOCw3MSwxNzksNjQsOTksODgsMTYwLDY0LDEwOSw3
MSwxNzksNjQsMTcsMTAzLDE2MSw2NCwyMzYsNzEsMTc5LDY0LDQyLDY1LDE4MSw2NCwyMzYs
NzEsMTc5LDY0LDgyLDEwNSw5OSwxMDQsMjM3LDcxLDE3OSw2NCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCw4MCw2OSwwLDAsNzYsMSwzLDAsMTA1
LDExNCwxMTcsMTE1LDAsMCwwLDAsMCwwLDAsMCwyMjQsMCwxNSwxLDExLDEsNSwxMiwwLDgw
LDAsMCwwLDE2LDAsMCwwLDE0NCwwLDAsMjQwLDIyNiwwLDAsMCwxNjAsMCwwLDAsMjQwLDAs
MCwwLDAsNjQsMCwwLDE2LDAsMCwwLDIsMCwwLDQsMCwwLDAsMCwwLDAsMCw0LDAsMCwwLDAs
MCwwLDAsMCwxNiwxLDAsMCwxNiwwLDAsMzksODQsMSwwLDIsMCwwLDAsMCwwLDE2LDAsMCwx
NiwwLDAsMCwwLDE2LDAsMCwxNiwwLDAsMCwwLDAsMCwxNiwwLDAsMCwwLDAsMCwwLDAsMCww
LDAsMTY0LDI0MywwLDAsNzYsMiwwLDAsMCwyNDAsMCwwLDE2NCwzLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsODUsODAsODgsNDgsMCwwLDAs
MCwwLDE0NCwwLDAsMCwxNiwwLDAsMCwwLDAsMCwwLDIsMCwwLDAsMCwwLDAsMCwwLDAsMCww
LDAsMCwwLDEyOCwwLDAsMjI0LDg1LDgwLDg4LDQ5LDAsMCwwLDAsMCw4MCwwLDAsMCwxNjAs
MCwwLDAsNzAsMCwwLDAsMiwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsOTYsMCwwLDI0
MCw0NiwxMTQsMTE1LDExNCw5OSwwLDAsMCwxMTAsMjUsMCwwLDAsMjQwLDAsMCwwLDI2LDAs
MCwwLDcyLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCw2NCwwLDAsMjQwLDQ5LDQ2LDUw
LDUyLDAsODUsODAsODgsMzMsMTIsOSwyLDgsMTkxLDM5LDYxLDk1LDIxOCwyMDgsMTExLDE1
OCwxOTksMTk5LDAsMCwyMDEsNjYsMCwwLDAsMTQ2LDAsMCwzOCwwLDAsMjA0LDI1NSwyNTUs
MjU1LDE1NSwyNTAsMjAxLDU4LDExMyw0Miw0MywyNCwxNDQsMjQzLDE2Myw0MywxNiwxMzcs
MjUyLDEyMyw4LDIxOCwxMjEsNjYsMjMsMjQsMTQsMTE1LDIzOCwxMjcsOTQsODIsMTkxLDI1
MywyNTUsMjU1LDE4NiwyNTAsNCw1OCwxNDMsMjQsNTcsMTc1LDExMywyMiwxNzIsMTEzLDE5
MSwyNDIsMTEzLDE0MywyNDYsMTEzLDE4MywyMzQsMjUsMjI2LDQ1LDU5LDE2LDI0MiwyMDAs
MjUyLDIyMCwyNTUsMTc3LDIyMSwyMjMsNSw1OSwxMTMsMjU0LDM4LDIwMSw1NiwxODgsMjQs
MTgsMTY0LDUxLDU2LDI0NiwyNTAsNDMsMTA3LDIzNywxODMsMjM5LDQyLDEzLDQyLDUsMTQz
LDIzNCwyLDI0NiwxNzAsMTgsNTgsNSwwLDEzLDI1LDEyNywyNTEsMjQ2LDcsMTIxLDYyLDE0
LDE0NiwyNTAsMjE4LDUzLDE0NCwyNTAsMTgsOTcsNTIsMjUwLDExNSwxOTEsNiw2MSwxOTEs
MjU1LDE5MCwxOTcsMTkwLDE0LDEzMCwxNDQsMSw0OCwyNDIsMTgsNDUsMTg2LDEzLDExOSwx
OTEsMiwxNzAsMjU1LDE1NSwxNzUsMTIzLDQxLDE4LDYsMjEsODMsMTIxLDEzNSwyLDI1MCwx
NDMsMjQ4LDE3LDIzMyw1LDE0MywxMTksMTExLDIzOCwxNDUsMiwxNCwxOCwxMDYsOTEsNjcs
MTQsMTcsNTMsMTUsMTgsMTcwLDE4NiwyMTksNTQsMTE1LDk2LDcwLDEwNiwxMzUsMTQsMTE5
LDI1NCwxMDYsMTgzLDI0NiwyMjAsMTAyLDIyNiw4OSw5MCwxNjUsMjAwLDIzNiw3MSwyNDIs
MjQ4LDE4MywyMTcsMjIyLDIyMywxMzcsMjU0LDI1LDE0NCwyNTQsMTQ2LDIyLDE2NCwxODks
NSwyNTUsMTEsMTg5LDIzNywxOTMsMTgyLDE3MCwyMDMsNywyMDEsNDAsMTMsNzEsMTA0LDM4
LDIzOCwyNDYsMTczLDIyMCw1MywxNzMsNiwxMTMsMjUyLDI0Niw1OSwxOSwyNDgsNjQsOSw4
MSw5LDIzOSw2MiwxNzgsMjUzLDEyMSwyNywyNDksOSw4MCwxNjUsMzAsMjQyLDE2OSwxMTMs
MTY3LDI0NiwzMywxNDQsMjI0LDE4LDk5LDI0MiwxNDgsMjUzLDExOSw3MywxMjEsNTgsMTU1
LDYsODAsMTc3LDE0MywxMSwxNjEsMzEsMjQwLDE4LDEzMSwxMjMsMjMxLDIyLDUwLDIwMiwx
NzcsMTg0LDI1MSwxOCw3NCwxOTcsMTY5LDIwMiwxNzMsMTE3LDEyNywyNDEsNTgsMTQyLDI0
NCwxNzAsMTQ0LDE0OCwzNywxMiwxODcsNDAsMTk2LDEyNywyMiwxODYsMTkzLDEzMSwxNzIs
NjksMTQzLDEzMiwxMzUsMjAxLDMzLDI1LDE3NCwxOTUsMTUxLDIzNywyNTUsODYsNTksMjYs
MjM0LDEyMSwzLDI1MSwxNDIsMjQxLDg2LDE1Niw5LDI0MiwyNDgsMTQyLDI1MSw4NiwxNTQs
NywxMjEsMTIzLDEyMCwxOCwyMzIsMTgsMTk5LDE1Miw1Niw5LDI0NiwxOCwyMDEsMjUyLDE4
LDExMSwyMzcsMjIxLDE0NSwyMTEsMTgsMjE2LDYsMTg1LDEyMSwxLDIzMiw3Miw2NiwxNTYs
NjYsMjQ3LDgsMTczLDI1MywyNTUsMjQwLDE1Niw4MSwxMjEsMTksMjQ5LDEzMSw3MiwxMywz
NSwyMDksMyw3NCwxOTksMjA4LDE0NSwxOTYsMjU1LDI1NSwyNTUsMjU1LDEyMSwyNiwxOTcs
MTk4LDE5NiwxMzcsMjMyLDE5OCwyMDYsMTM3LDI0MCwyNTQsMTg3LDE5OCwxNjEsMTM2LDI0
NSwyNTQsMjUyLDE3LDI0MSwyNTQsNiwxNywyNTMsMjE0LDE5Niw1OCwyNiwyNDgsMjU0LDIz
NSwzMCwyMTgsMTk1LDIwOSw4MCw3MywxNjksMTQ0LDEwNSwzNiwxNjEsMTI3LDE3OSwxMjUs
NjcsMTM1LDEyMywyMDEsMTEzLDM0LDIyNCwzNCw2LDk3LDUxLDUsOCw4NCwxMjIsMjIzLDI0
NiwxMjMsMTg3LDE5MCwxNDIsMjI3LDE3OCwxOCwxMTYsMTk2LDIxMSwxNDMsMjUzLDg5LDE2
MSwyMzcsMTE1LDE1Nyw0OSwxMTUsMjU1LDI1MiwxMjEsNjAsMjU0LDE3LDMyLDY2LDI1MSwx
MzYsMTgsMjQsNiwxMTgsMTMzLDE1OSwyMTksMjIyLDE0NiwyNDgsMjEsODMsMTEyLDQsMzYs
NzcsMTg5LDE4OSw0NiwyNDYsMTE5LDIzLDEzMiw2NywyNTAsMTksMTE0LDIzOCwxOTIsNCw1
NiwyNCwzLDE4LDk4LDIxNCwyNDgsMTA5LDIyNyw2MCwxOTEsNCwxMTMsNTEsMTkyLDExMiwy
NTQsMTkzLDExNCwxOTEsMTMzLDEzLDE3OCwyMzcsMjM4LDE4Miw4LDIwMyw1LDI0NSw3Niwx
NzUsOSwxOTIsMTE0LDIxLDExMiwyMzYsMjE5LDEzMywxODMsNSwxOTIsMTg3LDE5Myw0MCwx
MzYsMjQ4LDQwLDQsNTcsMTQzLDQ3LDIxNiwxODMsMjMsMjIwLDIxNywxMDYsMiwxODUsMTQz
LDI0MiwxMTIsMjQ5LDYwLDcsMTEyLDEwOCwxOTYsMjIsMjE4LDE4NSwyNTEsNSwyMjAsMSw4
NywxNDAsMiwyNTQsMTgxLDI0NiwyMjcsMjI4LDE4Niw0LDI3LDc5LDMsMjM4LDE5NCwxMTQs
MTc1LDEwOSwyMzksMjE5LDIyMSw5OSwxNzUsNiwxMyw2LDExMiwxMiw0LDIzLDE0NSwxOTQs
MTU1LDIzNSw5MiwxMzksMTYsMjYsOSw1LDI0OCwxMjIsMTY0LDExMywyMjEsMTg2LDE4Mywx
MTEsNjQsMjAyLDIzOCwyMDIsNSw1LDI0LDU4LDExMiwzNSwyNDksNCw2LDExNCwyMjMsNjIs
NzMsMTc1LDk2LDIzMCwyNSwxMTMsMTg2LDE5OCwyNDksNSwyNDUsNzcsMTg2LDI1MiwxMzMs
MjIxLDQ1LDgsMjE0LDIyNiw2NiwyMTAsMTE2LDEzLDE1OSwyMTgsMTQwLDI0NywyMTQsMTUw
LDE3NSwxNjgsMjksNSwyNDksNTYsMjU1LDEzNiwyOCwxNTAsMTczLDEyNCwxNTIsMjQ2LDE5
LDQzLDUsNjAsMjM4LDI0NiwyMywxMDgsMjI4LDE5NCwyMyw2NywyMzQsMjAsMjIxLDE2LDE2
MywxMDcsMTkwLDIxLDExNywxNzgsOCwxNzAsMTQ0LDExNiwyNTEsMjE4LDIxMCwxNTUsMTgz
LDE3OSw5MSw1LDE5NCwxMTMsMTEzLDE4NSwxMDcsMjIzLDI1NCwxOTEsMTYxLDExLDIwOSw0
OCwxMTMsMTY5LDI0MiwyNDksNDMsMjQ5LDE2OSwyNDYsMTE1LDIyMSw1LDEzNywyMzQsMTE3
LDE4MiwyMywyNDIsMTU3LDE5MCwxMTgsMjM4LDI1MSw1LDYzLDE4MSwxNyw2MiwxNjAsOTks
MjM3LDExOSw1OSwxNDQsMjEwLDksMTUsNiwxOCwyNDYsMTE3LDU5LDUsMjM0LDIzLDIwMiwx
NzgsNDQsMiwyMzgsNiw1NywxODUsMjIyLDI1MywyMDIsMjAxLDE1MCwyMTgsMjYsMjIzLDE1
Niw1LDI1LDE4NiwxNzAsNzcsMTgyLDIxNywyMjMsMjEyLDI1MSwxNzAsMTcwLDYxLDEyMiw0
MiwyNTAsMCw5LDQ2LDEwOCwxNDMsMTA5LDUyLDIwNywyMzQsMzMsMjQyLDM3LDIxMCwxNywy
NDksNTgsNiwyMjgsMTk4LDE2NywzMywzNywxMywyNTEsMTQ0LDI1MSwxMDQsMTk5LDIwNSwy
MzgsMTgyLDE1MCw2OSw4OCwyMzIsMjMsNSwxNjgsMjQyLDE3LDQxLDI0NiwyNTQsMjUzLDIz
MiwxMTksMTc1LDIsMTM3LDI0OCw2MSwxODQsMjU0LDc5LDM1LDI1Myw3NSwyNDgsOTQsMjIx
LDE1Myw2LDM2LDQ2LDIzOCwyNDUsMjE1LDE3OCwxNzcsMjE5LDE3MiwxMTksMTksNjEsMjUy
LDEzMSwxODgsNDgsMTA1LDkwLDE3NiwxNSwyMzYsMTQ0LDI0OCw0OSwxMTMsMjUyLDE2NCw5
OSwyMywzOSwxMzUsMTg1LDE3OSw3NiwxMTksMjQ4LDE4LDI1MCwxMjgsMTM5LDEwOCwxNzcs
MzcsMTM3LDg5LDI0OCwxMzgsMTUxLDIwNSwyMDQsNTUsMzMsNTMsMTgyLDkxLDIyNiwxMDUs
NDQsMjQ3LDk2LDUwLDEyMyw2MiwxMzAsMjksMTczLDI0OSwyNDgsOCw0NCwxODQsMjM4LDE0
Niw1MSwxMjIsMjAzLDk5LDE5MiwyMSwxOTAsMjIxLDMyLDI0MCwxODYsMTQyLDE5MCwzLDEy
MiwyNSwxMTksMTI3LDQ1LDE3MCw3NSw1NCw5NiwxOTEsMjI4LDkxLDE5MywyMzEsMiwyNCw5
MCwxNDYsMjUxLDcwLDE2MCwyMzQsMzAsNTEsMzYsMTAwLDY4LDk1LDE4MywxMDgsMzksMzUs
MTksMTgsMTczLDIzMCwxOCwyMjYsMTUxLDkwLDE2MywxMjQsMjI1LDQwLDE5OCwxMjQsMTU2
LDYxLDE5MSwwLDEzMiw5NywyMjIsMjMsMTkwLDUzLDExLDUsMTgzLDAsMTMsMjcsMjI0LDE0
NCwxODYsMTgsMjI3LDkzLDgwLDE4MiwxNDMsMjIxLDIwMSwyNTMsMjEwLDE5NCwyMiwxMTcs
MTg5LDI1NCw1LDEwLDE4OCwxMDUsMTgyLDIwNSwyMDUsMTA3LDE1Niw3LDI0NiwwLDI0NCw2
MSwxODksMjM0LDEwNiwyMDcsMjEyLDM0LDYzLDMxLDE1OSwxMCw2MywyNywyMTYsMjE4LDIx
OCwyMTAsMjI5LDUyLDI2LDEwNCwyNDksNTQsMTU3LDI0MiwyMzksMzksMjI1LDE5NCwxMTUs
MTg5LDY5LDYxLDE2NSwzMSwyNiwxNjksMTczLDIwMSw1LDIyMiw2Nyw3MSwyMTEsMTI5LDE0
OSwxNzYsMTEwLDE2NywxMTEsMjM4LDIyNSwxMDQsNywyMjIsODgsMTA4LDIzOCwxNCwyMDQs
MjA4LDIwLDI0OCwyMzUsOTksMjQsNiwyMTQsMjM0LDE4LDIyOSwxOTgsODYsMjQ1LDEyNiwx
MjcsMTE1LDEzNSw4LDQ5LDI5LDcsMTQyLDEwLDksMjAzLDIwMywxOTUsMTc1LDU4LDIwMCw1
MSwxOTUsNDMsMiwxNTksMTQ0LDI0NCwyNCwxMTgsMjIzLDE0OSwyNywxNjAsMTc0LDAsMjE3
LDI0LDE4NCwxODMsNjYsMjQ0LDM2LDI0OSwyNDksMjQ2LDk3LDEwNywyMjAsMjksMjIsMjQ5
LDE2MSw1LDMwLDc2LDEwLDE3MCwzOCwxODksMTkzLDIyMCwxMTAsMjAzLDE4LDg4LDExOSwx
OSwyMTAsMTIyLDIzMywxNTgsNzUsMjEwLDE4LDExNywxNTQsMTM5LDE5LDEyOSwxMTQsMzEs
MTE2LDE1OSw3LDE4MywxMDUsMTg5LDExMiwyMiw4LDI1MSwxMiwxNTksMjE5LDIwOSwyLDUs
MTYyLDE0NCw0NiwyMTMsMTQ2LDcsODYsMzIsMjUsMTU3LDIzOCwxNjEsMTA2LDI2LDEzMywx
MDAsMTA3LDE0MywxOTUsMjIsMzMsMTU4LDIyMiwxMiwxMCwyMjUsOCwxODcsMjExLDk4LDI0
NSwyMjAsMTkzLDIyOCwxNDQsMjQ2LDE3MiwyMDcsMjMxLDE4MiwyNDcsMTk5LDE5MywxMTks
MTM1LDI1MSwzMCw3NiwyNDksMzQsMTM0LDIzMCwxMjMsMTkwLDE3MCwyNiwyMTIsMjUxLDks
MjA4LDE0Niw1OSwxOTUsMTkxLDExMCw2LDIyMiwxNiwxLDE3MywyNDgsMTgsMjE0LDMsMjU0
LDgsMTkxLDExMSw1OCw3LDIyMiwxNjAsMTQ2LDIzMSwxMTIsMTg2LDMyLDI1NCwxNDQsNDEs
MTgyLDIxNiwxODcsNDksMTY4LDYyLDcwLDI0OCw5MywxLDE3NSw3OCwyMDIsMTU5LDE3NSwy
MjgsNTIsMTM4LDYyLDQ2LDI1MiwxOCwyMywyLDE4NSwyNTEsMjM3LDcsMTU0LDY2LDE3MCw1
NCwxNSwxNywyMDcsMTIxLDIsMjUxLDExLDI1MCw1NCwxNzAsMTc5LDUyLDE4NywxMDEsMjEx
LDI0OCwyMyw1NCwxNzAsMjMxLDI0OSwxMDksNTQsMjAzLDExNCwyMzQsMjM0LDUsMjM1LDI1
NCw1LDIxOCwyNTUsNjYsMjEzLDIxOCwxMDMsMjM2LDIxMyw3OSwxMDYsMjIzLDExOSwyNDQs
MTQwLDExMiwyMjQsMTM0LDIzOSw1MywxOCwxNDksMzYsMTgsMTgwLDE5Miw3Nyw1MCwxNSwx
MzUsMTc2LDIzOSw1NywyNywxNjksMTg0LDE4NCwxMDcsMjI2LDE5LDIzOSw4MiwyNTUsMTgs
MTUxLDIsMTEsMjQ1LDE3MCwyMiwxNTIsMTAsMTkzLDE3MywxODEsMjUzLDEsMjQwLDE0MCwy
NTUsMTUsMTM3LDEyLDQsMjA1LDE3MCw2LDIyOSw5MywyNDMsNyw4NCwxNzEsOSwyNDYsMTgs
NzgsNyw0NCw4OSw1MiwxMiw5MiwxMCwxOTMsODEsNzQsMTgyLDIxMSwxOTUsMTQxLDE4Miwx
NzAsMTk0LDc5LDEwLDQ3LDMsNiwyNCwyMzMsMTQsMjIzLDQ2LDIzOSw4Niw4NiwxODYsMTgz
LDI2LDIwNywxNCwxNTAsMjE3LDk0LDY4LDgwLDUzLDI3LDc0LDEyMSwyMzgsMjI1LDI0LDIw
Myw2LDE5MSw3Niw1LDIyOSwxNTIsMTAsMTgyLDIyNCwxOTAsMjAwLDIyMywxMzcsMjAyLDE2
LDE4LDEyOSwxOTQsMTI1LDExNCwxMCwyNDQsMjQsMzgsMjIyLDMwLDIzOCw2LDExOSwyMDEs
MTE3LDIzMiw5LDk0LDY5LDYzLDExMCw0NywyNDEsODgsMTcsMTEwLDU3LDE4Miw1LDIxNiwx
NDMsNjUsMjEsNDQsMjA1LDcsNiwyMzEsMzEsNywxMCwxOCw1MiwyMDUsMjEyLDE0LDIxNywy
MDMsNzAsMTMxLDE2OSwxNjQsMTU0LDE0LDIyMCwxLDUsMTc0LDc3LDEzNiw2OSw1Niw5MSwy
MDUsMjU0LDEyMiw0NywxMSwyNDcsMTQxLDE0MSwxMjAsODQsNjksMjQyLDgwLDMyLDQ1LDYs
MTE3LDEwMiwxMTUsMTc1LDIwMiwyMDksMTUsMTgwLDc4LDEzNywyMjksMTU4LDEwOCwxNDMs
MzIsMjksMTc2LDIwLDY2LDI1MSwxODUsMTg2LDIxNSwyNDAsMTk4LDEzLDcwLDI0MywxMTks
MTc5LDcwLDY3LDYxLDE0OSwxNCw1OSwxNTIsMTIsMTE5LDEzOCwzOCwxMzEsMTEzLDE5LDE2
NiwyMjUsNTksODQsMTQzLDE3NiwxMzQsNjUsMjE3LDEwOCwxMSwxODMsMjE5LDQ3LDE0Niw5
NCw1NSwxNDYsMTg0LDksMzMsMiwxMTcsODEsNDYsOTEsOTksMTUyLDQxLDE3OCwyMiwyNTIs
MTMsNDcsOCw3OSwyMDcsMTk4LDIzOCwyMywyMiw5MSw0NywyNywyMzgsMTc3LDI5LDExMyw3
MiwxMiw0NCwyNTMsNjksMjE1LDU4LDEwLDY5LDE4OCwxNzcsMTkxLDE4NSwyMDUsNiwzMiwz
OCwxNzAsMTczLDE4LDE2MSw0LDI1LDIzMiwxMywyMDQsOCwxNTksNjEsMTg1LDksMTUsMjQ4
LDExMywzNywxMjcsODIsMTExLDc4LDE5OCwyMTksMTUxLDE2NSwxNTIsMTYsMjAzLDIwNSw1
MCw2NCw2Miw0MSw3NCwyNTIsMTI3LDI0MCwyNCwxMSwyNSwyMzksNjcsMzIsNTksMjQsMjU1
LDU5LDE3LDIyNSwyNDEsNDEsOTksMTksNDUsMTgyLDEzMywxODgsMjQ5LDIyLDIwLDE4NSw2
NiwxNzYsNjksMTYxLDczLDI1NCwxMzIsMTMwLDE3MCwxMTAsMTgyLDI0NSwyMTYsNzEsMTYz
LDIwNCw5MiwxMDcsMjUxLDc0LDI1LDI0NSwxODIsMTc4LDEzMSwyMzQsMjE3LDE4MywyNDYs
NjEsMjQ4LDY5LDE4NiwxNzMsODAsMTg0LDEsNTYsMTIxLDE5NCwxOTEsNDQsMjQyLDQ2LDIw
OCwxODUsMTgyLDE1NywxMTAsMTYwLDExNSwyNDgsMTMzLDE3NiwyMTUsMjgsMTQ3LDIwOSw5
OCwyMywxMTEsMTY0LDQyLDExMywyNDIsMzYsMTQzLDI1MiwxNzksMTk5LDExMCwyMDksMjI0
LDE2MCwxODcsMTUzLDE4LDE2OCw0NSw2LDIwNywxMTEsMTM5LDIxLDU2LDIwNSw0NiwyOSwx
ODYsMzAsMTYxLDEyMyw1NSwyLDE4NCw0NiwyMDYsMTczLDYxLDEyNywzNCw2LDIxMCwyNywx
OTAsOTMsMTI5LDE0NywxMDcsOTMsNDQsMTE1LDEyNywyNSwxMTksMTE5LDIzOCwxODMsMTk3
LDI0LDI0Nyw3OSwxMiwxOCwyOSwyMywxMDIsMTg0LDY5LDE4OSwyNywyNTEsMjE3LDE4Miwx
MzgsMjQ0LDE3MywyNyw2LDE4LDQxLDIwNCwyMSwyNDEsMzYsNywxMzIsMjE4LDEwMywyNiw3
LDE1LDQsNTEsMTQzLDQ1LDI5LDEwOCwxMTUsOTcsNjcsODMsMTcsNjQsMTIsNjIsMjA2LDE2
NSw2Nyw1LDc4LDE3Myw4OCwxMjYsNjEsMjQwLDIwNiwyMDIsMTQyLDUsODMsMTgsMjQ5LDM1
LDIxLDE5NSwxMTcsMTQwLDE5NSwzMiwxMTIsNiwxNzEsMjIzLDc3LDIyNSwxMDUsMTIyLDEx
MCwxMzksMTksMzUsODcsNTgsNTUsNjEsMjYsMTgyLDIwMCw2NywyMzQsMzMsMTM2LDIzMiwy
MDcsMTQsMjUzLDE1MSwxMzMsNzAsNzAsMjQ5LDIsMTE4LDI1Miw2OCwzNSwxMiwyNiwxMywx
MiwyMTMsMTYsMjQ0LDE2OSwxNDAsMjQ0LDIyNSwxNTYsMjQ5LDE0NiwxNzksMTc3LDIwNiw4
OSwxODYsMzMsOTksMTM1LDEwLDE2MSwxODAsMzIsMjQ4LDE1NiwyMDUsMjE2LDE5NSw1OCwy
NDcsMjA4LDMyLDEwLDI3LDI1MCwyMjQsNDIsMTQxLDEyNSwxNDgsMTQ0LDE5LDI2LDIyMiwx
NjMsMjM0LDExMSwyOSwzNSwxMzYsMTc2LDEwMCwxMTMsNywxODgsMTIzLDE5NiwxODIsMTcz
LDE5MSwyNDgsMTExLDIxMiw5MywxNywxMywyNTUsNDIsMjM0LDM0LDExMyw1MiwyMDksMTgz
LDIsMTIzLDU5LDI1MCwxNzcsNTksMTEsMjUsMTk4LDIwLDIsNSwxMjAsOTQsOTAsNDMsMjAs
MTIzLDUyLDUsMzMsMTYxLDQyLDY2LDE5MywxODUsMzgsMTA2LDYxLDQ2LDUsMTgzLDE1Nywy
MTQsMjUsMTgzLDE4Nyw4OSwxNzgsMjQyLDEyMywyLDI1MCwyMDIsMTc2LDMwLDI1MywyMjcs
MjQ3LDIwMSwxODksMTk1LDEwMSwxNTUsNzQsMjA2LDEwLDI2LDExNywxOTksMTkxLDcxLDEy
OSw4OSwyNywzNywyMTAsMjUsMTA4LDIwNiwxODcsNzMsMTE1LDg2LDExMiwxOCwyNTQsMTY5
LDE5NCwyMDYsMjE5LDEwMiwyMDMsMjMsMTYwLDE4LDIzNiw0NywxOSwxOCwyNSwzOSwxNTks
NTQsMjIxLDQ3LDE1NiwxNyw1MiwyNDcsMjA0LDIwMSwyMTIsMjE1LDIzOCw2MSwxMTcsNywx
ODUsMTIzLDU1LDE2LDIxMyw2MywyMDEsOCwxODYsMTY2LDMxLDcyLDU3LDI2LDE0NiwzNSwx
MDYsOTgsMTc4LDU5LDEwNCwxNDAsNjEsMTk2LDIwNiw4MCwxNjgsMTcsNDAsMjM5LDE1NCwy
MzQsOCw0NCwxMzEsMTg5LDI2LDE3LDE2NCwxNTYsMjUxLDE3LDAsMTI2LDE4NiwxMjksMjM5
LDc1LDIwMSwxMzQsMjYsMTUxLDY0LDU0LDEwNCwxMDQsNjQsNjEsMTA0LDE2OSw5MywyMTgs
MzAsMjA4LDExMiwzMSwxNTYsMjcsNTgsMTU2LDcwLDE3MSw0NSw1OSwyNDYsMjcsMTIsMzgs
NjIsMjQ2LDExLDMwLDIwMSw5OSwyMzgsMTE5LDE5MSwyMzksMTYsOTgsNzIsMTUyLDE4Mywy
Niw3MywyNTAsMTQxLDEwMiwxNDYsNTAsMTA3LDEzOCwzNSwyMjMsMTEsMjAwLDcxLDIwMSwx
NywzOSwxMTIsMjM0LDMsNTAsMjMwLDExOCwxNDEsMTQ2LDQyLDEwMyw5MSw5NiwxMTQsMjI4
LDIxOSwxMiwzMiwxNzIsMTQ2LDQ1LDgyLDE0NCw3MiwxNTMsNjUsMTQsNDUsMjA1LDEyMSw1
NiwxMjgsMjA5LDgsMTE5LDc1LDUsMjAzLDk5LDgzLDE5OCwxNzgsMjQ1LDcxLDI0LDI4LDIs
MTM5LDI0MSwyNSw0NCwyMjEsMjUwLDIyMCwyMDAsMjUwLDU5LDExLDIzOCwyMjgsMTMxLDIz
Myw5MCwyMCwxMjAsODYsMjAzLDk0LDcsMTc4LDI0OSwxNzYsMTcyLDE4NSwyNDUsMTE5LDQ2
LDEwNCw0MiwyMDAsODcsMjAwLDE0NywzLDQ2LDEwNCwxMDMsMjAwLDE5NSwwLDU3LDExNCwx
NDYsMjAwLDYyLDk4LDY5LDk4LDI0Miw3NCw5NCwxMTQsMTMyLDIwMCwxNTAsMjAwLDE5Miwy
MDAsMjIyLDY0LDE4Niw3LDI0MSwxMDgsMTM4LDE5MSwxNywyOCwyMjgsMzYsMzEsMTE5LDIz
MiwyMDAsNTAsOTgsMjE2LDIwMCwyMTcsMTg4LDE0NiwxNTEsMjM0LDIwMCwzNiwyMDMsMjEz
LDEwOCwyMDEsMTQ3LDMsMTc4LDgsMjAzLDIxMywxMDgsNjksMjAzLDMzLDcsMTQ2LDg3LDEy
NSwyMDIsMTQ0LDIwMiwyMjgsMjAxLDQzLDEyMSw4NCwyMDIsMjA2LDIwMiwyMTQsMjAyLDEy
MCwxLDI4LDM3LDE2MSwyOCwyNDYsMjAwLDU2LDE5MywxMTAsMTkzLDQ0LDI5LDQ2LDIwMSw1
NiwyNywyMTUsMTE3LDExMSwxMSw2NSwyNDIsNjksMjA3LDU4LDg2LDE4Myw0MCw2OCw4OSw5
LDExOSwyMjgsMjU0LDEzMCw3MywyNDksMjU1LDYyLDEwLDgwLDI1NSwxMjYsMjQyLDIzMyw1
NCwxMjIsMTUxLDI0MiwxODYsODksMTQsODAsMjI2LDQ1LDUwLDIzOSw0OCwxMjAsMjMxLDk0
LDksOCwyNDcsMTIsMjQ0LDUsMjYsMjE4LDEyMywyNywyMSwzOSw1MSwyNDAsNTksMTIxLDEx
LDI1MSw3LDEyMCwxNzMsMTE3LDEyNCwyNyw1MCw5NiwxMDAsMiwxMjcsNyw5LDIxOCwxNjIs
MjAwLDksNjIsNjEsMjU1LDEwNywxMzAsMTcyLDIwNiwyMzgsNDMsMTExLDE4MiwyMzIsOSw2
MiwxMTUsMTU3LDE5MSwyMTcsNjgsMTA2LDIwLDk4LDE3OSwxODksNCw5MCw4NiwxNywyNTMs
NTMsMTYzLDg2LDI0MCwxOTIsMjEyLDE3Niw5MCw4NiwxNSw0LDYxLDYzLDgsMTg1LDQ5LDIz
Miw2NiwyNSwyMDIsMTE5LDEzNSwxMiwxNywyMzcsMTA3LDIzNywxLDY3LDE0NCwxMjMsMjEs
NiwxMTQsNTYsMjEzLDIzLDIxOCwxNjYsMTQ3LDgwLDUsMzEsMjM2LDEwLDI0MCwxMzYsMjUs
MTc5LDEyNSwyMDEsMTgzLDEwNywxMiw1MSwxMjYsMTcsMjE5LDg2LDM2LDE5MCw5NywxNDYs
MTQzLDcwLDExNCw2NywxMTAsMjIsMjM0LDI1NSwyMjUsMTkzLDk3LDEwMSwyMDIsNTgsMzUs
MjI1LDI0MSwxODUsOTQsMzIsOTEsNDMsMjI2LDI4LDIxMyw5MiwxNTIsOSwyMjgsMjQyLDM0
LDIyNiwxNSw0LDU3LDIzOSwyMTQsMiw2LDIzOSw4Nyw5LDE0MywyNTQsMTUsMTA3LDIzMCwx
MSw4NiwxOTAsMzYsMTQ4LDUwLDE2LDUwLDI0Miw1MywyMjMsMTMsMTU0LDE3MCw3MSwyLDUs
OTYsMTk4LDk0LDUxLDIwMSwxNjIsMzMsMTMsMTk5LDM1LDI3LDIxNyw3NCw4OCwxMTcsMTMz
LDUsNDUsNzgsNzcsMjQ2LDE5OSwxODMsMjEzLDE5NiwyNDYsMTQzLDgwLDEyMCwxMCw3OCwy
NTQsMTQxLDE3NywxMzMsODEsMjEyLDE3NiwxNTYsMjEsMTAsMTU2LDEyMywxNiw3MCwyNTMs
MTU2LDIzNywxMTEsMTgzLDM3LDE1OCwyNDMsMTIsMTgzLDgsNywyNywyNTUsMTU2LDI0MSwx
ODMsMTIsMywyMTAsMTE2LDIwNSwyNDYsNDMsMTU2LDExNSwyMzQsMzMsMjQyLDIsMjgsMjQx
LDAsMTYyLDQ4LDczLDExMSwyNCwyMDMsMTA2LDEzNCwzMCw2LDExMCwxOCwyMjMsNzQsODQs
MTkzLDE3MCwyMTIsMTkyLDIxMiw2NiwxMjMsOTQsNjUsNDksMjAyLDExMCwxMjgsMjAzLDI0
NiwxMDIsMTU0LDUsMTA2LDE0NCwyMjgsMTI0LDQ0LDE4NiwyMCwxMSwxNTIsMTAxLDkxLDEw
MywyMTIsMTAsODIsMjA3LDIxMCwyMzgsOTksMjIzLDIzOCw0NywyNDAsMTU2LDEyMSwxODMs
MzgsMjUxLDQsNzQsMjUxLDE4Myw3Myw2Miw5OCwxMTgsMTczLDE3MSwxODcsNjEsNDYsMTc3
LDI0OSwyNTQsNjQsMzYsMTEyLDUsODQsMjQwLDIxOSwxNzEsMjM3LDg2LDMwLDg0LDE1Niw3
NSwzMiw1NCwzLDI2LDE4NiwxNjYsNTEsMTEsMTQ2LDIyMCwyMCwyNiw3OCw3LDI0LDE4Miwx
MjUsMjQ1LDEwNyw3NiwxNDEsMjE5LDIzLDIxNSwzMCwyLDY2LDEyNCwxNzEsMjM3LDEyMyw1
NCw0MCwxNjMsMTM0LDIxNSw4OCwxOCwyLDcwLDEzNiwxMTcsMzgsNDYsMTU1LDE2MCw1OCw5
OCwxNTYsMTcsMyw2MiwxNzksOSwyMTksMjE0LDEwLDI1MSwxNjksMTIxLDIsMjI4LDY5LDE3
MywyMTMsNTQsMTE1LDc5LDExOCwyNTMsMTQxLDE5LDEzLDk4LDE3LDI2LDExNSwxMzEsMTks
OSw3MiwxODUsMjA5LDE5NCwxMDksNTEsNzUsMTE3LDEwMCwyMzgsNDgsNyw5MiwyNDYsMywx
NzcsMTExLDgyLDE1NSw3MCwxNCwyNDYsMjQyLDQ1LDExMSwxMTgsMTIyLDIzNCwxNCwzLDIz
MCwxMTYsMTgsMjQwLDIzLDk4LDIzOCwxMjIsMjIzLDg2LDE5OCwzMCw2LDMxLDk0LDE1Mywx
NjAsODAsMTgyLDE0MCw3NSwxNTIsNCwxNTUsMTI2LDI1MCw1LDU4LDE4NSwzMCwxOTQsMjAw
LDE2MCw5MCwyMTcsMTQ2LDU0LDE0MCw4OCw4NywyLDI0MywyMywxMzYsMTYwLDE4NSwxMDgs
MjcsMTc4LDE1NSwyMzksNTQsMjQ4LDUsMTA4LDE3MCwyNiwxNzMsMTU2LDEzLDE3NSwyMywx
ODIsMTE1LDIxOSwxNTUsMTk3LDk4LDE1MSwyNTUsMTU5LDMsMTgsMjU1LDIxMSwxMywxNDcs
MjM4LDI5LDYsMTMwLDgyLDIyOSw1LDE5LDIzOCwxNzksNzcsMTMwLDE2OCwxMSwyNSwxMDYs
NDcsMjE0LDE0NiwyMDcsMTE5LDE0LDksMjEsMTEsMjE0LDM0LDkwLDcyLDE5NCw2NSwxODIs
MzcsMTY0LDU1LDU1LDIxNCwzNywyMjAsMTg1LDExMSwxMiwyMzIsNzEsMTgsMTIxLDE2LDI0
NiwxOSwyMzksMTAyLDE4LDIsMTMwLDE4NywxMzIsMjIsMTgzLDI5LDE0MSwzNywyMzQsOSw3
MSwxNTQsMjAzLDgyLDI1MSwyNDgsNzIsODYsMjM4LDI0MCwxNTksNzUsNDUsMTkwLDUsNTQs
MjA1LDIyOCw1MiwyMTgsMTQzLDgyLDIwNywxODcsMjQzLDgyLDI0NiwyMzAsNjcsMjEyLDE3
OCw5NCwxOCwyMCwyMDksMjI2LDQsMTYxLDE0NSwxNCwyMjYsOTQsMjI2LDEwOCw1NSw3Miw1
MywzOCw5MSwxMDEsOTUsMTkxLDk3LDEzMiwyNTUsMjA5LDE1LDg3LDE2MSwyMTQsMTU5LDIz
OCwyNTEsMjUxLDEyMSwyNTEsMjEyLDEyNywyMDEsNzAsMjMwLDE4NywyMzQsMzQsMjE2LDgx
LDIzNCwyMDgsMTEsNCwyMjAsMTQyLDI1NCwxNTksMjksMjA4LDE0MywxMzIsNzgsMjQzLDk5
LDYsMjQ5LDEzMiwyNDYsMTgsMjIxLDc0LDU0LDIwNyw2MCwyMDgsMiwyNCwyNTAsMTMxLDk1
LDE3OCwyNDEsNTIsOTksMzIsMTQsNTksMjM2LDE5Nyw0MCwxOTcsODIsMjI4LDIzNSwyMTQs
MTcsMjAwLDE4LDU0LDE3MCwzMSwxMTIsMTAyLDIyNywyNTAsODQsMjMwLDIxNywyMTMsMTE2
LDYsMTIwLDIwMywyMjAsNzEsMjAwLDE0MCwxNTAsMjcsMjQ1LDE2OSwxOTIsMzUsMzAsMjMz
LDEzNiw0LDkxLDE3LDE3NCwxMzUsMjIyLDg5LDI2LDIzOCw2NSwxMiwxMSwyMCw5NiwxOTAs
OTYsMTAzLDE4LDIyNiw1OSwyMSwzMywyMzcsMTc5LDIzMywxNzgsMTA5LDQwLDI1NSwyNTIs
ODIsMzIsMjQ4LDMyLDE1Niw2MSw1NCwxMDcsMTA3LDIwMywzOCwxMTMsMjA5LDY3LDE1NCwz
NiwxODcsMTUzLDg2LDEyNCwxMzQsMTExLDQ5LDI1MywxMDAsMTA0LDM1LDE3Niw0OCwxMjAs
MjQyLDE3MSwyMDcsNDMsMjExLDUxLDIxMSw5OCwxODQsMTIyLDE5MiwyMzIsMjI2LDIyNywx
NDYsMjQ4LDk5LDE5MCw5Myw3LDExOSw1NSwyOCwxMjIsMTgsOTIsNTYsMTQ2LDIwMyw4Nyw0
MSwyNCwyNDQsMTcwLDYzLDgzLDYzLDk4LDEwLDIxNywxNDYsMjEyLDEyNCw3MywxMDksMjA5
LDI3LDM3LDE2OSwxMDMsODEsMTQxLDIwOSw5LDI0NSwyMTgsNTEsMTAwLDIzMCwxNzYsMTM4
LDYzLDE1MCw4MiwxNjksOTksMjksMjI4LDE3Niw2MiwxNjgsMTk0LDIwOSwxMTYsMTQ3LDI0
MSw1OSwxNjIsMTg5LDIxMSw2OSwxNDQsMjM5LDU3LDI0NSw3NywxNzgsMjUyLDE3OSwyMCwz
MSw2MSw3MiwyMDAsMjcsMTEzLDQxLDE3Nyw0MSwxMDgsMTI3LDYsMTU2LDE5Nyw1Nyw5LDE3
MywxNDYsNjYsMjQxLDI1MCw1NSw3LDMzLDE1OSwxMSwxOTMsMjM0LDU4LDYsMjEwLDM4LDE5
MywyMzMsMTYzLDIyMywyMDEsMTUsMjAzLDEzOSwyMTIsODgsMjUzLDExNSwzMCwyMTAsNTAs
MjEyLDIxMSwyMTAsMTk5LDExMCw4MCwxNjksMjI5LDE4NSwzMiwxNDAsMjExLDIxLDIzMywx
MTMsMjIxLDgyLDI1NSwxOTksMzQsMTgsNjcsMTEzLDEzMCwyMzgsMjQ5LDEzMCwyMzQsMTY5
LDIzMywyMTEsMTAyLDk2LDEyMiwzOSwxOTEsMTQ3LDIxMCwxNzMsMTg2LDEyMSwyMTEsMTQ5
LDEyMywyMTcsMTE3LDIxMSw3Nyw5LDEzLDE1MSwxNDYsMzgsMjU1LDM2LDMxLDE4LDcsMTU4
LDg1LDIzNCwyNTUsMjMzLDUxLDQ0LDE4LDIyMywxMjUsMzEsMjQ2LDE0NiwxMywxMywxNzAs
NDcsMTgxLDE0MywzOCwxMCwxOTgsMTE1LDY2LDI0LDE5Miw5MywxOTQsMjIzLDIsMTMsMTE0
LDAsMTEsOTUsMjIxLDIxMCwxMzUsMTU2LDEzLDMzLDE1OCwxMTMsMTQ1LDIxMCwxNzcsMjIy
LDI0OCw0OSwxNzIsMTU3LDE1NiwyNTUsMTgxLDIwMCwyNDYsMTg0LDY0LDIwNyw5MCwxODIs
MTksMjA3LDE3MCw4Myw0MywyNiwxOTYsODYsMTg0LDYsMjM5LDE0NywxNyw3NywxMTUsOTIs
MTY5LDIyOCwxODQsMjM0LDIzOCwyMjIsMzMsNzYsMzEsMTY4LDIzNyw0Niw5OSwyMzksMTcs
NSwyMDAsMTgsMjEsMjcsMjM0LDE4LDg1LDksMTg5LDE2OSw0NywxMzIsMTIwLDE4MiwyNTUs
MjIxLDI0MiwxMDQsMjIxLDE1NSw1MCwxNjksMTUxLDE4NCwxNDksMjUxLDE0NCwxNTgsMTgs
MTQsMjksMjQwLDExNywxNDAsMjE5LDI1NSwxNDIsOTksNDUsOTQsMjQwLDQ1LDI1MSwyNDUs
MTYxLDksNTUsMTY3LDE0NSwyMDMsNjYsMTI0LDUyLDk1LDIxMCwxNywyMDgsMjgsMzYsNDgs
OTksMTYsMTIwLDE5MiwyNiwyMjEsMTk5LDEwMywxMzksMjA5LDUwLDk3LDI1LDE0NiwyMDIs
OTksMzYsMTE1LDMyLDcsMjQ2LDUwLDE4LDE4MSwxMiwxODQsMjA3LDI1Miw5LDE0Miw1Nyw3
LDc2LDE0NSwxMCwxMjksMjM3LDg5LDE0Niw5OSwyMDcsNTIsMjE2LDE4MywxNTgsNCwxNTQs
MzgsODYsNDgsNyw1NywyMzYsMzcsMTg0LDEyMCw5OSw5Niw5MCwxNjksMTIzLDE1OCwxODIs
NzEsMTQsMjcsMjYsMTQsMTc1LDM4LDE0NCwyNTIsODQsMTQzLDEzOSwxNDAsMjgsMjMwLDIx
MSwxNjEsMTk2LDIyLDc3LDIxNyw4LDE1OSwxMjEsMjIsMTgsNjIsNywxODIsMTI4LDMwLDE0
OCwxNDYsMTQ1LDY1LDE4NiwyMyw5MCwyMDYsMTgsMTUwLDIyOCwyMTksMTAwLDExNCwxOTYs
MjYsMTgsMTE1LDIyMSwxMiwxNTMsMjI2LDI4LDIwMCwxMzgsMTUzLDE1MSw0NSwyMTcsMTUw
LDE4OCwxMiwxOCwxOCwyMjQsMjUsMjQ3LDUyLDIyMyw5NCwxNzksNzUsMjUwLDE0NCwzNSwx
MiwzMCwxOCwyNDUsMjIwLDE1OCw1OCwyMTQsMTM1LDI2LDg3LDIwOCw5NSwyOCw3NCwxOCwz
OCw4LDE4Myw2MSwyMjQsODIsMjMzLDY4LDE5NSwxMDQsMTgsNTUsOTksOTksMjIwLDIzLDE3
NSwyOCwxNDMsMTcwLDE5LDEwMywxOCw1MiwyMzEsNDQsMjIxLDU5LDEwNyw1NSwxNCwyMyw2
NSw0NSw5MCwxNTgsMTgzLDIzMywxNDYsMTU2LDIyMSwxOSwxNDksMTQ2LDIwNywxNjEsMTI3
LDQ2LDE4OCw0OSwxMyw1OCw0NCwyMzgsMjU1LDI4LDIwMCwyNDUsMTIwLDMzLDE0OCwxOTIs
MjA3LDE3NywyNTAsMTUsMTUsMzEsMTcwLDEzNiwxMzUsNDksNTMsMTgyLDI0LDE4MywxODcs
MTM3LDIyMywxNjMsMTAsMzgsNjcsMjUxLDEyMiw3MCwxOTIsNjEsMTg0LDEwLDM4LDE0OSwx
NDcsMTgsMjQ2LDc4LDE4NiwxNTksNywxOTMsMjIzLDE5OSwyNTUsMjMwLDExNCw5LDE0LDIw
NSw3MCw1Nyw5Nyw3LDgxLDEzOCwxOTAsMjExLDI1MiwzOCwxODgsMjQ3LDE5LDE3OSwxMzgs
NzcsMjM4LDI0MiwwLDEzMiwxNzksMTU3LDE4NywxOSwxMDEsMTEwLDE0NSwxMzYsMjI0LDQ2
LDE3OSwxMTksMTQ3LDcxLDE1NCwyMjMsMzAsNDYsOCwxMjIsMjM4LDEzNiwyMzcsMjI4LDIz
NiwyNDIsMTQ2LDE2OSwxOTMsMTAsMTcsMTU4LDIyLDE4MCw1NCw3MiwyMTUsMTg4LDIzNiwx
NCwxODMsMjE4LDIyNCwyNDYsMzQsMjMxLDE0NCwxMDksMTE1LDIwNywxNywyMjUsMTYsMjEw
LDE5NywyMjIsMzMsMTU2LDE3OSwyNDAsMTY0LDE5MiwxNjYsMTYzLDIwOSwxMjQsNjMsMjEy
LDE5NSw3OCwxNDYsMjIyLDIxMSwyMzIsMTQ2LDE2NiwzNCwxNjIsMjMxLDYyLDE5NSw5Niwy
MSwyMzQsMTY4LDcsMjgsMjksMzcsMjIyLDksMjE5LDIxNiwxMCw3LDMwLDgsMjIyLDI0Niw1
Miw3LDUwLDcwLDMxLDI3LDU1LDYwLDIyMiwxODcsNTcsMiw0Miw1NCwyMjgsOCw1NSwxMzAs
MTcsODYsNjYsODUsMzAsMTI0LDU0LDU1LDgxLDExNCwyNiw0NywyNTMsMjQsMjUxLDI4LDIy
Nyw0NCwxMDAsMTk4LDU0LDM4LDM0LDE3MCw0MSwzMCwxMTAsNDIsMzAsNDYsMTQ3LDE1Nyw0
NSwxMiwzNCw1MiwyMTcsMTksMjUxLDE2LDEzLDI0MSwxNDEsMTk5LDIwMSw1OCwxNywyNDks
MTQ1LDU3LDEyOSwxMTksNzUsMTM1LDE0MywxNzIsMjM5LDQsMjksMTEzLDEwLDY1LDE5Miwx
NzIsMTI5LDE4OCwxNiwxNjIsMTg1LDE1Nyw2NywyMTcsNTcsOCwyNDEsNTcsMTc5LDIyMiwx
OTQsMTY5LDE1MiwxOTIsMjIzLDIxNyw2NywxMzYsMjQzLDIzMywxOTUsMTYwLDE2NiwzMCw1
NywyMzgsNiwyMTksMjgsMjM5LDE3LDYyLDEyLDIwMiw5NCwxNDYsODYsMjQ3LDE5NSwyMjQs
MjMwLDE4Niw2NSwyMTYsMjIsMTUyLDE2MSwxNjQsOTIsMjM3LDEyNiwyMSwxMDYsMjE3LDk3
LDg5LDEwMiwyNCwzOCwxNDAsMjUsMjIyLDk3LDE3NiwyMTcsNDMsMjM3LDIyNSwyNTQsMjUx
LDE2OCwxMzEsNTgsNywxNSwxMjMsMjQ2LDE3OCwxNCwyMzIsMjIyLDI5LDIwNCw4NCwxODcs
MjAsMTY4LDEwMCw1NCwzMSwxODMsNTAsMjE5LDE5MSwyNTEsMjA2LDM0LDE2NSwzNiw3NSwx
OSwyNTQsNCwxMjMsMTMwLDI1MSwyMTUsMTQzLDEzOCwyMTEsMTgxLDExMCwyNTMsMTU4LDE0
MiwyNDMsMTg2LDEyMiwxMzAsMzgsMTQzLDEwLDE3MSwxMTEsMjUxLDE0MSwxMjUsMjQ2LDIy
MCwzMCwxNTAsNDQsNzEsMTgsNTksMjE3LDIxNCwxNDgsMjM4LDEzNSwxNjUsMTUsMjQwLDE0
MywyMzcsMTEwLDIxNywxMzksMTQ2LDEsOTgsMzEsMTkwLDIwMywyMjIsMjE1LDUyLDk4LDE5
Myw0MiwxMzQsOTcsMTgxLDMyLDI1MCwzLDU0LDExNCwxOTIsNjQsMTYwLDIxNiwyMjAsMzUs
MjA5LDExOCwxNzUsMTAwLDM1LDE0NCwzOSwxOSwxNzYsMTg2LDIyMiwxNzgsMTg1LDExNSwz
NiwyNywxODMsMjE2LDI5LDEyNCwyLDg4LDIyMCwxMTcsMTI3LDI1MSw1NywxNDYsNDIsMjUz
LDE1NCw1LDI1LDE3LDI4LDU3LDI0NywxMTUsMjI1LDE5MiwyMDEsMjUwLDE0NiwxMjYsMTMw
LDI1MCw1LDI1MywxMjAsMjE3LDIzOCwxMDcsMjQsMTg2LDUsMjUwLDE2LDE2NCwyMTcsMTM3
LDE0MywyMjUsNzUsMjAsMzQsMTM1LDE1LDE3OCwxNTUsMTE4LDI0NiwxMjAsNDcsMjIsMTE4
LDYsMjU0LDExMywyNDQsMjI2LDIwLDgxLDI0NiwxMDksNDksNjIsMTEzLDIwNywzNiw5LDIy
MywxMiwyMzAsMTIzLDE1MywyMTksNTcsNDAsMTc0LDAsMTcsMjMyLDUwLDEzLDIxMiw2Nywx
NjgsMTExLDU3LDI1MCwxNDEsMTQsNCwxNDgsMjE3LDEyMCw5OSwyMTgsMTI3LDgsNjIsMiwx
MTcsMjAxLDE5OCw1NiwyMDUsMjQsMjUxLDE0Miw4NCwxMTcsNSwzNSwxOCwyMDcsMTAsMzYs
MTM3LDU2LDEyNSwxODQsMjIsMjE5LDIzMCw1MywyMTYsMTE5LDE0NCw5NywxNjAsMjQ4LDEs
MTUyLDE3Miw5MCw5MCwxODMsMTIyLDI1MiwyMjAsMjI0LDE1OCwxMDksMjM0LDE0NiwyMzgs
MTE2LDY4LDE0LDE5MCwxMjMsMSwxNzcsMTI1LDEyMyw2Myw3NSwxNDAsMjUzLDY3LDYsNDUs
MTEzLDQ5LDI1LDIwMyw2OSwxNzEsMjEzLDE5MSw5NSwxNzYsMjMxLDEyMiwxMjUsMTI5LDIx
NiwyMjgsMTMyLDIyOCwyMDksMzQsMTQsMTE3LDE3OCwxMTcsMTgsMjMyLDI1LDE3MCwyNDYs
MjMwLDIzMiwxODMsMjE5LDQ1LDI1NSwxNDIsMjQ4LDUwLDE3LDcwLDEwMiwxMjcsMzMsMjQ1
LDExMCw1OCwxMDgsOTEsNCwxMDUsMTcsMjM4LDE3NSwzMywxMDMsMjI2LDU5LDEyOCwxMSwy
NDIsMjIwLDE2NSwxNTksODUsMTkwLDkzLDIyNiwyMjgsMjIzLDIwMiw4MCwyMzgsMTk0LDE4
LDE0MywyNDgsNzMsMjUxLDM0LDI0NSwxNDYsMjA1LDkzLDM0LDk0LDcyLDg2LDQwLDAsNTks
MjQwLDE5MywxOTEsNTgsMzcsOTcsMjI5LDExOSwyMTYsMjI1LDE0Miw3MCw5NSw5OCwxNCwz
MSwyNDIsMzEsMTMsMTAxLDE5MCw2Nyw4OSw0MywxMzYsMTkzLDI1NSwxNzEsMzEsNDYsMTA4
LDY2LDEsMTU3LDQwLDI2LDM2LDIzOCwxNDQsMjQwLDE4NCw4Nyw0NCwyMDUsNTUsMTM3LDE1
MiwxMjcsMTg5LDAsMjM2LDI5LDEwMiwxOTAsNDksMTg2LDEyMCwyNTQsNTMsMTIwLDMwLDI0
NSwxNTUsMTExLDI0NiwyNiwxMTUsMTIyLDEzNSw0LDIxOCwxNDMsMjQxLDE5MCwzLDIzNywy
NiwxNjcsMzMsMjEzLDE2LDIxNSwxNDIsMTYwLDE2OSw4OSwyNDQsMTg2LDEzLDEyMiw1LDIs
NTAsMjE5LDEzMiw3NSwxNzQsMjUyLDEzNCwyMjQsMTY0LDIxOSwyNDQsMTc1LDE1NCwzNSwx
NTEsNDYsMjMsNjUsMTAyLDEwLDE3OCwyNiwxMCwxMzAsOTEsMjUsMTI4LDI0OCwyMDUsMTgz
LDE4Myw4LDE1OCwyMjQsNiwxMDgsMywxNDIsMjU1LDEzNSwxNywyMjksMTQsMjQwLDIzOSw3
NSwyMDgsMiw2LDIwLDE3LDIyMywxNywyNDUsMTY2LDQzLDI0NiwyMDYsMjAyLDcwLDcsNjcs
MjM4LDIwNiw2OCw4NSwyMDgsMjA0LDExOCwxMTgsNDYsMjE4LDg5LDI0MiwxMCw1NywxMTMs
MTc2LDIxNCwxNiwyMzQsMTEsMjI5LDExOCwxMDgsMTI3LDksNzIsMTE0LDMzLDM3LDE2MCwy
NTIsMTEzLDE0MCwyNTQsMTI0LDYyLDExLDIyLDE3NiwwLDQzLDgsMjIwLDE2NiwyMTYsMjUz
LDE1NCw1OSw3Nyw2NSwxNTksMTA4LDk1LDIyOSw4NiwxLDUsNDUsMjEwLDE5NSwyMzgsNDEs
MzMsMTcsMTU2LDEwNywxNjYsMjE4LDQxLDEyOCw2OCwxMzUsMTA4LDEzMywxNzQsNzYsMTMs
MTM2LDE4OCwyMzYsMjE3LDE2OSwxNzgsMTMxLDIzNCwzNyw0MCwyMTUsMjE4LDIzOCwxODMs
MjI1LDE2Niw2MywyMDgsMTA3LDExMywyMzksMTMwLDEyMSwxMjMsMCwxNCw0NywxMzcsMjMz
LDM1LDIyMiwxMTMsMTY0LDE0Miw3MCwxNzIsMTIxLDcwLDIyOCw4OSwyNTIsMTcxLDE4LDI0
MCw1MSwxNzYsMTc2LDE2MSwxNzEsNjQsMjQxLDIwMCwyNDEsMzcsMTIwLDE4MCwxMzIsOTQs
MTc1LDY1LDE0NiwxNjYsMTkwLDY4LDEwNCwzLDI2LDI0MSw0MSwyMjksMTcyLDQwLDY2LDE1
OSw5OCwyMjcsMTEsMTg2LDI1NCwyNTQsMTUyLDIzOCwxODAsMTE3LDY5LDYsMjAzLDIyMiw4
NCwxNTcsMTQ1LDQ1LDE1MCwxLDEwNSwxMTEsMjQyLDEyMiwxNjQsMTU4LDE5Niw1MiwyMjgs
NTIsMjA3LDI1NCw0NCwyNDIsMTQ2LDI0NCw4NiwyMjMsMTksMTMsNTYsMzksMTY3LDIzMyw2
MiwxMzUsMjE0LDg1LDE3OSwyMzQsMTAsMSwyMzgsMjM2LDEzNCwxNzgsNTUsODIsNzcsMTgy
LDExMCwzMSwyMDcsMTg2LDI1LDIzNCwxODYsMTk0LDE2MSwyMTEsMTEzLDIyLDEwNSwxNzIs
MjUyLDE3NCwxMjMsMzksMjMsMTk0LDc3LDIyOSw4NSw3LDc1LDE0OSwxMDAsMTYwLDY4LDMx
LDE2MSwxMDUsMTksMTczLDY5LDM1LDEzMiw4MCwyLDM5LDM2LDkwLDgzLDUsNTgsMjMsMTY1
LDEyMSwzNCw1NSwyNDYsODgsNjQsMTc4LDE0MCw2MiwxMzYsMjIsMTUsMTAxLDIzNSwyNDQs
MjM5LDE4LDIxMiwyMDgsMjM2LDEyMSwxNDUsNiwyNTMsMzksMTI1LDE2LDYxLDY0LDE1MCw3
NSw2OSwxNTMsMjI4LDU0LDQyLDIwMCw2LDEzOSw5NCwxMzUsMjU1LDIzMSwyMTcsMTgzLDEz
MSwyMjEsMjIsMjM0LDIyOCw0OSw5MCw0NCwzOSw4NSw2NSwyMDAsMjU0LDIxNCwyMDUsMjUz
LDExNCwyNTMsMTQ2LDEwNSwyMjIsMTcsMTQsMzgsMTAxLDIwMSw1NywxNzcsMTMxLDIwLDE2
MSw5MSwyMjcsMTMxLDczLDE3NCwxNzAsMTczLDUyLDUsMjA3LDEzMSwxMDgsMTg1LDEzNSwx
NTAsMiwyNDAsNjIsMTA4LDExMCw2MCwyMDMsMTUwLDIzMywyMjAsMTI3LDEzMiwxNTQsNiwx
MzMsOTIsMjQyLDg0LDEyMCw4LDEwMiw1MSw5MCwxMzIsMTAzLDE1NiwyMzEsMTA0LDE5Niwx
NzksNjIsMjAyLDEwMiwxNzMsMTgsMTIyLDI1MSwxMTcsMTQsODIsMTA1LDgyLDI1NSwxMDcs
MTE5LDEsMTQ2LDIwNCw4NywxMTAsNjYsMSwyNDksMzIsMTgyLDIyNyw1Myw3LDE2NCwyMTYs
ODgsMTA5LDE4NywyNyw3MSwxMTcsMjM4LDIwNywxNDIsMTA5LDE0MCwyNDMsOCwyNDEsMTM2
LDI1NSwxOSw2OCw2MCw4MywyNTAsMjUsMTAwLDE3Niw4OCwxMSw4OCwxMDMsODgsMTEwLDE3
NywzNiw3LDksMjYsMzgsOTEsNzYsNCwxNDEsOTYsMTEwLDY2LDMxLDMyLDIwLDI4LDIyMSwx
MDgsMjksMTE5LDUsMTkzLDI1NSwyNDIsMjUsMTQyLDkzLDE1NCwxMjIsMTk5LDk2LDY5LDIz
MiwxNzYsMjA1LDI1NCwxMywxOTMsMzMsMjAzLDIyMSwxMTAsMTE5LDEzLDE1OSwxMiwxNDYs
MTkzLDg1LDI2LDE5LDI0NCw2Niw1NCwyMDYsOSw2NywyNTQsMTk5LDQ2LDcsMjM1LDQ4LDE3
MSwyMSwxOTYsMzYsNjAsMjU1LDYwLDE3LDIxNywyNTUsMjU1LDI1NSwyNTUsMTU4LDE0OSwx
NDgsMjIxLDE0MiwyMTgsMTU5LDE0MCwxNTksMTQ4LDIxOCwxNDIsMTM2LDEzMSwyMTgsMTky
LDIxNSwyMTEsMTM1LDI0MSwyMCwyNDMsMTE1LDE1Nyw0OSwyMzgsOTIsMTE0LDMxLDE3MCw3
OSw3NiwyNTUsMjU1LDI1NSwyNTUsMzEsODYsMTIzLDEwMiwxMzUsMTUzLDE4NiwyMDIsMjMs
NzQsNDksMTg4LDE3NSwxMzAsMjQ0LDE5OCwyMjksNjQsMjIyLDEsODYsMjQwLDE2MCw2NSw5
MCwyMTksMTc1LDE4MCw4MCwyMjMsOTAsMTM0LDI1NSwyNTUsMjU1LDI1NSwxNTYsNzksMjIy
LDIxLDY5LDc0LDM1LDE4MSw5OCwxOTUsMTgzLDkxLDE2NywyMTUsMjU0LDIyOCw3MywxMzMs
NDYsMTUsMzcsODAsMTk2LDE3MywxMjcsNTMsMTQsMjA1LDEwNSwxNDksMjExLDk1LDI1NSwx
MywyNTQsMjU1LDE5MywxNjUsNjQsMTMxLDIzNyw1MSwzMywxODIsMjUwLDQ5LDUzLDE2NCwx
MjMsMjAsNzQsNzYsMTExLDEzNywyMDIsMjIsMjAxLDczLDMxLDE1MCwyNTUsMjU1LDI1NSwy
NTUsMjMsMTI3LDg3LDIwNywxOTUsMjQyLDIwOCwyMTAsMjAzLDIxNCwyMzEsMTAzLDE1OSwy
MzIsNjAsMTU4LDE5MiwxNzUsOTUsMjM1LDE5NiwxNDQsMjM1LDE5LDMzLDEwMCw0MiwyMzgs
MTkyLDY3LDksMjQ2LDI0OCwyNTUsMjU1LDE2NSwyMzAsMjIsMjMzLDg0LDIzMywxODUsMjQ1
LDE3OCwyMzMsMTUwLDI0OCwyMjgsMTYyLDI0NCw2MiwyNDEsMjA5LDExLDEzLDEyNSw4MCwz
NSw1MywyNTUsMjU1LDI1NSwxNjUsMTU2LDExNywyMzMsNDYsMTg4LDU3LDEyMywyNTIsMTEy
LDQzLDMxLDQxLDEyMiw2NywyMzMsMTMxLDI0LDQzLDIwMiwxNDUsMzgsMjYsOTcsMTg4LDEx
MSwxOCwyNTUsMjU1LDI1NSwxOTEsMTQ4LDE5NSw2NywxNzUsMTYyLDE1NCwxODIsNzgsMjI3
LDkxLDExNiwxNTgsMTEyLDEyNyw4MiwxODEsNjUsMjIsNTcsMzYsMTAwLDEwOCwyMjEsMjUy
LDE5MSwyMDksMjIzLDIzMiwyMzUsNyw0MiwyMjcsMTE1LDIwMSwxNDcsNjcsMTExLDQzLDQ1
LDU3LDQ2LDEyMSwxNDUsMjU1LDI1NSwxMjcsMTYxLDE0NiwxNTYsMTQ0LDQ1LDg0LDEzMSw4
NywzNCw1OCwxMjAsMzcsMTc0LDc5LDExNSwyMzUsMTgwLDE5NSw2LDIyMiwxODksMjM2LDQs
NTYsMjYsMjU1LDI1NSw0NSwyNTQsMTQwLDIyLDEwMiw1Myw2OSwxOTMsMTc0LDIwNywzMyw5
Niw5Miw3NiwzLDI0MiwxMTAsNjQsMTU4LDE5NCwxNTksMTk3LDIyMiwxODgsMTYzLDE4MSwy
NTUsMjU1LDI1NSwyNTUsOTIsMTc3LDE3NCwxMjQsMTEwLDI2LDEwNywyMjMsMiwzNCwyNCwz
MCwxNjYsMTA0LDE3OCwyNDcsMjcsMzEsMzksODAsNzUsMTA1LDExOCwxMDQsMjQ0LDIwNSwy
MSwyMjUsMTQ1LDQ4LDIwOCwyMjQsMjU1LDI1NSwyNTUsMjU1LDMsMzYsMTAzLDEwMSw2MCwx
NjYsMTQ5LDE2NCwyMTIsMTE4LDIzNiwxODgsMjgsNjcsMTk0LDUwLDE5NiwyNDAsMTA4LDgy
LDIwNiwxMDYsMjM1LDY1LDI0MiwxNzksMjMyLDExNCwyOSw4NSw5NSwxNjAsMTkxLDE5Mywy
NTUsMjU1LDEwNSwyMTIsMjEsNDYsMTY4LDE1NiwxMDQsNTMsMzksNzgsMTg1LDI5LDU2LDEx
Miw2OSw2MiwxMjAsMjE2LDEzLDIwLDQwLDIxOCwzMiwxOTcsMjU1LDI1NSwyNTUsMjU1LDU3
LDYxLDk5LDE3NSwxMzgsMTEyLDYsMTMwLDIyOCwyNDMsOTMsMTksMCwxODMsMTc0LDI0MCwx
NDgsNDQsMTExLDEzNCw4Myw3MywxNjgsNjYsMTI5LDEwMSwxNzAsNjEsMTMzLDExNiwxNTIs
MTgwLDI1NSwyNTUsMjU1LDI1NSwyMzMsOTcsMjA5LDcwLDEwNSwxMjIsMjM2LDExNywyNDgs
MTc3LDc3LDIyNCw1NCw5LDEwNiwxMTYsNjMsNTgsMjE1LDkxLDIyNiwxNDQsMjE0LDEzNCwx
OTcsMTcyLDE3OSw2MSwxNDUsOSw2MCw5MSwyNTUsMjU1LDI1NSwyNTUsMTUxLDIzLDIwOSwy
MjgsMTE3LDIzNCwyMjQsMTg5LDg4LDIxNywyMDYsNDUsMTk3LDI1LDEyOSwyMTIsMTk2LDEx
OSwxMjMsMjI0LDk0LDE2Niw2Miw1MiwxNDQsMTg0LDEyNyw3OSwxMzQsMTU3LDE5MCwxNDks
MjU1LDI1NSwxNDEsMjU1LDIyMiwyNDUsMTY3LDQxLDIzNCwxOTgsODcsMjQ3LDEzOSwxMjYs
MTg2LDY2LDE1NCwxMTAsMTU5LDI0OSw3LDEyLDE1MCwxNzEsMTk5LDIxMywxNjUsNzksMTk1
LDU2LDI1NSwyNTUsMjcsMjUzLDUzLDE2NSwzLDU5LDIzNiw1MSw0NCwyMDAsMTU2LDkyLDg0
LDI0MywxMjgsMTc0LDQyLDYyLDE1MiwxODcsMTA3LDU3LDE2OSw5NywxMDAsMTY0LDI1NSwy
MTksMjU1LDI1NSwxNzYsMTkyLDgsMTk2LDEyNiwxOSwxODksMTEyLDIxMywyNDYsODYsNTAs
NzIsNjcsMjQyLDg3LDE2MiwyMzYsMTM0LDQ4LDEzMywzMyw1OCw2OSw3MywxNTcsMTU4LDQ1
LDI1NSwyNTUsMjU1LDI1NSwxNTQsMTk3LDMwLDEwNiwxMzAsNjcsMjUzLDI1MywzOSwyMTQs
NywxOTcsMTkyLDY1LDY4LDEzMSw0MywxODgsMTI0LDI1LDkyLDU4LDIzMCw5OCw1MiwxMDAs
MTAwLDgxLDI0OSw1MCwxNzUsMTA0LDI1NSwyNTUsMjE0LDI1NSw1MCw3OSwyMjEsMTAzLDUw
LDI0OSwzMCwxNTUsMjYsODYsMTI1LDEwNCwxNTYsMjM4LDI1MywxMzEsMTM4LDE0NSwxODUs
NTAsNTMsNzksMTIyLDIzNSwyMDQsMjAwLDI1NSwxNTEsMjU0LDI1NSwxODIsMTY1LDE3NCw3
NiwyNDcsMjUzLDExNSwyNTUsMTI5LDYxLDI3LDIzMywxMDIsMjE1LDI0MywyMDQsMzEsMjE2
LDIwNSwxOTgsNjMsMTA2LDMsMjYsMTgyLDE2MiwyNTUsMjU1LDI1NSwyNTUsNTksNDksMjQy
LDY1LDE4NiwyMjAsOTEsMjI0LDI1MiwzMyw2Myw4OSwzMSwxODQsMjIzLDIyOSwyOSwxODMs
MTkzLDE1MSw1MSwxMTAsMjMxLDIzOSwxNTQsMjcsNDIsMjIsNTQsMjMwLDAsMTkzLDE5Mywy
MTksMjU1LDI1NSw4MiwzMSwxNDEsMjksNSwxOTIsMTEzLDIxMSwyMzgsMTc3LDgxLDE4OSw0
Niw4Niw4MSwxNzAsMTE0LDY3LDc0LDEyMSwyMDMsMTQ3LDI1NSwyNTUsMjU1LDE5MSwxNywy
NDEsNDUsMTAzLDQ3LDEzNCw0MiwxMDIsNzgsMTg5LDE2MiwxNjUsMTQwLDEzNCwxODMsODgs
OTYsMTg0LDExOSw2OSwxODEsOTksMTQsMjEsNzEsMjUsNDAsMjA5LDIwLDE3NSwyMzQsMjU1
LDI1NSwyNTUsODEsODUsMTY0LDM2LDI5LDI1Miw4OCwxNzgsMjM5LDE4Nyw2LDIwOCwyMSwy
NDcsMjE3LDE1NCwxNzksMTY5LDc2LDEwMSwxODAsMTM4LDYsMTY2LDU3LDUxLDU5LDI1NSwy
NTUsNDcsMjA4LDEzMSwxNjUsNDMsODUsMiw0NSwxNTUsMjMsMjE4LDIwNSwxMjksMjI0LDUz
LDIwNCw2Miw4MSwxNTksMTM3LDU4LDksODIsMTA2LDcsMzUsMjQ4LDExNCwzLDQ3LDI0NSwy
NDksMTI1LDIzOCwyMjQsNyw2OSwxMTAsMTI1LDU0LDE2MCwxMDIsMjA1LDIyNywxMDIsMTIx
LDcxLDcsMjAzLDEyNCwzMSwyMTEsMTEwLDE5LDIxNywxMzMsMTc0LDIyNywzNyw5LDU2LDYs
MTQsMTY1LDE2NCw5MywyNDUsMywxNSwxMTgsMTY0LDUsMjU1LDg4LDAsMTgsMTQ0LDM4LDg4
LDE1MiwwLDIxMSwxMDIsMjUxLDIxNSw5MiwxLDEyNCwzNSwyMDksMTMsMjUzLDIzLDI0LDI0
MiwxODksMjE3LDI0OSwyNTAsMjIzLDM1LDM0LDE2LDYsMTcsNDIsMTE5LDI1Myw3NSwxMDgs
MTAsMTE5LDI0MiwxMjIsMTk2LDE4NSwxNDMsMjI0LDEyMiwxMzIsMTYyLDIzOCwxNTYsMTIx
LDI2LDE5MywyMiwxMjgsMTMyLDEyNiwyNDcsNjksNTAsMTIzLDIyMywyMywxMzQsMTM0LDIw
MCwyNDIsMTMsMTU4LDE0NCw4MywyNSwyMDQsMjIyLDE2NiwyMzQsNSwyNDcsMTIzLDE0Nywx
NjMsNDQsMjI2LDgsNjAsMTQ2LDE3OCwyNDgsMiwxNTMsMjI2LDU1LDIyNiwxMzEsMjEsMjM5
LDIsMTYsODMsMjM5LDM0LDkyLDE4NiwxODYsMjAwLDE1LDExMCwyMCwxNDksMTQzLDIzOSw0
OSwxOTEsMjI2LDQ1LDIwNywxNTQsMTI4LDEzMiw3NywzOCwyMTAsMTEzLDU0LDE4MywxMiwy
MzYsMTksMTIyLDIzNCwyNTEsODksMjQ2LDEzOCw4OSwyMjYsMywxMzUsMjgsMzUsMjcsMjQx
LDIyNiwyMiwxNzAsMjEsNzEsMjI2LDIxNiwyNDYsMjIxLDEsNDUsMjIzLDE0LDI0OCwyMDUs
MjIxLDExMSwyMTIsNTAsMTIsMTc1LDE1Niw1OSwxODMsMTIsMjQyLDEwLDIsMjUxLDI1MCwy
LDEwLDEwMiwxNDcsMTMwLDI0MiwxNDUsNDUsMjgsMTkyLDMsNjksMTQxLDc3LDIyNiwyMTQs
MjUyLDYsMTExLDM0LDE3Niw0NSw3NCwyMTIsNiwxNjIsMTEzLDM3LDIwOSwzMiwxMjIsMjAz
LDk3LDI1NSwxMSwxMDIsMjEyLDE0MywyNTEsMTc3LDExNSwxNjcsMTAsMTcxLDE2OCw1NCwy
NTEsMTAsMTA5LDcyLDE5MywzMiwxNjMsMjIwLDMxLDE3Niw2MywxMzksMTAyLDE3LDYxLDE2
MywxMjcsNTEsMTQzLDY2LDQ4LDE1NSwyMjgsMjE3LDUsMTMzLDIwLDI0NSwyMCwyNDgsMjks
MTQ0LDY2LDYsMTAwLDIwLDI1MSwxMTksMTU5LDE2NSwxNTAsMjQzLDE0MCwxMzQsNjcsMjA3
LDEwNSwxMjQsNTUsMTcxLDE5Miw5LDE1Miw2NSw3MSwyMjYsMTM5LDI0NiwxNzYsMTg0LDI0
NCwyOSwyNTAsMTgzLDc4LDMyLDE3LDIxNywxNzYsMTM5LDUxLDY3LDc5LDcxLDYsMTQwLDM4
LDIzNywxMzAsNTUsNTcsODYsMjM3LDI3LDMyLDIyLDE0NSw1NiwxMjMsMTc5LDE4MSw4Mywx
MDYsMjQ2LDEyNCwxNTUsMTEwLDIyLDEzOSwyMzgsNzYsMjMsNTgsOTEsMTcsNDksMTMyLDYy
LDE5NCwxMjQsNjAsNzcsMjM2LDI0OCwxMDYsMzYsMTI2LDk5LDExNiw2MCwxNCw1MCwxNTAs
MjYsMTE1LDMyLDE3NCwxOTAsOTYsMywxNTAsMTkzLDYsODYsMTIxLDEyOCwxNzcsNzEsMTgw
LDExOCwxNywxNTEsNTUsNjQsMTc3LDY1LDE4MiwxNDcsMTI3LDIwOSwxNTgsMjQ3LDg2LDE5
NSwxMTAsMjcsMTcxLDExLDIwMSw2MSwyMzYsMTgsMjQwLDI1LDIxOSw5LDE3OCwyMDUsMTY4
LDgzLDE2OCwxODEsMTYsMjQsMzQsMTIsNTEsNDIsMTk0LDI1Miw1NCwyMCwxMTEsMTk5LDIw
Miw4Niw4Miw3MSwyMzAsMjIyLDE5Nyw5Nyw4NiwxNzIsNzEsMjA5LDIwOSwxMzQsMjIxLDI0
OSwxMCwyMTgsMTcyLDE2OCwyMzgsMTM5LDIyMCwxODcsMTk3LDE2NCwxNywyMTgsMjQwLDMx
LDI1NCwxNTAsNjMsMTA5LDExLDI1NSwxMSwyMzUsMjM0LDI0OSwyLDE2MywyNSwyNDksNiw5
LDk0LDI0MSw4MCw2MSw4MCwxMDksNjcsMTY4LDc1LDE2NSwxMTMsNjAsMTM3LDEwOCwyMTIs
MzAsODIsMjM5LDYsNjMsMjM0LDYwLDE0NiwzMCwxMDcsNSwxNzUsMjQ5LDIwMiwxNSwyNDMs
MTQ4LDE5Myw2Nyw2OCwxNjIsNDUsMTEzLDE2MiwzMyw3MywxMzUsMTkzLDgsMjU1LDE3Niw4
LDI1MywxNjIsMTE2LDEyNiwxNTYsMjM5LDEwMywxNCwyNDksMTE5LDE2MCwyMzAsMTczLDYw
LDIyNCwyMjcsMjM2LDM1LDUsNSwxOTQsMTIxLDE5MCwxNTcsMjMsMTk3LDIzOSwyMCw2LDE3
OSw1NiwyMTksMTAyLDE1MiwxMTYsMTY5LDEyMCw1NCwxOTksNiwyMDgsMTgwLDI1MiwxNzEs
NDcsMjIxLDI1MiwyNDIsNCwyNDgsMTMsMTg4LDI0OCwyNDUsODIsMTM3LDI0NSw3NywxNjQs
MTk3LDIxMSwxNzQsODAsMTU2LDE1MCwyLDE3MiwxMSwxNzYsMTIyLDE4MCwyMSwxMTksODMs
MTAsODcsMTk5LDEwNywyNTEsMTUwLDIxOSwxNDcsMTk1LDI2LDE0OSwxNzAsMjcsMjEyLDE3
MCw4NywyMjcsMTU2LDY2LDk3LDE3MiwyMDksODcsMTYwLDEyNywzNSwyNTIsMTMxLDMwLDEy
NywxMDAsMTc4LDIzNywxNywyMTEsMTYsMTU2LDM5LDI1MiwxNTYsMTYwLDE1NiwxOTMsMTc1
LDgsNjQsMTc0LDE0OSwxMDYsOTUsMTksNSwyNSw3OSw2MiwxMTYsMjE1LDIwNiwyMDAsMTYy
LDE3NywxNDMsNzQsMjIzLDEwOSwyMzgsMTE3LDIzOCwyMjYsNjQsNTgsMjEsMTc4LDI0NSw2
LDk1LDEzNywyMTAsMjE3LDQyLDk3LDIxNCwyNDYsOCwyNTEsMTE0LDE3NywxMzksMjExLDEy
MSwxOTksMTkzLDcyLDE4LDI4LDE0NiwxNDAsMjEsMjgsMTk4LDE1OCw0OSwxMzYsMTE1LDE5
MCwxMzYsOTUsMTY0LDIyLDE2MCwyMDcsMTIsMjIzLDcsMTk3LDE3OCwxODYsMTQ3LDUxLDcx
LDMyLDE2Miw3MiwxNCwyMDAsMTQzLDksMjI4LDE4MCwyMTQsMzQsMTQ0LDI0OSwyMzIsMjM0
LDEwMCwxODgsMzcsMTc0LDI0OSwxMzYsNDQsMiwyMjIsMzMsOTYsODQsMTc4LDE1LDE0Mywz
MSwxNzgsMTMwLDgsMTU1LDI3LDIxMywyNDcsMTM2LDEzMSwxODAsMjUsMTM5LDExMiw1NCwy
MzMsMTM1LDE0NSwxOTUsNjcsMjI3LDEyMCw2NiwyMywxNTAsNzQsMjE1LDE3Niw5LDYzLDIw
NywyNDgsMTcsNDQsMjI0LDQzLDI0OSwyNDUsMTA1LDExOSwxNTksNTcsMTg3LDExNyw5Miw4
LDI1LDIzOSwxNzIsMTYyLDIwNCwxOTksMjAwLDIwMCw2NywyMywyMjIsMTMzLDIwMiw4MCwx
MjcsMjQ4LDQ0LDQyLDEyMyw2MCwyNTIsMjQ5LDIsMjQxLDE3Nyw0OSwxNzIsMTgsMTgxLDIz
OCwxODQsMjQ5LDE4LDIwNiw0MSw5MywzLDk3LDU2LDEwMiwyMCwxNDgsMjUxLDExLDgwLDIy
NiwxOSwxMTcsNjMsMjU1LDY2LDY2LDYsMTcyLDc0LDI2LDIzMywyMzcsNTMsMjQzLDE4OSwx
OTYsMTAsNTMsMTM4LDIxLDExNCw1NywyMDAsMTI4LDE4OSwyMTEsNjcsMTMwLDIxNywxMDQs
MjUxLDExNiwxOTMsMjQzLDYwLDQ3LDQsMjA3LDEzMywxNDAsNjAsMTg1LDE5NywxMDIsMzEs
MzcsMTE2LDY0LDEyLDY2LDI4LDIzMyw1MCwyMDAsMjAxLDExLDI2LDExLDE4MSwxMDQsMjI4
LDExNSwxNDMsOTMsMTk4LDE4LDI0NiwxNDYsNTUsNTYsMTQ4LDE3NywyNSwxNzgsMSwxODUs
MTkyLDExMCw4MSwxMTYsMjMxLDM3LDM5LDcsNywyNTAsMTg2LDE2LDI1MCwxNDYsMTQ3LDI4
LDIyOCwyNDIsMTQ2LDM2LDMsMjMyLDE4LDIzMiwxNDcsMTAzLDEzNSwyMjgsMTg0LDE5OCwx
MSwyMzAsODEsMjUwLDIwMSwxNjcsNTcsMjAxLDIwLDcsOTgsMjUwLDIzLDkzLDIzMiw4OSw0
NywyMjgsMjAwLDIzLDUsMjMyLDMsMTAsMTUyLDYzLDU0LDEyNiwxOTAsNjIsODUsMjAxLDIw
NywyMDYsMTU1LDE2NywxODgsMjcsNDcsMTU0LDIxLDU2LDMxLDc0LDIsMTU0LDQ5LDEwNywx
MjksMjQsMTM1LDQ4LDc2LDE5MywxNDAsMjUxLDI0NiwxOSwyOCwyNywxMCwxNTIsODMsMjMy
LDEzNSwyMjAsMTcsNTMsOTEsMTM0LDEyNCwzOSw3LDEwMywyMzQsMTU0LDE2OSw4NiwxNjgs
NjUsMTMsNDEsMjAyLDEzNCwxNzYsMjM4LDE2NCw5NSwxMjEsMTUsNDYsMjI4LDE1NywyMzUs
NDcsMzEsMTUsMTgxLDQ5LDg5LDE5NywxMTMsNjEsMjE2LDE2OSwzMCwxMTUsMTc3LDEyMiwy
LDkzLDIzNywxODYsMTkwLDE1NiwyMzIsMjQ3LDEyLDE5NiwyMzMsMTk4LDIyOSwxODYsMTQ0
LDc0LDYsMTMzLDE0OCwxMjksMjUxLDI0OCwxODksMTg1LDI4LDE5MSwyNTEsNzcsMjMxLDcz
LDIwNCwyMTQsMTE3LDI0LDE2NCwxNjksMjIyLDIzNCwxOSw5NSwxNTcsMzAsNTksMTUwLDEx
LDIzNCwyMTAsMywyMzQsMTcyLDMxLDI1MCw3NSwxNzYsMSwyMzcsMTkyLDQzLDExNSwyMjQs
MTcsMjUzLDE3MSwxMTMsMjIxLDgyLDI0MCwxNTEsOTgsMTYzLDI0MiwxNjMsMTE1LDIyNywx
NjIsMTk2LDE3MCwzNyw0MSwxNzcsNjYsNTYsNTQsMTE1LDI0OSwyMjgsMTcxLDE1MiwyMTUs
NDIsOTAsMjQwLDIzOCwxMTcsMTg1LDI1NCwxMzMsMjAsOTAsNzAsMCwxOSwxNDEsMTA3LDY5
LDU5LDIyMywyMzcsMTg1LDIzLDIzOCw0MSw4OSwxNTEsNzQsODgsNjEsMjU1LDE5OSw1LDAs
OSwxOCwxMTAsMTE5LDE0NCwxODcsNjUsMjQwLDQsNjksMTkxLDEzLDY5LDE3MCwxMDksMTA5
LDE4Niw4NSwxMzUsNiw4MSwzMiw4LDIyMiwyMCwxNjAsMjEwLDE2LDYzLDEzNywxODAsMjUz
LDEyNyw2MywzLDYwLDY3LDE4LDU1LDE1NywxNzcsMjU0LDI0MSw1MSwxNDIsMTU1LDUsMjAz
LDExNywxNTAsMTAxLDIxNywxMTgsMjM2LDEzOSwyNTQsNSwyLDI0NiwxNCwyNDIsMTk0LDEy
LDIzMCwyMzgsMTMyLDE3MSwxOCwxOTksMzUsNDYsMTQ4LDE5LDc4LDY4LDIxNywyMDEsMjMs
MTkxLDE1NSwxMzcsMTI3LDU0LDEyLDg0LDI1Miw2LDE0MywyNDksMTgxLDEzMywxNywyNTUs
MjE1LDI0MCw3OCwyNCwyMzQsOTEsMjM5LDcsMTA3LDI0Nyw3LDE2OSwyNDgsMjcsMTA4LDE3
LDI0MSw2NywyMDgsMjAsMjQxLDI0NSwxMTcsMTE2LDQzLDQ0LDEzOSwxNTQsMTQwLDI1NSwx
OTAsMTUwLDIzNiwxNzUsMTAxLDM4LDIwNCwxNjQsMjIzLDI0MCwxMzYsMjQwLDIzMiwyNDcs
NTMsMjcsMTgxLDI3LDI1NCwyMjMsMTYsMjU1LDIzMCwxMTQsMTcsMTc1LDEzNCw4OSwyMjUs
MjYsODYsMTYyLDk1LDE4NywxNzUsMjI2LDc0LDgsMTYwLDE2OCwxMjgsMTE5LDE4NSwxMDIs
MTI4LDEzMywyMTQsMTMzLDE5MSw4MCwxNTYsMjMyLDY3LDQyLDYsMjQsNTYsMTIxLDE5Mywz
LDE0MiwxNzIsMTIzLDYsMjIwLDkzLDg5LDE4NiwxNDEsMzUsMjQ0LDE0NCwyNDksMTIxLDUs
MTQzLDIzLDI5LDExOCwyNDUsNDksMTAsMjUxLDI1NSwyMzcsMTkxLDE1MywxMTMsMzYsMTgw
LDE4MCw3NSwyNTEsNywxOTMsNzcsMTM2LDIwNiw4NiwxOTgsMjAyLDEzNiwyNTQsMTk4LDE5
NSwxNDAsMjIyLDE5OCwxODcsNywxMTEsMjIwLDEwNCwxOTAsMTYwLDE0MCwyMzAsMTk4LDE1
NSwxMjgsMTQ3LDE5OCwyMTIsMTExLDE5OCwxNjUsMTQyLDE4MiwxMTIsMTEsMjQ4LDI0Niwx
OTgsMjE1LDE0MiwyNDIsMjQyLDI0MSwyNDAsNzYsMjUzLDU2LDY3LDE5Miw4MCwyNTIsMTg1
LDExMiw1MCwxNyw2MSwxNzksMTM1LDE3LDIwMCwxNzQsMTI1LDc3LDYsNzYsNzUsMTM3LDIw
MSw0LDE3Miw0MywyMDUsMjQwLDI1Miw3NCw1MCw3MywyMjYsNzAsMjQxLDY2LDEyNiwyMDks
MTkxLDI0Miw5MSwxMzQsMjQzLDAsNjEsNDgsMTcyLDE2MCw5NiwyNDIsOTEsMzYsNTYsMjQy
LDkwLDIxMiw4NywyNDUsMTc2LDI1NSwyMjcsMjAxLDE1NCwxNjIsMTE1LDksNDQsMTQxLDgx
LDI1NSw0OCwxOSwzNCwyNDIsNCw3NSwyNTAsOTcsMTI4LDIyNSw2NSwxOSwxNTIsMTE1LDIy
MCwyNTIsMjUyLDExOCwyNDgsMjE0LDEwLDIsMTY5LDIsMjQ1LDEyMSw4OSwyMzEsMzAsMTIz
LDEzNSwxNCwyMzQsMjIxLDUxLDQ0LDY4LDI5LDY1LDI0NCw5NCwxMjMsNDcsNDksMTEzLDEy
LDIyMiw2LDYsMjAwLDE4NiwxNDMsMTMyLDE2Myw1NCw0LDIyNiw2MywxMjAsNTYsNTUsMjQ1
LDIzNCwxNzMsNTAsMjA5LDQ5LDEyMywzLDIyNSwxODksMjQwLDMxLDc5LDE2NCwxMjEsMywy
NTUsMTQwLDE2Myw5LDksMTE5LDcxLDExMCwxOTUsMjIyLDE5NCwxMDksOTgsODYsMjM2LDI1
Myw4MCw1Niw1Myw0NSwyNCw4LDEsMTczLDI0OCwzOCwyMjIsMjQxLDQwLDE0MiwxOTUsMTY4
LDI3LDM4LDIxOSw5MCwyNDcsMTk3LDE0NSw5MywxNjAsMTc0LDUwLDIyMCwxOCwyNDMsMTc3
LDQzLDEyNSwxMzAsNjAsMTczLDE2OCwxMDUsOCwyMTcsMzQsMTQ0LDI1MSwxMzEsNTMsNjUs
MjQwLDI2LDUsMTc1LDIzNCwxNjQsMTksMTc0LDIxLDUyLDE2Nyw3NCw4OCwxNTIsNjgsMjUx
LDIwMSwxNDUsMTQ3LDEzNSwyNCwyNDYsMTYwLDIyMCwyNDcsMSwxMjEsNzgsMjAwLDE4NCw1
OCwyNDYsMjE0LDIzNCwzMywzMCwyMDcsMTc0LDI0NywyMzIsOTYsOTQsNTgsMjQ5LDIyMCwx
NTAsMTIzLDI1MiwxMTgsMjEsODYsMTMwLDQ3LDU1LDEzOCwxNTUsMTMsNjAsMTUwLDMsMTQ2
LDExNCwyMzMsNiwxMzksNzQsMTEwLDQ0LDE5OSwxNzAsMTEwLDE5LDkyLDI1NSwxNDMsMTAs
NjAsMTkyLDE3Myw2OSwxOTgsMTk4LDE3MCwxMjksMiwxNywxNzMsODksMjQ0LDgzLDI1Myw2
LDEzMiw1NiwxNTIsMSwyMTMsMTI3LDM3LDU5LDEyOSw5OCwxNywxNjMsMjIsMTQzLDU5LDIy
NSwxMTcsMjIzLDUxLDE0NCwxOCwxOCwxNSwyNDAsODgsMTcwLDE1MywxNzEsMjA0LDEyOCwx
MDQsMTkxLDIxNiwxMDgsMTksMTMsMjQxLDIzNCwxMjIsMTk0LDE2MSw3OSwyMTUsMjIxLDIz
OSwxMjgsMjUxLDk0LDE3LDEwLDUyLDIxOCwxMiwyNDAsMzQsMjMyLDE1MSwyMjgsOTAsMTQ5
LDE3NCwxMjAsMTczLDE0NiwxOCw3LDIyMywyMzYsMTksNjIsMTE0LDE4MiwzNyw2OSw1MSw5
NywxNjYsMjE3LDUyLDIwOCw0LDIzMiw5NiwyMjUsNjQsMjQ2LDcxLDI1MSw3NywyMTYsOTks
MTg3LDExMywyNDEsMjUwLDE4MSw0MiwzNSwyMzIsMjQ2LDE4NCwxNzYsNSwxODMsNDUsMjM2
LDIwMyw2OSwyNDcsNDUsMzYsMTIzLDEyOSwyMDAsMTExLDE2OCwyNDYsMjMxLDI0NywxNzcs
MTYyLDE5MCwxODYsMjAyLDIxNywxNzUsOTcsMjQsMTc2LDc0LDE0OSw2NCw0NywxNjUsMTQ0
LDgsMTk5LDIyNiw1MCwyLDE5NiwyNTEsMTYsNTUsMjQxLDE2NiwyMzYsMiwyMjQsMTkwLDQx
LDE2OCw5MSw5MSwyMTUsOTcsNTYsMjAwLDYsOTYsMjM2LDIwOSwxNTAsMiwyNDUsMjAyLDI0
MSwxMzksMTIwLDIzMyw0OSwxMDAsMTk3LDI2LDYwLDI1NCwyNTMsMjQxLDE4MSwxNTEsMTAs
MTg4LDExOSwxNjgsMjE0LDE1NiwxMTQsODEsMTQ3LDE1NiwxMjMsNSwyMSwxMjcsMjMwLDE4
Nyw2LDE1MiwxNjgsNDQsOSwyNywyMzIsMTMsMjQ4LDIwNCw4LDIyLDIwMCwxNiwyMjAsMTY2
LDEwMywxNzEsMTEsMjM4LDM5LDI0OSwyNDYsMTg2LDE0Niw2Miw5OCw2MCwxMzYsMjQ2LDIx
NSw4LDE3NCwyNywyMzYsMjA5LDExMCw3MCw1NCwxNjIsMzAsNzQsMjA0LDI1Miw5OCwxOTYs
NjAsNTgsMTkxLDE4Miw1LDIwLDEyOCwyMTksMTM4LDcxLDE2NSwxNTksMTUzLDQwLDExNSwx
NTksMTYwLDEzMSwyMSwxMDAsMjQwLDEyNCwxMjcsMTQ0LDI1LDE1LDIwLDExNyw3OSwyMzAs
MTIwLDMyLDQsNywxNjUsMTk2LDEyNiwxNDMsMTQ2LDE3OCwxMzUsMjM1LDUzLDI0MCwxOTgs
MTA0LDUxLDEzOCwzNSwxODUsMTYzLDI0MSwyMjEsNTQsMTI5LDI0MCwxNjQsMTMxLDQxLDI4
LDcyLDI0MCwxODIsMTYwLDk3LDEzNSwyMDgsMTcyLDU0LDExMSw1NywyMTksMTQyLDIyMCwx
NywxNCwxOCwxNzUsMTUsMTU3LDEyMiwxOTYsMjIyLDIzMCwyMzUsMTI4LDIyMCw2LDEzOSwy
MDcsMTMsMTI0LDI1MiwxMCwyMjIsMjAwLDEwOSwxMTAsMTEzLDcwLDUsMjQyLDkyLDk4LDE4
OCwxNywzNywyMDksNTEsMTcwLDI0OSw4MiwxNjUsMTY0LDUsMjIyLDUsMTMzLDE3NywyMzQs
MjQyLDEzLDQyLDI0NCwyNDAsMzAsMjcsMCwyMTUsMjIyLDI0NCwyMDIsMTgsMTAzLDE5LDEw
LDI0MywxOCwzMCwyNDMsMjMsMjEsMjMwLDE0NCwyMDMsMTkwLDIzOSw3NiwzNSw2LDI0Miwy
NTEsOTQsMjksMTQ0LDEyLDEyNCwyNDAsMTkzLDg2LDE3MCw1OSwyNTUsMTI5LDMxLDI3LDEx
MywxMSwxMywzNCw5OSw2NywxOTgsMTk5LDMsMTI3LDQwLDEzNSwyNDgsMTMsNDMsMjYsMTU4
LDIxOSwzMiwxNjgsNjUsMjUyLDEwMCwyNywxMTcsMjQwLDIzNCwyOSwxODIsMTA5LDI1Miwx
MjIsMTM1LDI3LDIwMiwyMzksNjAsMTcsMjA5LDc0LDE5MywyMjAsMTMwLDIyMiwxMjksMjUw
LDc0LDEyMCwxNzEsODIsNTEsMTEzLDI0OSwxNDIsNTMsMTE1LDIzMywxMCw3MCw1MSwxODcs
NzQsMjAwLDUsMTU0LDU2LDIzMywzNywxODksODIsMjQwLDIwNSwxMDQsNzQsMTY4LDE5NSwx
MDYsNjYsMjQwLDM4LDE2MSw1NiwyNTAsMjU0LDkyLDExMiw0OCwyMjYsMjM1LDEwMCwyMTgs
MTgsMTMsMjQzLDEyMiwyMTQsMTkyLDY1LDEzLDg5LDIyLDIzMCwxMTEsMTQwLDIsMjI5LDI0
OCw1MSwyMzIsMjMyLDUzLDE5OCwxOSwyMjQsMTYzLDY1LDQxLDE3MiwxNCw3NywyOSwxNjIs
MTMzLDkwLDIwNiwxLDUwLDE0MSwxMjAsMjQxLDgxLDIwNSwzMSwzNiwyOCwyNDAsNzgsMTY4
LDEsMTc0LDExNiwyMjIsMTIyLDQ5LDE3NywxNjEsMjQ4LDIxNywxMywyMjYsMTcsMzEsMTgs
MTQ2LDIxNyw4OCwxODYsMjMxLDUyLDE5MSwxODcsMTAxLDkwLDk4LDE2Nyw1NywxNDYsMjA2
LDE1LDIyMSw4OCwxMTQsNTcsMjEwLDIzNiwxNDIsNCw5NSwzMSwyNSw5NCwxMzAsMzcsOTQs
NjAsMjIxLDE0NSwxNjcsMTYxLDE0Niw0MSw5MCw2Myw4NywxNjIsMTg1LDIwNywyNDcsMTQw
LDE3MywxOTQsMzEsMTc4LDE4LDk3LDUsMTU4LDIzMSwyNDksNzQsMTQsNCw3NSw3MCw2MSw0
MCw1NiwxOTgsOTksMjQwLDMwLDEzNCwxNDYsMjE4LDE4MCw1MywxNjUsMjQyLDEyOSwyMzEs
MTIzLDE4OSwxNTMsNzAsMTMsMTcxLDEwLDEyNiw4OSwxMTksOTksNjQsODUsMzUsMTMsNjYs
NTQsODYsNzYsMTk0LDE0MSwxOTUsMjQ4LDIxMSwxOCwxNDMsNSwyNDAsMTcwLDYyLDUzLDI0
MiwxNjIsMTg1LDE2NywxODIsNDIsNDYsOTMsODIsMTU5LDE0MCw1MSwxMzEsNTMsMTc5LDEw
LDEwMiwyMzksMTIsMTE3LDM5LDE3OCw1MSw2LDExMSwyNTUsODEsMTgxLDI0NiwxMTksMjE3
LDIxNiwxNzksMTE1LDI5LDI1Myw3OCwxNDYsMTA3LDQ4LDEzNCw4Miw4OCwyMTUsNTAsMTM4
LDExNSwzLDE2OSwxNTQsMTM0LDMyLDE5NiwxMjIsNzYsMjUzLDQsMTE0LDEwNCwxMjcsMTA3
LDE2Miw5Miw4NCwyMywyNDIsNCwyMTgsMTQyLDI0OSwxODksMTcsOSw4LDE4NywxNjcsMjM3
LDExMiwyMjksNjAsMzQsMTY4LDkwLDIxOSw3MiwxMTQsMjI5LDEzNCw4MCwxMjksMTAzLDIw
OCwyNDMsMTUwLDE3LDIwMSwxOTUsNCwxMjIsMTI5LDE2MSwyNTMsMywxNzcsMTk5LDk2LDEz
NSw1OCwyOCwxNDYsMjQ1LDI0NSwxNzIsMTksMTQwLDEyMiw0OSwyNiwxNDAsMTY3LDU3LDEw
NSwxMSwyMDYsMjIwLDE1LDI0LDE4OSwxMjIsMjUwLDIxMCw4OCwxNDgsMTIzLDEwMywxMjgs
MTExLDM1LDEyNywxODYsMjM1LDE4NiwxMDcsMTIxLDE3MCwyNDUsNzYsNTgsNzMsMjEsMTYw
LDExNCwyNDgsMjQxLDE2MywxMywxMzksMTEzLDE5NSwxOTMsMjQ1LDI0MiwzMiwzMCw3Nywx
NDAsMTQwLDIwNSwxODcsMTg2LDIxMCw3NSwxNDgsMjM5LDExOSw3MSw5OSwxMzUsMjQ2LDIw
NSwyNDUsMjQ4LDI0MCwxNzUsMjM1LDExMCwxMTAsNCwyMDIsMTM2LDE5NSwxNDEsMjU1LDIx
MCwxNywyMjAsMzAsMzgsMTMxLDk0LDIyLDE4NCwxMDEsMTA5LDEwMiwxOTgsNSwyMDQsMjUx
LDE0LDIwNSwxNjcsMjU0LDk5LDI1MiwxODYsMTgyLDEwMCwxMTgsMjYsMjQxLDE1NywxNDUs
MSwxMzIsMTk4LDY4LDEzOSwyNTEsMTMyLDQ4LDI0NSw2LDEyOSwyMCwyMDIsMTgsNDUsNTEs
NDMsMTY1LDcxLDEwMCwyMjgsMjE4LDE2OCw2Nyw5MCw2NywxODYsMzUsNzUsMTc3LDE1Miwx
NzYsNjAsMTMsMjM4LDE0NCwxMDMsMTAwLDE0NCwxNjEsMTgwLDIxMiwyNDAsMTEsNTQsMjM1
LDIzMCwxOTcsNSw3OSwxNzgsMjMxLDQ4LDIyNSwxODIsMTIyLDE1LDIzOSw3OSwxNTEsNTYs
NzksMTMzLDEyNiw2LDIxNiwyMjgsMjI1LDE5NSwzOCwxOCwxMjYsMjUyLDkyLDIsNTcsMjA2
LDIxMCwyMDQsNDgsMiw5NSw2MCwxNDgsNzUsMjI4LDEwOCw4NiwyMDcsNDIsMTY1LDI1Miwx
NTMsNTYsMTc3LDExLDIxNiwyMTEsMzMsMTQ2LDE0OSwyMCwyMTUsMjksMTcsMTg2LDM1LDEy
MCwyMiwyOCwxMTMsMjM5LDM1LDEyMSw1NiwyNTIsMTcyLDE5MywxNyw1Miw4NCwxNjksMTA4
LDE2OCwxODYsMTA4LDg4LDIzLDQ5LDEsMTcsMjI4LDIxLDE4MiwyMTcsMTMwLDE1NSw0MSwx
NjksMTQsMTkwLDkzLDM2LDE0NCwxNDYsMSwyNDksMTA5LDE0NiwxMzIsOTYsNTQsMjU1LDEz
MiwxMTgsNTQsMjQsODIsNDMsMTMwLDkxLDExMCwxNjMsMTQ1LDEzLDI3LDc5LDcsMTA4LDU3
LDIwMSwxOTUsOTQsMzIsMjM1LDIzNCwxMDEsMTM3LDI1NSwyMTYsMiw1OSwyMzYsMjEwLDI0
OSwyNTUsMjM1LDE5LDE3OCwxNzksMTUzLDQ1LDY5LDE1OCw1LDE1NCwyNCw5OCwxNDQsMjUz
LDE5NywyMDQsMTQ2LDE1MCw5MCwxOSwxNTIsMTYxLDEyNiwyMDksMTU0LDEyLDIwNywxMzgs
OTksNiw2MCw0Nyw1Nyw0NCwxNDAsODYsMjgsMjU0LDIzMCw3MCwxMzQsMTQ2LDEzMSw0MCwy
NTQsMTY2LDE2MiwxNTMsMjI4LDk3LDczLDgxLDE4OSw5MCwxMTAsMjIsNjYsNiwyNSwyNDYs
MTIyLDMwLDIzNiwyMDQsODAsMjA3LDE5MCw2MywzOCw0MSw2NCwxMCw5NiwxNTgsMTQ1LDEw
MywxODYsODUsMTk4LDk0LDIyOSw3MCwxNTMsOTAsOTMsMjIsMjAzLDM4LDkyLDQ4LDIwMiwx
MjUsODEsMjQwLDI0OSwyMiwyMDcsNjUsMTg4LDUsMjUsMTksMzYsODcsOTMsMTg2LDExNywz
MiwyMjAsMTQ0LDE1Nyw3OSwxMzIsMjIyLDIwNywxMDEsMjMwLDEyMyw5MCw3LDEwMCwzNSwy
NDgsMTA3LDExLDU5LDIwMCwzMywxMTAsMTI4LDI1NCw5OCwxODcsNzUsMTAzLDE3Myw4MSwy
LDk5LDM0LDIzNiwxNDYsOTEsMTM3LDE0NiwyMzMsMjQ5LDU4LDE4MiwxMTIsNCwyMzcsNjIs
NTQsMzQsMTQsNjcsMTYzLDEyNCwxNTgsMjMxLDI0NCw3OSwxMzQsNSw1NywxNDMsMTE0LDE0
NSwxNjUsOTIsMTUsODcsMTQyLDEwNywyNywyMTcsOTQsNDMsMjYsMTYsMjIsOTEsMjIyLDgs
MTUwLDE0NSwxMDEsMTAwLDk1LDIyNSw4MywyMzIsODcsMTcxLDE5Niw4OSw3MCwyNDMsNzUs
MzcsMjQsMjI2LDgyLDU2LDE2OCw1Nyw0NiwxNTIsOTgsNTYsMjQwLDEyNiwxMDksMjQ2LDEz
MSwxMiw3Myw1OCwxOCwyMjMsODUsMTUyLDY4LDE4MCw4MywxMjcsMTgsMTIsMjM4LDEsMTkw
LDIxNCwxNTAsMjcsNTksMTYwLDEwLDIxMCwxMywxMDcsMTEyLDEwMiwxMjMsODIsMjQzLDE0
LDgsMjAzLDIzOSwxMDgsMTkyLDI0OSwxMSwxMzMsMTg1LDE0LDExOSwxMzUsMTgsNjcsMjQy
LDYyLDI4LDEyOCwxNzksNzYsMzAsMTU4LDMxLDI2LDE3MCwxMjMsMTQ0LDEyMywxMzAsMjM0
LDIzNCw4MywxOCwxNzUsMTQ1LDEzOSwxNzcsMjIyLDEzNiwxNTksMTM4LDE3NCwxNTgsMTA2
LDEzOCw3NiwxOSw4NSwxNTIsNDMsMTM0LDgxLDI5LDI0NSwyNDksNCwzMywyMTAsMzYsMjEw
LDEzNiw1NCwxMTIsNDUsMjQ3LDE2MywyNTEsODEsMjE4LDc5LDE2MSwxNCwzNSwxNzYsMjE3
LDEwOSwyMjcsMTEsNCwxNjksMzIsMjQyLDM5LDE3MywyNTUsMjI0LDIxNywxOTMsMjIsMTIz
LDQ1LDIwNSwxMzgsNTQsMjUsMTU5LDIzNywxNTAsMTY1LDIwOCwxMTIsMCwwLDEzLDEwLDEs
NzMsMTEwLDMyLDEyNywxNzYsMjU1LDI1NSw5NywzMiwxMDAsMTA1LDEwMiwxMDIsMTA1LDk5
LDExNywxMDgsMTE2LDMyLDExOSwxMTEsMTE0LDEwOCwxMDAsMjEsMTEwLDk3LDEwOSwxMDEs
MTA4LDEwMSwxOTEsMjIxLDkyLDI1MSwxMTUsMTE1LDMyLDExNiwxMDUsOCwxOSwyOCw5Nywx
MTAsMzMsMTE2LDExMSwzMiwxMTUsMTE3LDI1NCwxMTEsMTI3LDI0NywxMTQsMTE4LDEwNSwx
MTgsMTgsODMsMTExLDQ0LDMyLDEyMSwxMTEsMTE3LDI0LDEwNSwxMDgsMTA4LDMyLDk4LDEw
MSwzMiwxMDksMTA1LDExMCwxODMsMjQ2LDIxOSwyMzksMjEsNDUsNDUsMzIsNjYsOTcsMTAz
LDU3LDMyLDY1LDExNywxMTYsMTA0LDc5LDM0LDUwLDU3LDk3LDE4MywxMTEsMjM4LDQ2LDQ4
LDUyLDIsOSw3MSwxMDEsMTE0LDEwOSw2OCwxMjEsNDYsMTI1LDExMSwyNTUsMTgzLDIzOSwx
MDYsMCwxLDIzMiwxNDIsNjQsMTQ0LDE2MywxMDgsMTUzLDY0LDAsMTA0LDE1LDU2LDQsMjU1
LDUzLDQsMjIzLDIzNywyNiwyMjMsMTEyLDY0LDIwLDMzLDEzOCw1LDU0LDEwOCw0LDIyLDE3
NywxNDQsMTA2LDEwMCwyMTgsMjU0LDI1NSwxMTksNyw2NSwxMTAsMjM1LDI0MSwyMDEsMTk1
LDg1LDEzOSwyMzYsODcsMjU1LDExNyw4LDk1LDIzNSw4LDcxLDI0Niw4LDEyOCwyMzcsMTEw
LDI1NSwxNTEsMTc5LDUsNTksMTI1LDEyLDExNywyNDMsOTUsMjAxLDE5NCw4LDY2LDEwNyw3
OSw3MSwwLDE2LDI1MSwzMiwyMjMsMTQzLDY1LDY0LDQwLDEwNCwxNDcsMTY4LDE0LDExMiwx
MjksNSwxMTMsODAsMzAsMTEwLDIzNywyNTUsMTAxLDAsMCwyMzMsMTQ5LDI1NCwyMzksMjU1
LDIwNCwyNTUsMzcsMjM2LDk2LDE1LDUsNDAsOTcsMjUsMjUsMjUsMTIxLDM2LDMyLDI4LDI0
LDI1LDI1LDI1LDI1LDIwLDE2LDEyLDgsMjQyLDI4LDI1LDI1LDQsMCwyNTIsOTYsMjQ4LDUw
LDUwLDUwLDUwLDI0NCwyNDAsMjMyLDIyOCw1MCw1MCw1MCw1MCwyMjQsMTU2LDg0LDg4LDUw
LDUwLDUwLDUwLDkyLDk2LDEwMCwxMDQsNTAsNTAsNTAsNTAsMTA4LDExMiwxMTYsMTIwLDU3
LDU0LDUwLDUwLDEyNCwxMjgsMTMyLDE5MSwxMzYsOTYsMTU4LDIwNywyMzEsMjQzLDE0MCw5
NiwxNDQsOTYsMTQ4LDk2LDE1Miw5Niw0NCwyNDksMTI0LDYyLDcxLDE2MCw5NiwxNjQsOTYs
MTY4LDk2LDE3Miw5NiwyMDAsMjAwLDIwMCwyNDMsMTc2LDk2LDE4MCwxODQsMTg4LDIwMCwy
MDAsMjAwLDIwMCwxOTIsMTk2LDIwMCwyMDQsMjAxLDIwMCwyMDAsMjAwLDIwOCwyMTIsMjE2
LDIyMCwxMjQsNjIsMTU5LDIyMyw5NywxMzcsMTEyLDk3LDEwOCw5NywxMDQsOTcsMTAwLDk3
LDIwMCwyMTYsMjI4LDI0OSwxNjgsOTcsMTY0LDUsMTU2LDIwMCwyMDAsMjAwLDIwMCwxODAs
MTQ4LDE0NCwxNDAsMjAwLDIwMCwyMDAsMjAwLDE1MiwxNzYsMTg0LDE3MiwyMDAsMjAwLDIw
MCwyMDAsMTg4LDU2LDUyLDY0LDIyNSwyMDAsMjAwLDIwMCw2OCw4MCw3Miw3Niw5NywyMTcs
MTAwLDEwMCwxMDAsMjI4LDEyMCwxMzIsMTI0LDEyOCw1MCw1MCw1MCwxOTQsMTUxLDIwLDE2
LDgsMjI4LDU5LDk3LDUwLDEyLDIxNyw5Niw1LDMyLDEwMCwxMDAsMTAwLDEwMCwzNiw0MCw0
NCw0OCwxMDAsMTAwLDEwMCwxMDAsNTIsNTYsNjAsNjQsOTcsMTAyLDEwMCwxMDAsNjgsNzIs
NzYsMCwyLDM2LDg0LDY1LDM0LDE1NCwxNjksMTYyLDI1MCwyOSwxOTUsMjU0LDI0NiwyMjMs
NjIsMTYsNCwxNDAsNzksMjAzLDE5NSwyMDcsMjEyLDEsMjAzLDIwNywyMDQsMjEyLDIwMCwy
NTAsMCwxMDksMjU1LDI1NSwyNTUsMTY5LDE4MSwxODgsMTc0LDE3MywxODcsMTY4LDE5MSwx
NjYsMTc0LDE0NywxNTEsMTU5LDI1MCwxNTgsMTM2LDE0MCwxNTgsMTU4LDE1MCwxNTAsMjEy
LDE1OSwxMzAsMTEsMTY2LDIxNywyNTUsMjU1LDEyOSwxMiwxODEsMTc1LDE3NCwxNzAsMTgx
LDE2OSwxNzQsMjEyLDE5MSwxNjIsMTkxLDI1MCwxODAsMTgzLDE4NywxNzksMTgwLDksMjU0
LDI1NSwyMjMsMjU0LDE4MSwxNjgsMTc0LDE4MSwxODAsMTY1LDEzLDE3NCwxOTEsMTY4LDE4
MCwxOTEsMTc0LDE2NSwxNjksMTkxLDE4NSwxNzUsMTY1LDIwMSwyMTIsMjAyLDE2NSwyMDYs
MjAyLDIwNSwyMjMsMTkwLDEwOSwyMDcsMzIsMTcwLDE4OCwxMCwxNjUsOTYsMTY1LDE5NSwx
OTQsMTY1LDM2LDE2NSwxODMsMTkxLDE2NSwxMDcsMTgzLDEwOSwyMTYsMjAwLDE3NywyNCwx
MiwxNjksNDcsMTgwLDE4OSw1NywxNiwyNDksMjA3LDExMCw3LDE2OCwxODEsNjksMTg1LDE3
NCwxMiwxNjksMTg1LDE3OCwxOTEsMTkwLDIwMSwyMDAsMTE4LDEwNywxMDMsNjMsMTc0LDE3
MiwxOTAsMTgzLDksMTcyLDE2OCwyNCwyMDMsMjA0LDEyLDE4MSwyNDYsMjU1LDU0LDE3Nyw1
NiwxNzksMTgxLDIxNSwxNzMsMTY4LDE3MCwyMTUsMjA2LDIwMCwyMDMsMjE1LDcyLDEwLDE4
OSwxODUsMjM4LDEzMSwxNDgsMTc3LDE3OSwxODIsMTgyLDc2LDE4NSw5NCw5NSwxNzQsMTc1
LDE3MCwxODMsMTUzLDU5LDE4Miw0NywyMDMsMjMsMTgyLDE5MCwyMSw5LDI4LDE4NywxODIs
MzksMjI4LDE1LDExNSwxNzUsMTIsMTc3LDE5MCwxODEsMTczLDE4MCwyMDAsMjAyLDEyNSw0
NCw1NCwxMDcsMCwxNiw2NiwxMCwxODUsMTgyLDE5MSwxODcsMzUsMjUyLDYzLDE4MiwxNjUs
MTg1LDExLDE4NywxNzIsMTM4LDEzNiwxNDksMTQyLDE1OSwxNTMsMTQyLDE5NSwxMzAsMzAs
MTg1LDIxNiwxOTQsODksMjUxLDE4MywxODksMTY4LDE5MCwxNzksMzAsNDAsMTgzLDE5LDIw
MiwxNjUsMjI4LDEwMCwyMzcsNTQsMTg1LDIzMSwxOTUsMTYyLDc3LDEyLDE4MCwxNzQsMTUs
MjUxLDU0LDE1NSwxNzIsNiwxMDgsMTg0LDIwMywxOTQsMjAzLDExLDE3NCwxOTAsMjA3LDEx
MCwyMzcsMjE3LDE3MywxODMsMTY0LDE3OSwxODUsMTkwLDEyMSwxNzAsMTgwLDE2NSwxOTAs
MTkxLDExLDEzMSwxODEsMTMzLDE4OCwxNjUsMTc0LDI1MiwxMiwxNzAsMTQyLDE2Myw0Nywy
NywyMTQsMTAyLDEwLDgyLDcsMTY5LDE5MCwxNjgsNjYsOTcsODYsMTEyLDQzLDIxNiwxNDEs
MjUsODMsMTU5LDU3LDE4MiwxMTQsMTkxLDE1OSwxNzgsMSwxOTEsMTYyLDE3MSwxNzUsMjgs
ODgsMTkyLDEwLDc2LDI0LDM3LDE3MiwxOTEsMTU3LDIyMSwxNDYsMTAzLDE3MCwxOTAsMjMs
MTYyLDIyLDE3NCwxNzksMTcyLDE3OSwxNjgsNDUsMjE2LDEzNSwyNDAsMTc1LDE2OSwyMTUs
MTg1LDU4LDE4OCwxODcsMTY5LDgsMjMsMTc2LDQ4LDQzLDE4MCwxOTEsMTE0LDExOCwxMiw2
OCwxNzMsNTYsMTU2LDUzLDEzMCwyMDQsMzAsMTcsMTcwLDE1Niw4OSwxMSwxODIsMjA4LDYs
MTc2LDE4NywzNCwxNjAsNywxNDYsMTc2LDIwNSwyMTgsMTY5LDk4LDEwNSwyMDcsMTgxLDEz
MiwyMjgsMTkyLDIyMiwyNTQsMjEsMjA3LDIwMSwyMDIsOTEsMTg0LDE2MywxODQsMTYsMTcz
LDk2LDIxOSwxMzEsMzcsMTYzLDE4OSwxODQsMTgzLDIyNSwxNzUsMTAsMTAxLDIyMSw5Niwx
NDEsMTYyLDEzMSwxODksMjIwLDE5MCw5LDIxNCwyMDIsMTcsMTgyLDkwLDE4OSwyMjIsMTc4
LDE4NywxMzMsNCwxMzQsMTI1LDksMTQxLDU4LDQ0LDE3OCwxNzQsMTgyLDI5LDQzLDUyLDc4
LDIxNiwxODIsMTkxLDEyMiwxODcsMjI1LDEyMSwxMCwxMTgsMTIwLDkxLDAsNTMsMTY4LDE3
NSwxNTYsNTIsMTk1LDIyOCwxMDAsMjM5LDE4NywxOTAsMTMwLDEyLDE4MCwxNzQsMjUzLDY2
LDE3OCw2NywxNzYsOSwxOTEsMzUsMjA0LDExOCw1MCwxMCwzLDE3OSwyMDMsOTYsMTc5LDE3
MCwxNTksMTQwLDQ1LDc2LDE4Miw0OSwxNjgsMzIsMTY5LDEwNiwxNzYsNTEsMjAsMTAyLDE3
MywyMTMsMTksMjAwLDEzMCw0LDk3LDE5OCwxMDgsODgsMTMsMTIsMjMxLDMsMTk1LDc2LDE2
NSwxMTgsMTgyLDE3OSwxMSw5NSw2OCwxNiwyNywxNDcsMTUwLDE4NSwxNzAsMjE3LDE2LDM0
LDI1LDIxNSw0NiwxMDUsNzMsNzUsMzIsMjAxLDMzLDU4LDE4MiwyMzcsMjE3LDIzNyw3Miwx
ODQsMTM2LDE4OSwyMDAsOSwxNjksMjAzLDE2MiwyMTksMTQsMTk4LDI1LDE0OCwxOTAsMjU0
LDE4OCwxODksMzgsMTYwLDEwLDExLDg2LDQyLDQsMTEsMTQ2LDUxLDEyLDkxLDE1MCwxMzIs
MjQ2LDE3NSwxOTAsMTM2LDE5OSwxNjIsMjcsMTA1LDE2MSwyOSwxOTgsNDMsMTgwLDE1Niw3
MiwxNzMsMjEwLDIxOSwxNCw5MSwxNCwxODcsMTYyLDksMTY5LDIyNSwxODQsMTEsNDUsOSwx
NDcsMTMsMzIsMTg1LDMyLDEwLDEzOSwxNDQsMTA4LDEwNyw2NywzNCwyMDYsOTQsMTkxLDI1
LDcwLDE5NSwyMDEsNTgsMTkwLDM0LDE5MSwxODEsMTE3LDE3OSwxMTEsMTU1LDkxLDEzMCwy
NywxMTUsODQsMTIsNjQsMTg4LDMwLDE5NSwyMjAsMTc2LDE4MSwxMSwzOSwxMCwyMzQsMjMz
LDIzNSwyMjMsMTc2LDE4LDE0LDE3MCwxNjMsMTc4LDE3NSwyMDEsMjE1LDE0MSw2NiwxNzYs
MTUwLDEwOCwyMDAsMjAsNzMsMTkxLDE1NCwxNzUsMTA4LDE1MSwxMzIsMjUzLDExLDE3NSwx
ODMsMjUyLDE4MiwxNzUsMTU1LDE0LDIyNSwxODEsMTg1LDEzNCwzNiwxNzIsMTg5LDEyMywx
NjksMTcyLDE3MiwyMjEsMTU4LDEwMiwxMiw2MiwyMTUsMTg3LDE4MSwxNzYsOCwxNSwyMTYs
MTc2LDcyLDQxLDk0LDEzLDgsOTAsMjI1LDQ1LDU5LDE3MCwxNzksMjE3LDE0LDI0MiwxODEs
MTMsOTcsMjAxLDIwNSwyNDUsMTIsMTk3LDE5MCwxODYsMjM4LDUwLDEzNCwxMTcsMjgsMTgx
LDksMjUzLDE4Nyw5NywyMTcsMTQ2LDUzLDIzNiwyMDcsMjA3LDE5MSwyNCw2Niw0NiwxNzIs
MjE2LDU1LDIxNiwxNTAsMzQsMTgyLDEyLDE4OSwxODIsMTk1LDEyLDMsMjA3LDExMiw2MSwx
NjksMTYzLDE4MCwyMDYsNiwxOTAsMTY1LDc0LDIxNSw2NSwxMDYsNzcsMTg4LDE3OSw0Niwx
ODgsMTg0LDE3OSwxNDAsMTczLDExMCwyMTcsNDgsOSwyMzgsMTMsMTcwLDIyNCw0NSwxMjks
MTk0LDEwMSw5LDE5MSwyMzksNjAsMTUwLDUzLDEzLDIxNCwxOCwxNjksOCwxODIsMTMxLDE5
MCwxMCwyMjUsMTMxLDE5MywyMTYsMjA2LDE5MSwxMjIsMTgxLDEzNSwxODAsMjQzLDY0LDQz
LDQ3LDU3LDE3MywxODAsMTczLDE2NywxOTUsMTA0LDE0LDEzMCw3OCwxMzAsMTQyLDgyLDEw
OCwyMTQsMTEsNiwxNDcsNDIsMTIzLDE4LDIwMyw1Niw0OCwxNTEsMTc5LDIxLDE3MCwxNzMs
MTkyLDExMCwxNDQsMTExLDEwLDE4MCwxNzksMTYyLDE3NywxNzIsMzksMTYyLDE2MywyMDks
MTAyLDE4MSwxMzUsNTAsMTkxLDE4NCwxNzEsMTUwLDE4OSwyNTEsMTU5LDE3MiwyNTMsMTI2
LDIwMCwxNjksMTk1LDMsMTUsMTc3LDE2NSwyMDUsMjA0LDE2NSwyMDMsMjA2LDIwMSwyMDQs
MTcsMTAxLDEzMSw2MSwxNCwxNzksMTE0LDEyLDE5MCwyMzIsOTYsMTM1LDcsMTgyLDEyLDE4
OCw5LDE3OSwxNDEsMTUsMjE3LDU1LDg4LDg4LDI4LDIwMywyOSwyMDMsMjA1LDE2NSwyMDIs
MTUsMTcyLDIxNCw1MiwxNzYsNTksMTUxLDE2OSw0MCwxMzMsMTU0LDEzLDI0NiwyMCwyMDMs
MTg4LDE0NCwxODgsMTM2LDEwMSwxMTAsMTQ2LDEwNCwyNDEsMTc0LDEyNCwxNzAsODgsMjE1
LDkxLDE1Miw2MSwxODIsNywxODksMjA3LDEyLDg4LDE3NCwyMyw0NCwxMTUsMjAzLDE0LDE4
MSwyMjcsMTEsMzQsNTMsMTQsMjAsNzYsMTg1LDE5OCwxNjMsMTE3LDQ5LDE5MywyMjgsMTMw
LDExMCw2NiwxODYsOTAsMTEsMTg0LDcsNTUsMjUwLDEzNywxMzEsMTM3LDIxOCwyMywxMTgs
MTg1LDY4LDE3NiwxNjYsOTYsMzMsMTcxLDE4MSwxNzAsMTgyLDQ0LDE4MSwyNDYsOTYsMTYy
LDEwNCw3MCw0NywxNzIsMjAyLDIwLDczLDExMSwyMTYsMjcsODcsMTEsOTMsMjI5LDIwOCw1
NiwyNCwxODAsMTE5LDE2NiwxNzMsMTg5LDc1LDQ2LDcwLDIyNSwzMiwxNywxNzMsMTc4LDE2
OCwxNDMsMTg1LDEzNCwyMjgsNzYsMTc5LDE4MywxMzAsMjU1LDEyOSwyMTEsMTQwLDE3Niwx
NzMsMjA5LDEwLDEzMiwyMjQsMTkxLDQ0LDE1MywyNCw2NiwxMTUsMzQsMTIzLDg1LDU2LDE3
MSwxODEsMzcsMTU2LDcsMTY4LDE4LDExLDEyNiwyMjYsMTQyLDEzNSwyNDUsODksMTAsMTY5
LDE4NCwxODksMTQ3LDE3MywxNjMsMTc2LDc2LDI0LDIyMCwyNiw4NCwxNjcsMTc3LDE2OSwx
ODIsMTYyLDE4NSwxMzEsODQsNDgsMTAwLDIzOSw0MiwxNjAsMTg3LDE5MSwxMzMsNiwxNywx
MzQsOSwxNjAsMTI2LDE4MCwyMDMsNTgsMTgxLDk2LDE2LDEzLDE0MiwyMjMsMTA1LDIxNyw0
NCwxMDIsMTc2LDMxLDksMjEsMzQsMTAxLDExMywyMTcsMTEsMjAxLDY2LDM2LDE4LDI0LDIw
MCw1MCwxOTAsMTEyLDQzLDgsNSw3NCwxNDcsMTY0LDE3OCw0OCw1NCwxMDUsMTYsOTAsMTkx
LDc4LDE3MSwyMDcsMjQsMTk1LDEzMywxMjgsMTE2LDE3MSwxNTAsMTcsMTcyLDE5NCw0Mywx
MDksMTA5LDI0LDUyLDE2NCwyMSwyNDMsNjIsMTkwLDQsMTM0LDI0NSwxMzQsMTgwLDEyLDE5
MSwxODQsNTQsMTc2LDQ2LDYsMTY4LDcsMTc1LDEwLDQ2LDY2LDE0MSwxMDEsMjksMTY4LDkx
LDE1NywxNjMsMjE2LDE4MiwxNiwxMzIsNTksMjQzLDE3MiwzNiwxODAsMTM3LDg2LDEyOSw3
MCw0MywxOTUsMTI2LDcxLDEwMywxMDIsNDIsMTQ4LDgsMTY4LDI0MCw4OSwxMSwxNywxMDIs
MTc5LDExOSwxODQsMTUwLDEwLDY2LDg5LDU0LDEyOSw5LDEzOSwxNjUsNDgsMTY1LDEsMjYs
MTAzLDE3NSw2NiwxMDcsNjYsMjM2LDcxLDE3LDE4OCwxMzEsMTUzLDI2LDE3OSwxODUsNywy
MzIsMjMsMTQ0LDE2OSwxNDYsMTIsMTg4LDk2LDEwMiwxMzgsMTkyLDI0NSwxNzMsMzIsMTAz
LDIyMywxOSwxODAsNTUsMTgzLDE5OSwxMTIsMTg0LDI1LDE3OSwxNzksOCwxNDAsNyw3OCwx
OCwxNCwyMTQsMjA1LDE2MCw1OCwxNjIsOSwxNjksMjAxLDE2LDEwMiwxMDgsMTkzLDkwLDc1
LDEwMCwxMzcsMTg4LDc0LDEyMywxODAsMTAwLDcsMjI4LDk1LDIxLDIzNywyMTAsMjEsMTM2
LDI0NCwxMDAsMjA3LDE2MywxODMsMTA2LDI0MCwxMTcsNzUsMjE0LDEzMCwxMTAsOSw3Miwx
NDcsMTY5LDE3NywzNiw1LDIzNiwxNTUsNDUsMTEsMTc1LDEwLDE0NCw1MCwyMTYsOTYsMTQx
LDIxOSw2LDE4Nyw3LDE4Myw0Nyw0MywxMTcsMTA3LDMwLDIwMCwyMTUsNjAsMTEsMTgwLDE3
NCwxODIsMjA4LDIzNiwzMywyMTUsMjAxLDksMTMzLDE3NywxMjksMTU1LDQ1LDgwLDk2LDI0
Nyw2OCwxODQsOSwxMTksMzgsMjksODgsODcsMjMxLDE4MCwxMSwxNjIsMTgzLDkxLDI0Miwy
MzYsNDQsMjUzLDE3NCwxMjYsMTY4LDE3NiwxMSwxMTcsNTEsNzIsMTUwLDEzNSwxNTAsNDIs
MTcwLDI5LDQwLDg0LDE1Miw5OCwyMDUsNjQsMTU5LDIyMCwxOCwxMDYsMTQxLDEyLDE3Miwx
Myw3LDEyLDI0LDIxNCwxMzAsNTcsMTE4LDEwLDIwNCwzMywxNzEsNDUsMTA3LDIyOCwxMTEs
MjQ1LDExLDc0LDE5OCwyMDAsMTUwLDE3Miw0OCwyNSw5OSwxMSwxODgsMTUsOTQsNjMsOCwy
NDcsMTgzLDE5MCwyNDAsMTAxLDEwMiwxMDYsNzksNzIsMTUwLDE3MiwxODAsMTgyLDEzOCwx
MjQsMTIsMTA0LDE5MywxNTYsMTA1LDYwLDExLDEyLDExLDI2LDU3LDEzMCwxODEsMTkwLDks
MTUsNDcsMTE0LDIwNCwxMTQsMTkzLDExLDE4MywyMzksMTQ3LDE3Miw4NSw0Miw1NywyNiw4
NCwyMTMsODMsNTAsMjYsMTcyLDEzNywyMiwxMTUsMTYyLDE2OCwxMSwxNzgsNDgsOTYsMTMx
LDY5LDIyLDEyLDE3OSwxNDIsMTY5LDIyLDE5NSwxODYsMzYsOTksMTAsMTgxLDksMTAsMTk2
LDE3OCwxNDUsMTExLDIyMywxNjksMTkxLDEyLDE5OSwyMzYsNSwyMDQsMTczLDEzLDE5OSwx
NCwxNjUsNDMsOCwxNzksOTEsMTkwLDY1LDE5NCwxOTUsMTIsMTgsMTk5LDE1LDE2Niw5Nywy
MCwxNDUsMjcsMTMxLDE2Miw3MCwxNzksODYsMjIsNzcsOTEsNzMsMTc2LDM4LDUzLDg2LDIw
NSwxNjcsMTI4LDIyMiwyMTcsMjYsMzUsMTc2LDcxLDE3OSw1OCwyOCw5Myw4OSw0NCwxNDYs
NzAsMTgzLDE0NCwxMjgsOTIsMTIwLDE3OSwyNDksMTAsNTIsMTg5LDIwMSw0MSw1NSwxMDcs
MTczLDE2Nyw2NSw4LDcyLDQzLDI0LDYsMzgsMTQsMTgzLDE0Nyw1NywyOCwxNDEsODksOTEs
ODAsMTg4LDEwMCwxOTMsMjUsMTUsMjA1LDE0LDEzLDIxNCwxNDcsMzUsMTY5LDEyMCwxNTYs
MjI2LDE5NSw5MCwxOTMsMTIsOCwxMTUsMTIsMTc1LDIwMiwyMDEsMTk0LDY3LDE2OCw4NSwy
LDIxMCwyNDYsMTk0LDIwMiwxODAsNTYsMjMzLDEzMCwxOTIsMTYzLDkzLDE3NCwxNjksMTYw
LDUxLDQ5LDQsMjU0LDEyLDE4MywyMDAsMjA0LDEyMCwyNDgsMTUsMjE5LDI1NSwyMDAsODYs
MTI1LDE4MywyNTAsMTQ2LDE0MiwxNDIsMTM4LDE5MiwyMTMsMjEzLDE0MSwwLDIxMiwzLDEy
MywyMjUsMjU1LDEzNywxMzgsMTQ3LDE1OSwxNTcsMTU5LDE1MCwyMTIsMTU4LDE1OSwyMTMs
MzUsMTM4LDE0NiwxMzgsMjcsMTksMjE2LDE5MSwyNTMsMTUwLDE1OSwxNDcsMTM4LDEyOCwx
NDcsMjksMTM2LDIxNSwxNTEsMTU5LDEzNywxMzcsMTU5LDM1LDE1MSw5NiwyNTUsNSwyNDYs
MTQ5LDE1MiwxNDcsMTUwLDI2LDE0OCwxNTksMTU2LDE0OSwxMzYsMTUxLDE1NSw5MSwyMDAs
NzksOTYsOTUsMTU1LDE0MCwxNDYsNzksMTU3LDE0OSwxNTksMTQyLDE0NiwxMjksMTgxLDIy
MywyMiwxOSwxNTcsMTM2LDE0MywxMzEsMTQyLDE0MiwxNzIsMjUxLDEzNSwxNzYsNTAsMTQ2
LDE2MiwxNTUsMTQzLDE0MiwxNDksMTM3LDE1MywxNDksNSwxNzMsMTgxLDQsMTE4LDIwMCwy
MDYsMzEsODQsMjIwLDU5LDE5LDIxNiwyMjEsMTgzLDE1Myw2NCwyMTUsMTUyLDE0OSwxNDIs
NywxNTUsMTU2LDE0MiwzOSwxNTIsMTMyLDExMSwxMSwyMzYsMTUxLDE1MiwxNTYsMjQsMTQ2
LDE1MCwxNDcsMTQ4LDE1NSw2LDQzLDkyLDEwNCwzMyw3OSwzLDE0OCwxNDgsNjYsOTEsNDMs
MTA3LDEzMyw2NiwxMywxMDksMyw5MiwxMDcsMzksMTc2LDI1NSwxNjksMTM4LDE1NSwxNTMs
MTU5LDE1MywxNTAsMTQzLDE1Miw2MywxNTYsMTM2LDI5LDE0LDE4MiwyNDYsMzMsMTA4LDIx
NSwxODgsMTUwLDE0OSwxNDAsMTU5LDYyLDM0LDE1OCw2OSwxODcsMTMzLDE2LDUxLDE0OSwx
NDgsMTQ5LDIxNCwyNDYsMTMsMzMsMTg4LDE0MywxNDYsMTQ3LDE0NSw4NCwxNDMsMjQzLDE1
MCwxNjIsMjQwLDIzOCw1LDE5NCwxNTgsNjAsMTUzLDIxNSwzMCwxNDgsMTQ3LDE0MiwxMjgs
MTgyLDIwOSw2MiwxMjgsMTE5LDE1NSwxNTIsMTU1LDE0NSw1Niw2NywxNDIsMTI3LDE3Niwx
OTQsOSwyMjgsMTQ4LDE1NSwxNTksMTUxLDg5LDExOSwxNjEsMTg5LDE5Miw0NiwxNDEsMTEx
LDE0NywxNTYsMjEsMTQxLDEwOSw1OSwxMzIsMTEyLDE1NywxNDgsMTA0LDE1MywxNDUsMTM0
LDEzNywxNDUsMjU0LDExLDE3MiwxMDksMjA3LDE0Miw4OSw4OCwxMzgsMTM2LDE0NywyMTUs
MTQxLDE0OSwyMTUsMjQyLDgzLDE5NCwyNywxMTcsMTUyLDE0MywxMzYsMTU3LDIwLDE0MCwx
NDcsMTM2LDE0MiwxNDMsMjE4LDQ1LDEzMiwyNDEsMTI4LDE0OSwxNDgsMjA3LDIzMywxMzcs
MTQzLDQsMTQwLDksNDcsMTYsMTM3LDE0MywyMTUsMjM0LDIzOCw0NSwxMjksMTgxLDExLDE1
NSwxMTIsMjQsMTcwLDIxMCwxMTgsMTI5LDEwOSwxODAsMTUwLDgxLDE0MSwyNCwxNDIsNiwx
ODcsMTA5LDE0MSwxNiw0MiwyNywyMTUsODMsMTQyLDE0NywxNjksMjM3LDEwOSw4LDEwNSwx
MzcsOTQsMTI4LDMwLDE0NSwxNDksMTUxLDYsMjEyLDExMiwxMiw5NywxMTcsMTUzLDIwMiwx
MjAsMTY1LDE5NCw0NiwxMzIsMjE5LDE0LDIxNSwxMzYsMTA1LDIxLDcwLDkxLDk2LDE0MSwx
MzYsMTIyLDE1NCwyMzAsNjAsMTI5LDIxLDIyLDIxNiwxNTMsMTU2LDE2MCwxMTQsNTQsMTAx
LDExLDEwOSw3NiwyMzcsMTUxLDI2LDE0NCwxNjUsMTI5LDUzLDIyMCwxOTgsMTQ3LDI1Mywx
NDAsMjExLDE3MiwyMDIsNTQsOTcsNTksOTcsMTIwLDEzNiwyMDQsMjE1LDIyNSw0Miw0NSwx
NzIsNCwyNDcsMTUxLDEzMCwxNDYsMjE3LDE4OSwyMDgsMTMwLDE5NCwxNiwxMzAsNDMsNzAs
MjEyLDUyLDIxNSwyNDUsODIsNTksMTAxLDE2NiwxMDgsMjgsMjAxLDE0MiwyMzQsMzcsODYs
MjE0LDIyLDIxOCwxNDksMjA5LDEwOCwxNTMsODYsNTYsMTc2LDQ1LDE0OCwyNiw4LDE0Miw2
Nyw0OSwxNTgsNjMsMTUwLDEzMywzLDgsMTczLDE2OSw2NCwxOCwyMDAsMTQzLDEzLDExLDEz
MiwxMDksMTA3LDE1MSwyOCwxNTcsMjA0LDE0MCwyNTUsMCwxNTIsMTU4LDEwLDE3NiwxNjgs
MjE1LDM5LDIsMTYzLDgwLDEwNiwxNTQsMTA5LDE4NSwyNDcsNTUsMTk5LDQsMjQyLDE1Niwx
NTcsMTQ1LDg2LDUyLDE1OSwxNDgsNTAsNTIsNzAsOCwxMzksMTIzLDkzLDgsMjM1LDE0NSwx
OTQsOTYsMjM0LDI1MSw4LDMzLDE0MCw2NiwxNSwzMCwyMjAsODYsNDIsMTgwLDY2LDE1LDEx
OSwyLDE4OSwyMDIsMTAsMjM4LDE3LDE0OSwxNTMsMzAsNzAsODMsNDYsNzUsMTY1LDIxOSwx
MzIsMTM2LDE1OCw5MSwxODUsMTQ5LDEzNiwxNDMsMjExLDEzNSwyMiw2NCwyMCwyMTcsMjE1
LDE0OSwxODQsOTIsMzIsMTgxLDU0LDE3MSwxNDksMTc3LDEyNCwxNDUsOTIsMTk5LDYsOSwz
OCw3MSwxNDMsMTQ4LDMxLDg3LDIxNCwxMCwyMyw4LDE1NywxNDcsMTAyLDEwLDI0MywxNTgs
MTI4LDE4MSwxODEsMTQyLDE0NywyNDcsMjEyLDE2MywxOTgsMTM3LDkxLDI2LDU2LDgzLDQx
LDczLDgzLDEzNywyMTAsOCwzMywxNDksNSwxNDMsMTQ2LDI2LDE2Nyw4Niw0Myw4MCwxOTAs
MTM2LDkxLDY5LDYxLDExLDMzLDEyLDI2LDE4MiwxMTAsMjMzLDE0Myw0MCw5Miw5NiwyNywx
MCwxNDcsMTYzLDE1MCwxMTcsOTksMTMyLDE4MCwxNTMsNTEsOTksMTU3LDEyMywxMDcsNDEs
MjE3LDEyLDE3NCwxNDgsMzMsMjEzLDIzMSwxNTEsMTMsMjE1LDc0LDIyNCwxNTEsMTQ2LDE0
MCwyMzYsMTg0LDE1NCwxNDksOTYsMjMyLDc2LDcyLDI1NCwxMzYsNCwyOSwxODAsMjE4LDE4
MiwxOTcsMTM3LDIxLDE5NCwyNDUsMTQwLDE3OSwyMTgsMTI5LDEsMjE0LDEwLDMxLDM1LDE4
MywyMjcsOTcsMTYyLDEzNywxNDYsMTM2LDM4LDEzNywyMTYsMTA4LDE5NSwxOTYsMTQ5LDEw
NCwxNDIsMjAxLDQ0LDEzMSw1NSw0MCw4MSwxMDYsMSwyMSwxNTQsMzUsNzAsOCwyMDMsODAs
MTE0LDI0OSwxMDgsMjM5LDgsMjMzLDE5NCwyNDYsMTI4LDIxNSwxNDUsMzcsMTUwLDE1Mywx
NDMsMTQ2LDE1NSwxMDIsOTAsMzIsMTEzLDE1OCwxNTMsMjQwLDE0OCwxMTQsMTc2LDE5Miwx
NTAsMTgyLDk3LDE0MiwyNDIsMTUyLDMyLDIxMywyNDQsMjA5LDE0MiwxNjgsMjE1LDEzOCwx
MjMsOTIsMjE1LDEwMSwxNTksMTUwLDIxOSwyNiwxMzMsMjMsMTE4LDE0MSw1NSw5NSwxNjYs
NSwxOCwxNDEsMjcsMjU1LDI0NywxNDAsMTA5LDEyOSwxODEsMTU4LDEwMCwyMTYsMTU1LDE0
OCwxMSw2Niw4LDExLDE5OSw1MSw2MSw3Nyw5MiwxMzEsMzYsMjE4LDE0MiwyNTEsOTIsODUs
MTc2LDg5LDE4MywxMywxNzksMTU2LDEwMiwxNTEsMTU4LDM1LDE2NSwyMTAsODYsMjI0LDQ1
LDEwMiwzMywyNSwxNDgsMjA0LDE5LDYsMjE4LDQsMTU2LDE2MCw2MCwxMzgsNTMsNTMsMjgs
MTMzLDE4NywyLDEwMCwxMTEsMTM3LDEzMyw4MiwxMDUsMTQ0LDExNiwwLDc1LDE4MCwxMDgs
MjcsMTk0LDc2LDIwNSwzNiwyMTUsMTAyLDE1NywxMzUsMTYzLDIwOCw3NCw0MSwxNjUsNjcs
MTQ1LDE2Niw2NiwzNSwxMzIsMTMyLDIxMiwyMjYsMTcsOTEsOTYsMzgsMTkwLDEzNSwxNTAs
MTUsNjksMjM1LDY2LDk4LDE2MSwxMDUsMTI4LDIwMywxMzcsMjQsMTQzLDEwMiwxODIsMjI4
LDE2MiwxNzcsMTExLDE1MCwzOSwxNDAsMTk5LDUsNzgsMTMzLDUsMjM4LDE2NywxNDEsOTUs
MzIsMjI0LDEwLDYxLDQwLDE4MywxNTMsMTQ3LDE1MywxOTYsNCwxNDYsMTYxLDE0MCwzMSw5
NywxNDksMTA0LDE4Miw0OCwxMzIsMTk2LDE0NCw5MywxNTUsMjI3LDE2NSwxODIsMTg4LDY0
LDExMCwxNTksMTMwLDE0MiwxMTQsNDEsMjU0LDc1LDE4Miw5MCwyMzQsMTY2LDEzMSwyNTAs
MjIzLDEzNywxOTcsMTM4LDE5OSwyMjMsMTA0LDE4OCwxODEsMTMzLDE2NSwyMjAsMjQ3LDYs
MTM3LDI1MCwxODcsNzgsMTgyLDIwOSwxMDIsOTAsMjE0LDI1MCw0OSwxNjQsMjEzLDI1LDEz
OCw5LDExMCw3LDkxLDEwLDM2LDE1Niw5LDE0NCwxMzgsMTkwLDI1MCwxNTcsMTU2LDEwOSw5
MywyMTksNzAsMTM4LDQ5LDIyMywxNTAsNDIsMTg5LDExLDE2OSwxOTgsODYsMTc4LDMxLDEw
NSwxNDMsMTM4LDE0LDcxLDE0MiwxMjQsMjE4LDExMSw5OSwyMzYsMTQxLDE0OCwxNSwxODks
NzMsMTc5LDYwLDE5MSwxNDgsMTIzLDksMTA4LDE2OSwyNSwyMjgsMjgsODYsMTU5LDI0LDIy
MSw4OCwxNjEsOTksMjAsMTgyLDE0OSwyNDUsMjEsMTg4LDIzNiwxNjksMjQ5LDg4LDMsNywy
MjYsNywyMywxNjksMTU1LDE0MCwxNTksNiwxNTgsMTgxLDMwLDE3NCwxNDksMTg4LDUyLDY0
LDE5MCwxNDcsODMsMTg1LDIsMTEwLDE3OSwxMzcsMjIsMjAyLDE4MywxNjAsMTU2LDUsMzgs
MTAsMTc5LDMsMjQ4LDk2LDE5NCwyNTQsMTc4LDgsMTM1LDcsNzgsMTgyLDU1LDIxOSwyNTAs
MCwyMTYsMjE5LDIyOSwyMywzNSwxNzAsMTkxLDE4MiwyNTEsNjEsMjMsNTksMTA2LDUwLDI0
NywxNTUsMjUzLDEyNywyNTAsMjYsMjUwLDI0NCwyMTksMjQxLDI1MSwyNTUsMjQ2LDI1MCwy
NTIsODgsMCwyMzQsMjM1LDQsMTc5LDIzOSwyMDUsMTg2LDMsMjE4LDE0LDExLDI3LDI1NCwz
MCwxMTAsMTgyLDIzNiwxMDAsNywyNTAsMjAyLDUxLDYsNDAsMjUsNzUsNTQsMTc2LDIzNCw3
LDYsMTIsMjM4LDIzNiwxMjQsMzUsMTcyLDE5OCwxNjAsMiwyMTgsMCwxMzcsNjksMjQ2LDQy
LDEzOCwyMzQsNTUsNTMsMTI1LDE5MywxOTAsMTUwLDEwMiwyMzUsMjU1LDE0NCwxNzIsMjQ4
LDE4Miw0NSwyMTUsMTQ4LDEyMiwyNiw4MiwxMTUsMTUzLDE2LDIxMCw1OSwzNywxNTYsNzcs
MzUsMjU0LDcxLDE4NCwyNTAsMCwxNTQsMjYsMTM1LDQwLDE2NiwxNTMsMTIyLDIyNiwxNTIs
MjE3LDk2LDIyNCw0MywxNjQsMTQ5LDkwLDExLDE3MCwyMzQsMjM4LDE0NiwzOSw0NywzOCwy
MzQsMTQ2LDIzNCwwLDE1LDEwMiw1NywxMDEsMTQ3LDExNCwzLDEwNiwyMzQsMTAwLDY0LDE1
OCwxMDksMTU0LDg2LDYyLDQyLDIzNCwzMSwxNiwyMzQsMTk1LDY1LDE5OSw0NywyMjcsMjUw
LDE4NSwxNTAsMTU3LDE3OCwxNjAsMTc1LDEyNywyMCwyOCwxNzMsMjAwLDEzLDIwMywxMDYs
MTg4LDE4NywyNTAsMTU4LDE5OCwxNDYsMTMxLDE0MiwyNTEsMjUyLDE3MywyNDcsMzYsMTM3
LDE5NywyMTAsMTgzLDQ2LDE4MiwyNCwxNTMsMzEsMTMxLDIyLDI1MCw2NywyNDgsMTczLDEy
OSwxODEsNzAsMjM4LDE3OSwzNiwyNTAsNDEsMjQ4LDIwNiwyMDAsNTEsNDIsNjUsMywyMDgs
MjMsMTc3LDc4LDE4Miw0NCwxMDksMjE5LDgyLDEyMywxMTUsMjUwLDIxNyw5NiwxNTksOCwx
OTEsMjMxLDE1Myw1NCwxMjMsMTMyLDQzLDEwMyw3NywyMzYsMjgsMTkwLDE5MiwyNTUsMTAs
ODgsMTU0LDEzNSwyNDYsMjUxLDE0MywxODgsMTA2LDIzMywxMjAsMjI3LDgzLDEwMCwxNDYs
MjYsMTgzLDIzNCwxOCw5NywxNzksMTQ2LDEsMjA3LDIyMiwyMTcsMTQsOTgsMTk5LDEwLDIy
MywyNTAsMjIzLDM2LDE2MCw3OSwyNDIsMjI2LDEwNiwyMjksMjAsMTQ2LDk3LDgxLDE4OSwx
ODUsMjQ3LDQxLDExLDE4LDE0MSwyNTAsOTUsMTMwLDE1OCwxNjQsMTcwLDgxLDIwMSwzMywx
MDYsMTg1LDgxLDE2LDE0Niw3NywxODgsMjA2LDI1MCwxMzYsNTQsNjgsNjEsMjE4LDY4LDIy
NCw4NywxMDQsMTAyLDE5LDIwOSw0OSw4NCwxNjgsMTcyLDIxOCwyMTcsMjUwLDI0NywzLDE5
NiwyNDMsNiwxOCwyNDMsMjUwLDE2NCw4MCw1LDIyMywxMzgsMTAxLDcwLDcwLDcwLDU0LDUs
MTQyLDEzMCwxMzQsMTIyLDI4LDEyOCw5Nyw3MCwxMTQsMjMxLDI1MCwyNTUsMjU1LDI1NSwx
MzEsMjE4LDIwMywyMDgsMjAzLDIxMywyMDMsMTkyLDIwMywxODEsMjAzLDE3NCwyMDMsNjQs
MjAzLDU4LDIwMyw2MCwyMDMsNTQsMjAzLDQwLDIwMywzNCwyMDMsMjUwLDU5LDEwLDIxLDEw
MSwwLDYsMjE4LDE1NiwxMjEsMTA4LDksNzYsNTYsNzEsMjE0LDgsMTQyLDEzMCwxNDIsMTY1
LDEwOSwxMzEsMTA5LDE1Nyw2LDE0OCw2NiwxNTksOCwxMzgsNzIsMjE2LDIxOSwxMjMsMTgx
LDE0Niw1LDIzNSwyNyw5LDE0NywyNDcsMjQwLDEyLDIzNywyMzUsMzcsMTI2LDIxOCwxOTks
MjE4LDIxNiwxNzUsMTM3LDE2NSwyMDAsNTgsMjE2LDIzLDE1OSwyMjgsMTM0LDE4MSwxNjks
NTEsNzMsMjYsMTgzLDE4MSwxNTIsMTQ0LDg1LDEwNiwyMzMsNzcsMTY1LDIxMCwyMTYsMTY5
LDE1MywxNjAsMTM4LDc2LDEwMywzOSwxMjAsNTAsMTY1LDE2NCwxNjksMTc5LDI3LDIxNiwx
MywyMzAsMjIwLDE3OCwyMTEsNTcsMTIyLDU3LDY3LDIxMiwyMzQsMTc4LDIwNywxNTcsNjUs
MTc0LDEwOSw1MSwyMTAsMTMxLDE3NCwxMCw4OCw0OCwxMDMsMTgyLDUzLDE2Myw0OSwxNTks
MTIzLDIyMSwyMzEsMjksNDIsMTgwLDIxLDIxMCwxODQsMzYsMjIyLDE1NSwxOTIsMTgsMzcs
MTEwLDYsMTU1LDE5OSwxNjMsMjM1LDEzMSwxMDgsNTUsODMsMTc0LDEzMiwxOCwxMDQsMTk4
LDE5OSwyMDIsMjEyLDE0OSw1MiwyMTQsMTUzLDEwNywyNDcsMTMsMTE5LDIxMiw2NSwyMTAs
MjAzLDkyLDI0Nyw0Nyw0MywxMzYsMjEwLDE1NSwyMTAsMTQ3LDIxMSwyMTEsMzksMTQ4LDEx
MiwzMSw5MywxNzYsMTc5LDg4LDE0OSw3OSwxMjgsNiw3LDE4NSwyMTksMTgyLDE3Myw0LDE0
NSwxNzksMTg4LDgxLDE2OCwxNzEsMTU4LDIyMiwyMjgsMjM2LDE4OSwxNTcsMTQwLDIwMywy
MTQsMTUsNzgsMTUsMjAwLDIxNyw2LDUxLDExMiwxODcsMTM4LDkwLDMzLDIwMSw1NSwxNTMs
MTMwLDE3MSwxNzEsMjIsNTIsMjI2LDE1OSwxNDQsNzQsMTgwLDE1Niw0Myw3MSwxMzcsOTQs
MjEsMjMxLDIwMCw4LDQ1LDM0LDU2LDIyMSw3NywxNDksMjM5LDI0MCw1OCw0NCwyMSwxMzcs
MjA3LDY0LDQyLDIyMiwxNzgsNTksMTA2LDQ3LDEyNywxNDgsMjE4LDIxMCw3MiwyNSwxMzks
MjIsMjM4LDE5NSw0MiwxMzksMTQzLDE0NywyMDQsMTg0LDk4LDE4MSwxOTEsMTA4LDExMSwy
MTQsNCwzLDE1MCwxOTgsMTc4LDE3NCwxODMsMTgyLDE5NiwyMSwxMjksNTUsMjMyLDE4OCw3
LDE5MSwxODcsMTkwLDIyNywxODIsMTkxLDE5Niw5NiwxMjcsMTc5LDIyMSw3LDIxOCwxNzUs
MTM4LDE1OCwxMTUsMTk4LDIxMywyMSwzOCwxNzQsMTg3LDE5MiwxOTEsODUsMTUsMTkyLDE4
NywxNzAsNTgsMTc0LDE5OSwyMTgsMTc5LDE5MCwxOTksMjE2LDg4LDEzOSw2LDIzNiwxNzEs
MjE2LDIxOCwxOCwxODAsMTA0LDE5LDEwOCw1LDE1MCwxMjgsMSwxOTAsMTI0LDEwLDE0OCw5
NCwyNTEsMTc2LDY2LDkxLDEzLDE2OSwxNzQsMTYzLDcxLDE4LDIyMiwyMTksMTU0LDQzLDgs
MjAsNDksMTcwLDUwLDE2LDYsMjA4LDE4OSwyMTQsMTIsNjMsOSwyMCwxODEsNTcsMjUzLDEw
Myw0NiwyMjQsMTYyLDE3NCwxMzksMjQsMTgzLDE4NywxNjIsMTc5LDE4MywxNzksMTYwLDEy
LDUyLDIzNiw4Niw4NCwxNzQsMTc0LDQ0LDY0LDI2LDE4MCwxOTIsMjAwLDE5LDIwNCwxODEs
NTAsNzAsMTg5LDE4MywxMzksMzIsMTg0LDE4NywxMTksMTgsMjI4LDEwNCwyNDYsMjMsMTgx
LDExMiwyMDIsMTgwLDE4NSwxOTEsMTksMjEsMTE1LDE1MSwxODEsNzcsOTEsMTcyLDE0Nywx
MjksMjEsMiwyMTUsNzQsMTIwLDEzLDYyLDU4LDkxLDksNTgsNywxNTcsNDMsMTUxLDEyOSwz
LDEyOCwzNywyMTgsMjU0LDEwOSwxODcsMjEzLDI0OCwxNjksMTg1LDE2OCwxNzksMTcyLDIx
OCw2NSw1OSw5OSwxODMsODAsMTgyLDE4OSwzMCwxNzIsMTg0LDIwOCwyMTYsMjksMTQ0LDI1
NCw2NSwxODYsMTgzLDEzMSwxODgsMTIsMTM5LDE1NiwxNTAsMjEyLDE0MCwxNTIsMTM3LDEw
LDI0Nyw2LDcyLDEyMiwxODgsMTY5LDE4MSw2LDE3NCw1Myw1OSwyMDEsMTUyLDE0MSwxNDAs
MjU0LDEwMiwyNTIsMTAsMTY5LDYxLDExOCwzOSwyMTIsMTQxLDE3OCwxMTgsMTkzLDE5NCwx
MTAsMjM3LDU0LDIzNCwyMjAsMjE4LDE2NiwxMzcsMTUwLDE1Niw3MCwxOTgsMjE0LDYsODIs
MjE0LDIwMiwyMCwxNDUsNjYsMTMxLDE2NCwxNiw1NCwyMTYsNDUsMjM2LDY2LDg5LDI3LDEw
MCwyMzAsMjMxLDgwLDEwLDk3LDEzMSwxNzYsMyw3NCwxNzIsMTcsMTgyLDIwMiwyNCw1Nyw0
NSwyMTYsMTc4LDY2LDg4LDI3LDY2LDMyLDE3LDU0LDE3Niw2Niw4NywzNCwxMCw5NywzMywx
NzIsMTA4LDQ2LDg5LDE3Miw4MCwyNDYsMTI5LDczLDE1MCwyMDUsOCwyNywxMDAsMywxMjgs
MjcsMjgsMzMsMTA4LDY1LDIxNCwyMTMsNzYsMTcyLDUwLDIsODgsMjM0LDk0LDEzMiw0LDY2
LDksMCwxLDE1MCwxNiw3Miw5Nyw4NCwyMywxMTcsMTI5LDY0LDEwLDkxLDQ3LDQ1LDEwOSwx
NTEsNTIsMTc2LDM0LDE1MywxODAsMTk3LDE0NiwyNiw0NiwyMjgsMjA0LDIzOSwxOCwxODgs
MTkwLDgzLDE3MywxMzQsMjA1LDk4LDIxMiwxNDUsMTAxLDMyLDEzLDc4LDE2MCwxNDksMTQ2
LDM0LDEwMywxOTMsMTY5LDg5LDIzOCw5Nyw2Nyw0MSwyMTIsMTY4LDE3MSw3MywxNjAsMTI4
LDEwNSwzMywxMDAsMjAyLDIxMCw0NSwxMjMsMjA1LDQyLDI0MCwxMjEsMTM2LDEzNCwxNDQs
MTY2LDMxLDEzMyw4LDYwLDE5NiwxNDEsMTY5LDI3LDMsMjEwLDMzLDI0MCwxMzAsMTgxLDIx
MSwzMiwyMiw0MywyMTAsMTkwLDE2LDEzNiwxOTIsMjEzLDIyNywyNDcsMjUwLDI1MSwxODUs
MjE0LDEwNCwxNjcsMTY1LDkzLDIyMSwxMTAsNjIsMjM4LDIyOCwxMDksMjEzLDE2MCwyNTMs
MTQ3LDE1OSwxNDEsMTU5LDEzNiw4LDU0LDE2NywxNDcsMTgxLDcwLDEwNywyMDUsMTYzLDE5
LDg3LDIwOSwxOTgsMTQyLDE3LDExLDE0MSwzNSw2MywyNTAsMTkxLDI0NiwyMzMsMjE5LDEz
MSwxMTEsMjM3LDEwMCwyMjUsMTgzLDE0NywxMDIsMTEyLDE0OSwxNTYsMTQyLDE2Niw0MSwy
MTgsODYsMTgwLDcsMTY2LDE4NSwxNDMsMzQsOSwxNzIsNjksMTA2LDg2LDE3NCwzMywxNTEs
MTY2LDE5NCw3MywxMDksMzgsMjMyLDE5OCw4MywyMTIsMTQ5LDI1MCwxNzksNCwxMjgsOTAs
MTUzLDE4MywxODMsMTU3LDI1MCwyMTUsMTksMTQ2LDE0MiwxNTUsMTIxLDE1MiwyMjgsNDEs
MTQwLDkyLDE5Miw5OSwxODYsMTc5LDIxNCwyNiwxMzQsMTQyLDIyLDE0OCw3OCw2Miw0OSwx
MzgsMjU1LDcwLDUsMTg2LDE3MSwyMDcsMTc2LDE1MiwyNDgsMjQ5LDI1NCwyNTUsMjUyLDI1
MywyNDIsMjEwLDEzMCwxNjksODIsOTYsMTk5LDEzNSwyMjMsMjI5LDQ4LDE1MSwxNzIsMTg1
LDM0LDI0MSwxMywxMTMsMTMsNTcsNyw5NywzMCwxNDksMTM2LDE1NywxNzUsNiwxODMsMjUz
LDE5NCw4NiwxNTEsMTgyLDE4OCwxNjgsMTgxLDE4MywxOTIsMTk4LDI2LDE5NiwyMywyNiwy
MTQsMTkyLDE5MiwxODUsMjIyLDc1LDE0LDE5NSw2MiwxODQsMTY1LDIwOCwxODcsNiw0Mywx
ODYsMTUxLDIzNywxNzQsMjIyLDMwLDE2NSwyNTAsMjUyLDI1MSwxNTAsMTU2LDIxNSwxMzcs
NjUsMjQsMTg1LDY4LDEwNywyMTEsMTEwLDM2LDI1MCwxNDMsMjUwLDIyLDE2Miw1Nyw4OCw3
OSwxMzEsMjMzLDI3LDcyLDEzNyw0MywyMCwyMDIsMjA5LDUsMjQyLDYsMjMxLDQzLDI0NCw2
LDE4NSwxNTAsMTI2LDI5LDIzNywxNTgsMjE1LDE1MywxMzgsMjE0LDIyNCwyNiwxMiwyNywy
MjgsMTM4LDUsMjM2LDEwOSwxNjgsMTAyLDIzOCw1LDE0MiwxNTgsMTMxLDcsNjAsNywxNjUs
NjYsOTcsMTQ1LDEzMCwzMSwxMTIsMTIzLDEwMiwxNjAsNTQsODksMjUwLDExNiwxMzcsOTYs
MCwzNCwyMTksMjIsNDQsMTgwLDEyMywxNjcsMjUwLDE3MSwxMzAsOTksMTM3LDEzOCwyMzAs
MTEwLDIwOCwxNTgsMjUwLDMzLDE0MywxMzAsNSw5MywyMDgsMTk4LDE2MCwxMDIsMjIzLDEx
MiwxMDQsMTUzLDQ2LDI3LDIyOCw5MCwxODcsMTE5LDE0NiwxNDksMTgwLDkyLDQsMTg4LDE1
NSw4NCwyMTksMTY1LDEwNCwxMjgsMzQsMjE1LDE1NSwzMywxODYsNywxOTksMTUxLDE5Miwx
ODIsMjQwLDE1MCwxNTUsMTUyLDI1MCw1NCwxMzcsMTA3LDIwNSwyNSwxMTAsMTQ5LDE0OSwx
NTcsMjIyLDEzLDE3MSwyMDUsMjgsMjIxLDkwLDUxLDExMiwxNTEsMTM4LDQ0LDEyNywxOTQs
ODIsMjUwLDEzOCwxMDcsMTczLDEwOSwxNzMsNTksMjE1LDg2LDE1NSwxOTEsMTEsMTQ4LDI2
LDE1NCwxODcsMTA5LDkxLDE2LDE1Nyw0OCwxODYsNzEsMTM4LDIxMiwxNzIsODIsMjE0LDEz
MCw3MCwyMTksNDEsMTMxLDEyNCw0NSwyNDQsMTY2LDI0LDIxOCwyMTQsMjIwLDE0OSwyMzAs
MTYyLDEzNiwxNTEsMTg5LDE2Niw5MiwyMjEsMTk0LDU1LDE4MSwxNjYsMjUwLDIwOCwyMTIs
MjA4LDIyMSwxNDEsMTA1LDIxMiwxNjIsMTU1LDExNywxNTYsMjMsMjQxLDE1MSwxMzcsMTU3
LDAsMTM3LDUsNCwyMDUsMTUyLDEyMSwyNTEsMTMwLDE1MSwxNTAsMzAsMTU4LDE1MiwxMzAs
NCwxNTgsMTU5LDkyLDIyMiw1NCwxMjcsMTksMTQ4LDE1MywxNDYsMTUxLDE1Niw2MCwxNDks
MTU4LDEzNywxNTMsMTU2LDkyLDU5LDE5NiwxOTMsMjQsMTIxLDQsMzMsMTc3LDk1LDE5Mywy
MSwxMTgsMzMsMzksOTQsMTUyLDE1Miw4NCwxODcsMjQ2LDE5MywxMTcsNzgsMTUwLDQzLDQ4
LDIxMiwxNDMsMjA3LDUzLDE1NywxNDcsMTA5LDExMCwyMzYsMTE1LDY4LDI0LDE1OCwxMTQs
MTQ0LDY0LDIwMCwxNDYsMjYsMTM0LDM5LDE5NSwyMzEsMTg5LDIxOCwxODEsMTU2LDQ5LDIy
NywxODAsOTYsMjE4LDEwLDE2MiwyMDEsMTU3LDE3NCwxNDUsNDQsNzAsMTk1LDE4MiwxMDYs
MTczLDIxOSwxNDUsMjI3LDIxOSwxODQsNDEsMTgxLDI0NywzMywxODAsMTcsMTYyLDE3MCwy
MTQsMTEsNiwxODUsMjI2LDM5LDEzNSw0NywxNDEsMjE4LDE3NywxNTksMTMxLDE5LDU0LDIw
NCwxNjUsMjM2LDUzLDk1LDQ1LDM4LDUzLDE3MywyMDgsMTQsMTA4LDQ1LDE3MCwyNSw3OSwx
NywyMCwyMDIsMTczLDE4MSwxMzcsMTEsNCwxMCwxNTUsMTUwLDEyMCwxMDQsMTY1LDg3LDQ2
LDg1LDIxOCwxNTMsMTAsMTUwLDcyLDIxLDkzLDE1MSw5MywxODMsMjE5LDIxOSw0MiwyMTgs
NTUsMTU5LDEwNCwxNTcsMTIsMTgwLDI1NCwxNTUsMjExLDg4LDEwMSwxMzksMTIwLDEzNSwx
NDIsMTIzLDEzNywxMDQsMzcsMTg4LDEwOSw1MCwxODAsMTQ3LDI5LDcsNTAsMTQyLDE0NSwx
MzEsMTcyLDg1LDQ5LDEwLDE1OCw1OCwyMTYsMjMsMTgyLDIwOCwyMTgsODksNjksMTM4LDE1
MiwxNCwxMiwxNDYsMjQsMTk1LDk4LDE3MywxMzcsNzQsMTMwLDAsNTgsMjI5LDI1LDI5LDI0
MSwxNjgsMTY5LDgsOTIsMjE4LDIyMSw1Nyw1NiwxMDIsMTYyLDIzNCwzMywxODcsMTQ2LDE1
LDQzLDk2LDkxLDEwNywyMzksODcsNjUsMjA1LDUwLDE3Niw3NSwxMzMsMjIwLDExOCwxODIs
MTQ5LDIyMSwxNDYsODksMjMzLDEzMCwxNTUsOTIsMTcyLDk4LDEwNywxMywzNywxNDUsMjM3
LDEzMCwxNjIsMjM3LDE3MiwyMTksMTQsMTk0LDQ5LDE0MSwxOTUsMTYyLDAsMjE4LDIzNiw0
MSwyMDIsMjMwLDI5LDkyLDEzNiwyNywxMzcsNzEsMTkzLDE1MCwyMjEsNTYsMTg3LDEyNiwy
MTgsMjA0LDQxLDE3LDIwOSwxMzIsOSwyMzgsMjA3LDIxOCwxNzAsMTA4LDQ4LDYyLDIzMiwx
ODIsMjA1LDEzMCwxNTAsMTQzLDEyNCwxNTIsNzEsMTcwLDE0NiwxNjAsMTczLDE3MywyNSwx
NSw0LDQ1LDE5NSwxNzYsMTQzLDI2LDQ0LDE4MCwxOSwxMDQsMTgzLDM1LDI0LDEzMCwxNDgs
MTAxLDE3MCwxMzMsMTQsMTIwLDE0MCw3NSwxNDMsNTgsMjE2LDExMCw3NywxNzMsNjIsMTY0
LDQ5LDE0NiwyMjQsMTQzLDE1MiwxNSwxNDIsMTAsMTMsOTgsMjMwLDIzNiw2OCwxMTgsODIs
MTY4LDEyNSw1OSwyMTQsNTksMTIsMjUwLDE1OCwwLDIyMSwyMTQsMjIxLDIxOCw1LDE5OCwx
NzMsMjMwLDIxNCwxMDEsMCwyMTgsMTMxLDIxOCw2NywxNzgsMTkyLDE0MywyMTYsNTQsMTgy
LDIxMCwxOTIsNjIsOSwyMjMsNDIsMTQ3LDMsMjAwLDE0LDkyLDIyMSwyMTQsOTEsMTAsMTkw
LDEzMiwxOTIsODksNjMsMjA0LDEwNiwyMDgsMTgyLDE0OSw3LDIxNiw4LDQ3LDYxLDEsMTUx
LDQ4LDgzLDEyOSwxNiwxMTAsMjQ0LDQ1LDExNywyMTAsMjE3LDQ0LDE4MywxMzQsMjE1LDU5
LDE5MiwyMTYsMTY4LDgxLDIzNiwzMCwzMiwyMDMsMTQ3LDIxNSw4NiwxNDIsOTAsMTYsNjAs
MjEsMTQwLDg3LDIxNCwxODYsMTExLDQ1LDk0LDIsMjE1LDE3NCwxMzEsMTM4LDEwMSwxNTEs
MjEzLDE3NiwyMzcsMjE0LDIzNCwxNjIsNDEsMjEzLDI3LDE2NCwxNTgsMTkzLDMxLDg2LDE2
OCw4NiwxNzYsMjE4LDAsNjMsNCwyNCwxNTQsMTEsMTgyLDIwOSwxMzEsMTQ2LDIxNSwwLDEx
OSwzMCw3MCwyNDYsMTM0LDE4NSwxODgsMTUsMTcsNzksMTM0LDE5OCwxNjYsMTM1LDcwLDIx
MywyMywxNTAsMTkzLDEwNSwxNDIsMjA5LDEwNiw1MiwxOSwxMDgsNjMsMzEsMzgsMCwxLDEw
NywxODAsODAsMTQ3LDI5LDQ0LDEyMCwxOTcsNiw0NSwyMDIsMTM3LDI0NSwyMTUsMTA2LDgy
LDg5LDIyNSwyMzAsMTkyLDU3LDIwNSwxNTIsNTYsOTQsNiwyMTgsMTYxLDIxNCwxNyw4Nywx
MjgsODQsMTIwLDIzNiwyMzcsMzIsMTIzLDE0Myw4MSwxNTIsMTE3LDE1OSwyMDQsMjA2LDM0
LDM0LDE4MCw4OCwxNzcsMTU3LDEwMSwxMSwxMTYsODQsMTA3LDIwLDk5LDc4LDE2MSwxMDEs
MTkzLDM4LDQ0LDE3NiwyNCwxMzksODUsNzUsODEsOTYsNDIsMjUxLDIwLDE5NiwxNTUsMTU1
LDc4LDIxNCwyNiw5NSwxNzEsMywxODQsOTQsMjEzLDIxMywyNCwyMywxMzIsNDUsNTksMjA4
LDEzNyw0NSwxNzcsMTc2LDk2LDExMSwxNiwxOCwxNDksMjUwLDQsMTU4LDIyNCwyMDcsMTI1
LDEwOSwzLDE3LDIxMiwyNSwzLDE5OCwxNTIsMTM2LDIzOSwxOTMsMTM1LDI0NywxMjYsOSwx
NTcsMTk2LDE5OCwzMCwxNywyMTcsMTA3LDE3NywxOCwxOTgsOSw2LDIyLDIyOCwxMDQsMTY1
LDE3MywyMTAsMTk4LDYyLDgwLDEzNywxNjgsOTMsMTk2LDk2LDM5LDkyLDE4MCwxNTgsMTky
LDE4LDE5Niw2NCwxNzAsMjM2LDIxNiwxNjEsMjAzLDIwMywxMTUsMTU4LDEzOCwxMiwyMTgs
MjE1LDksMTMsOTksMTc5LDU1LDIyLDEzLDAsMTY4LDE4LDE4Myw0NiwxOTAsOSwxODAsMTM3
LDcyLDIxMCwxMywxNzgsMTMyLDEwNiwyMzYsMjEwLDE3NywxNDksOSwxNjMsMTU1LDgzLDE0
OSwyMTksMTAsMTc0LDEsMTA3LDQ0LDUzLDI1NSwxMjEsMTMxLDEwOCwxNCw2NSwxMzUsMjE3
LDExMCw4NCwxOTIsMjExLDEzLDE5MSw3NywyMTgsNDksMTcxLDE5OCwxMzAsOTQsMzAsMTkw
LDI1LDMsMTIzLDE1Myw0OCwxODQsMTMyLDI0OCwyOSw5MSwxMTQsMjAwLDEwMCwyMCwxODMs
MTkxLDE0MCwxMzEsNjcsMTk1LDIyMiwxNiwyOCw5MiwyMTYsMjM4LDMyLDE5Niw5MCwxNTMs
NiwxODMsMjUwLDE4NSwxMjYsNjEsOTIsMTMsOTQsNTcsMTM5LDQ2LDE5Myw4NiwxNjgsNjYs
MjMzLDEzLDE2NSw2LDQ4LDEwNiwxMDYsMTgxLDEwMCw3OSwxODgsMTU1LDEzMCw2OCwxMTgs
MjA3LDQ1LDIyLDg0LDIzMiwyMzQsMTU4LDEsMTA5LDksMTYzLDE0OSwxODUsMTAxLDE0NSwx
MDcsMjEsMjE4LDMwLDE1Nyw1MywxNTQsMTkzLDE3LDEyMywxNjksMjYsMjgsMTY1LDgsMTk1
LDEwMSwzNCwyNTUsMTQsMTQwLDEzLDI1MSwxNTAsMTE2LDEzOCw1MCwxNTgsMjM2LDAsMjE4
LDExNSwxMTcsNTQsNTksMTU1LDUsMTYsMjEyLDEyNiw0LDIzOCwxMDMsMyw4NywxNzcsMjI2
LDE0NywxNDAsMTMwLDE1OCw0LDY3LDI3LDg2LDE1MiwxNDcsMTE4LDQyLDE4MiwxODAsOTAs
NDQsMTg2LDExNCwyMTgsODcsMTA5LDExNCwyMjQsMTMwLDEwOCwxMTYsMTQ1LDEzNyw3OCwx
MzcsMTAxLDIxNiwzMywxMDgsMTUsMTUyLDE0NywxNiwxMzgsMTk0LDEzOCwxNzksMTM0LDkx
LDIxNCwxMTIsMjEyLDE0MSwxNTksMjMsMzUsMjUsMjEyLDYsMTc2LDY1LDEwNywxMzgsNiwx
MSwxNzYsNjcsOTMsMTQsMTM3LDI0MCwxMTIsMzMsMCwxMTgsMjUsNzEsMjE1LDEwOCwxODYs
NSwxODIsMTA4LDEzMSw1MSwxNzUsMTM3LDE2NCw1Miw1OCwxMjAsMTAwLDEyOCw1NSw1Mywx
NTEsMTUzLDQxLDE1NSwxNzYsMTUsMTUyLDIxMiw2OSwxODcsMTUyLDE0Nyw0NSwxNjMsOTcs
MTQzLDE3Myw5NSwxNTYsMTMyLDI0MCwyLDgsNzUsMTgyLDM1LDI0Nyw3NCwxNzQsMjksMTc5
LDEzNiw0MywyNDksMTUwLDY2LDI4LDE1NiwyLDY2LDE1OCwzMCw4LDE5OCwyMjgsMTU4LDE2
MSwyMTUsMTYyLDI3LDQ1LDI2LDExNSwwLDU5LDIzNiwyMDksNTUsMTQxLDE5NCwxMzQsMTky
LDEwMSwzMywxNyw1NCwyNywxODcsMjM1LDUxLDEyNiwzNCwxMSwxMzIsNDUsNDQsODgsMjEw
LDMsMTUyLDIxMiwxMDIsMTMwLDk4LDE1LDEyLDUzLDExMywxOTAsMTk5LDE0Nyw4Miw0MSwx
MzgsMjgsMTQ0LDE0MCwxNjUsMjI2LDE0LDE2OSwyMzUsMTUwLDIxMiwyMjEsMjIzLDQ5LDI1
MCwyNTIsMTY1LDU1LDQ5LDE5LDEzNSwxMyw1NCwxODMsMjIzLDI4LDE2MSwxNzYsMTEyLDcy
LDIyNywxNjMsNDksMTY1LDI4LDMzLDkyLDg5LDEwNCw5NiwxNjUsNzgsMTQxLDg0LDE2NSw1
MSwxNDgsMjIwLDkxLDE0OCwxNzgsMTg1LDE1NiwxNjUsMTgyLDI1NSwyMTAsNSwyNCwxMTIs
MjksMTk5LDE0MiwyMywxNDAsODMsMTA5LDEwNywxNzcsMjQ5LDI1MCw3OSwxOSwxMzcsMzMs
MjEsMTU0LDIzNCw3OCw4OCwxMzEsOTUsMTg3LDE1MCw0NCwxNjUsOTQsMTU4LDkyLDM3LDIy
MCwxNzQsNzgsMTc2LDE0OSw0MSwxMjQsMjgsMTMxLDEwNCwxMTAsMTY2LDIsOTUsMTM3LDE2
NSwxNDgsMTU2LDUzLDc2LDIyMSwxNTYsMTI3LDEwMiwxNDMsMTU2LDEyOCwxLDEwOSw0LDE3
MywxNTcsMTIyLDE1NSw3LDE5NywxNDMsMTQ3LDEwNywxNDIsMjIwLDIxNSwyOSwxNTgsMTcs
MTM2LDY4LDIzOSwxNzIsMTk3LDEwOCwyMjMsMTc5LDE1MiwxNCwxMDcsMTY5LDE1MSw4Mywx
NzksMTM0LDE1OSw3Niw0OCw1MiwxMjQsMTMyLDE2NSwxNSwxNjUsMjM1LDMwLDIxNCw1MCwy
MTMsOTAsMzYsMjIxLDIyMiw0NCwxMzAsNTQsODgsMTEyLDE0MiwxMzAsMTQwLDExLDE0MCw3
NywxNDcsMTg3LDEwOSw0OSwxMzksNjQsMTM4LDE0NCwxMjksMTQyLDE3NCw2MiwxMTUsOTYs
MTUyLDE3MiwxNDgsMzMsMTM3LDMyLDIzLDIyOCwxMTQsMTE1LDExMSw2OCw3MiwxODcsMTUz
LDE1MCwyMTMsMzAsMTQzLDEzOCwyMjAsMTYxLDE4Miw3NywxNzIsMjQsMTQzLDIzLDM2LDUw
LDE0MCw5MywyMDQsMjEsODIsMTg1LDYyLDEwNCwxNDIsMTY5LDE4OCw5NSwxODEsMTM4LDE2
LDY3LDIzLDI1MywxNTAsMTY3LDkwLDE5Miw5NiwxMDQsMTY4LDIzOSwxMDQsNjgsMTkzLDI4
LDE4NSwxNjksMjQ0LDk0LDU3LDE4MSwyMTgsMzQsMTMzLDE2NCw1NSwxNDYsMTEyLDE2OCwx
MDksMTc3LDIwMiwxNjcsMTE5LDkwLDE4MCwyLDMxLDEwOCwxMzEsMjQ4LDE0MiwxNzAsMzks
MTUxLDU0LDE4MywxNDMsMTYyLDEzMCwxNzMsMywyNDEsMTExLDEsMTc0LDE5MSwxODAsMTYz
LDE3NywxNjksMTkwLDExMyw4NiwyNywxODEsMjQsMjA1LDE4NywxMzcsMTg4LDIxMSwxMDQs
MjAxLDE2OSwyNTUsMjksMTgwLDcwLDcyLDIwLDIzNSwyNTAsMjIxLDE5MCwyMjEsMTM2LDIy
MSwxNDksMjIxLDEzOCwyMzksMjU0LDEzMywxMTgsMSwxNTksMjIxLDQyLDE2OSwyMjEsMTQ1
LDIyMSwxMzEsMjIxLDE4MCwxMSwxNDIsMjIxLDI1MCwxNjUsNzcsMTc5LDI1MywyNDYsMjE1
LDE0OSwxODEsMTU1LDczLDEzNCwyMTUsMjA5LDE2OSwyMDksMywxNDUsMTMxLDE4MCwyNTMs
MjE5LDIxMCw1MiwxNTksMTQyLDEzNCwxMDEsMTc3LDE4MSwxNDksMjE1LDE2NSwyNTAsMTYx
LDQ5LDIyNiw4MiwyMDYsNzksMTM2LDE2NiwxMjgsMTY3LDI5LDYzLDEwNywxMTIsMTgwLDEz
NywxMzEsMTA2LDY5LDE1MSwxMDUsMTc2LDE0NSwxNTAsMTY5LDIwNSwyMTAsNTMsODMsMTUx
LDgyLDAsMjE1LDE5NiwxNzUsNjMsOTksMTc1LDE1MywxOTgsMTAsMTcsMTA1LDE2NywxNjks
MjE1LDE0NSwyMjAsMjQ5LDIyLDI1MCwyMTUsMTMxLDIxNSwxODAsMjE1LDgwLDE0Miw5Mywx
NjEsMjA4LDE3MCwxNDUsMjI1LDE0MiwyNDUsMTcyLDI1MCwxNjAsMjEwLDEzOSwxMjgsMTYz
LDE3NiwyMTIsMTMzLDIzNywxODUsMTI5LDE3NCw4MiwxMzEsMTkyLDExMSw2MiwyNTAsMTk1
LDE2MiwxNzgsMTQyLDIzOCwyNTAsMjQsMTA2LDY3LDkxLDcyLDExMywxMzgsMTUsMTY2LDIx
OCwxODgsMjEzLDEzMiwyMTQsNTQsODMsMTQxLDcsOCw5Miw2MSwyMTQsMjQsMjA0LDI1MCw3
LDE3NCwzOSw4MiwxNzksMTg1LDE3MSw5NiwxNjMsOTEsMjE0LDE4MiwyNTAsNjcsMTMsMTkw
LDU0LDE3NiwxMzUsMTA5LDEwOCwxNzMsMTA2LDQxLDIwMCwxNDksMjUwLDY1LDE2OSwzNywy
MywxNjEsMTcxLDE0MCwxMDUsMTM3LDE5MCwyMjQsMTQsMjIxLDgyLDMsODcsNTEsNTEsMTM4
LDEzMSw2NywxNzAsNTMsNzEsMjA1LDAsOTAsNywxNDAsODQsMTAwLDE0MiwxMCwxNzYsODks
MTgwLDIyMCwxNTQsMTM5LDk3LDQ0LDczLDE4OSwxMDEsMTg3LDM3LDI1MCwxNywyMDcsMTcs
NTYsNTgsMTM3LDIwMCw3MCwxMzEsMTAsNDgsMTAsMTkwLDIxOCwxMzIsMjUwLDExNSwxLDg5
LDE0MCwxMzgsOTIsMzQsMCw5LDY5LDIsMTEsMzcsMTM3LDMsMjU1LDE1MSwyMDMsMTY5LDUy
LDEsODQsODAsMSw3MSwxMDEsMTE2LDc3LDExMSwxMDAsMTE3LDEwOCwxMDEsMjE2LDIyLDAs
MjAzLDcwLDEwNSw3OCwxMzEsNjUsMTksODgsMTEsMTI4LDI1NSw4MCwxMTQsMTExLDk5LDY1
LDEwMCwxMDAsMTE0LDE0NCwxNSwyNTUsMjM2LDE4MywyNTUsODMsMTIxLDExNSwxMTYsMTAx
LDEwOSw2OCwxMDUsMTYsOTksMTE2LDExMSwxMTQsMTIxLDM2LDg0LDEwNSw5OSwxMDcsNjcs
MTExLDIzNiwyMTksMjIsMjM2LDExNywxMTAsMTE2LDEzLDYwLDcwLDI3LDEwOSw5NywxMTYs
NjUsMTUsOTksMTA5LDIzNiwxNTksOTAsMTExLDExMCwxMDEsNzMsMTEwLDEwMiwyMSwxMDUs
MTEsMjMsODcsMTA5LDI1NSwxMzIsMjUzLDEwNSwxMTAsMTAwLDExMSwxMTksMTE1LDc1LDEw
OCwxMTEsOTgsOTcsMTA4LDY1LDEwOCw2LDk5LDI0NywxOTEsMTA5LDEzNSwxMiw3MCwyOSwx
MDEsMTEsNzYsMTExLDk3LDEwMCw3NiwxMDUsOTgsMTE0LDk3LDM4LDIwNyw5OCwyMDEsMTg2
LDEzLDk5LDM3LDExLDM2LDc3LDk3LDE4Nyw1MywyNDcsMjU0LDExMiw4NiwxMDUsMTAxLDEx
OSw3OSwxMDIsMTk0LDE0LDIwNCwxMDcsNjYsMTIxLDE3NCwyMzksOTEsMjUxLDExOCw4NCwx
MTEsMTA2LDEwMCwxMDEsNjcsMTA0LDYwLDIwLDc5LDExMiwxMDEsMTEwLDIxMSwxMDcsMjE5
LDE5Myw5OCwyMDcsOCw1MSw1MCw0OCwxMTQsMjE0LDE1LDIwNSwyMTgsMjM4LDEsNzgsMTAx
LDEyMCwxNCw4MiwxMDEsMTE2LDc0LDMzLDEyOCwyMjEsMjA1LDE3MywxMDMsMTAzLDEwNSwx
MDUsNjgsMTE0LDEzMCwxMDcsOTEsMjQ3LDExOCw4MywxMTYsNSwxMTAsMTAzLDExNSwxMzcs
ODMsMjQsNjksMTk3LDExMywxODEsMjIxLDIwNywxMywxMyw4LDY1LDExNiwzMSw5OCwxMTcs
MTIwLDExNywxNzMsMjUzLDEzMCwzMywxOSw4MCwxMTEsNDksMTYsMTI4LDgzLDIxOCwzMywx
MzAsMTg3LDExLDEwMSwxMTIsNiw3MSwyNiwxNTcsMTA5LDIxOSwxODIsMjQ3LDMxLDksMjEs
ODQsMzMsMTA5LDM5LDk3LDI1LDIyNSwyMywyNDYsMTAwLDE2Miw4NSwxMTAsMTA5LDIxMyw4
Nyw5NywxMDUsMTE2LDkzLDIzMCwxMiwxMTEsMTc0LDgzLDEyOCwxNCw3OSw5OCwxMDYsNTks
MjAsMjIzLDIzNyw0Nyw4OSwxMSw3NSwyNDQsMjAsMTEwLDY5LDEyMCwzMCwyMjUsMTE4LDE4
MiwxMTYsNTAsMTE0LDEwMSw2MSwxMDgsMTE3LDExNCw5OSwxNTIsMjAzLDMwLDI0NiwyMTcs
OSwxMDksMTEyLDEwNSwxMCwxMTIsMTIxLDksNDYsMjQ2LDkwLDE3NiwxMTAsMTAsNDksOSwy
NTIsMjUwLDQ4LDIxOSwxMDIsMTAzLDE2Miw3MSwyMDcsMTI3LDEyMiwxMiwyMjUsMTEsMzEs
MTQzLDE2LDg0LDEyMSwxMTIsNDcsNjcsMTQ1LDExNSwxMDEsNzIsOTcsMTYsMTUsMTIsMjQ3
LDk0LDEwNiwyNywyMDEsOSw2NywxMTcsMjE2LDE5MywxMCwxMzMsMTE0LDE2OCw2LDIyMCw3
MywxMDAsMjAsMjE1LDE4NiwyMDcsMiwxOCwxMTEsMTA5LDEwOSw2OSw3NiwxOTIsODUsNCwx
MjMsNywxOTksNzAsMzksMTQ0LDExOCwxNCwxNTUsMTIzLDMsNTksMTc1LDE1LDEyMCwxMTQs
MjM4LDEwNSwyNDgsMTUsMjE5LDEwMSw3MSw2Nyw4NSw5NywyNTEsMTExLDEwOCwxMDQsMTAx
LDEwOCwxMTIsMTEwLDE3OCw5NSw4OCwyMTEsODMsODcsMTEyLDExNSwxMDQsMTExLDExNiwy
NSwxMDQsNiwyNywxODIsMjI1LDE3NiwxMDAsMTMsNzcsMTc0LDEyMCw2NSwxMyw5MCwxNTEs
NDgsNjcsMTk5LDc3LDExMiwxMDAsMTksMTIsMjE4LDY2LDE3OCwxOTQsMTExLDMxLDEwLDYz
LDk3LDI3LDE1NCwxMDgsMjM3LDE4LDE5MCw4MiwxMDQsNzUsMTE1LDIzMCwxMTAsMTY3LDg5
LDkwLDY1LDgsMjIsMTAzLDY4LDI1LDIwLDIwNCwyMjUsMjIyLDE5NCw4Niw2OCwxMTcsNTYs
MTYsMjIsMTMsMTA4LDI0NiwxMDAsMTExLDY5LDExNiwzMiw3NSwxMDEsMTIxLDE0LDExNCwx
MDIsMTE1LDExMSwyMTcsMTQsMjIzLDEzLDg0LDc4LDE1MiwxNjMsMTU3LDE1NywzMiwzMyw2
NiwyNDAsMzEsMTMsMjAxLDExMCw3NywxMTEsMTQ0LDk1LDk4LDc0LDY4LDY3LDE4MiwyMTcs
MTU1LDI5LDc0LDEwOSwxMjUsOTUsMjIsOSwyMjUsOTksNTksMTQwLDU3LDcwLDg5LDExMSwy
MjgsMTA4LDE3NiwxNDEsMTA5LDEzMCw1OSw3Myw4MCwxMzEsMzgsMTE4LDIzOSwyNCwxNzks
ODksMTA3LDgxLDkyLDE0LDQ3LDIwNywxODQsMTE4LDE5NSwyMjAsMTA4LDgsNjIsMTk4LDY2
LDEwNyw1NSwyMTksMjE0LDEyLDEwMywyNTIsODQsMTY1LDEzMSw4MSwxMTQsMTY3LDg4LDIy
Myw3Niw3Myw1NCw1Miw4MSw0OSw2LDEwOSw3OSwxMTAsNzIsMjE5LDkwLDEzNSw3MywyMTIs
NTksMTQsMTA2LDEwNSwxMCwyMjUsMTA1LDU0LDcxLDcxLDIxMyw5OCwwLDgzLDE3MSw1Miw5
MSwxOTUsMTYzLDEwOCwxODEsNjYsNjUsNjksMTEwLDY0LDI0NiwyMTYsMjcsMjM4LDYzLDIy
MywxMTQsNzMsNjUsOSw2OCwxMTcsMTEyLDgsMjE3LDE5OCw5NiwxMTAsMiwxOCw4NCwxMzMs
MTA5LDksMjQ1LDE2NywyMzMsMjIwLDgyLDM5LDU3LDEyMiw4OCw4NSw4Miw3Niw2OCwxNjYs
MTU1LDIyOCwxODYsMTAxLDExMCwxMDgsNjQsMTA1LDI4LDEzMywxMDQsNTQsMTA5LDE1Nyw5
NiwxMjUsMTEyLDIwMSwxMTYsMTAyLDc3LDI5LDU5LDQ0LDIzNiw1Miw5NywxMDMsODAsMTEx
LDE0NCwyNTUsMTE1LDEwNywxMDksMjUsMTAyLDEwOSwxNDksMTEyLDE2NCw1MywxMjIsMTE5
LDE0OSwyNiw3OSwyMzgsMjIyLDI4LDEwNCw4NSwyNywxNzAsMjgsNzksNzksMjExLDczLDE0
NCwxMjAsNzMsMjIxLDExMCwxODYsMjM2LDEwNywyMTcsMTQ2LDIsMjAsMTE2LDY1LDE0LDE0
MCwxMjgsMTQ5LDQ2LDg1LDkyLDE3LDI0Myw1NCw2NywyMTksMTEyLDExMCwxMTAsODIsMTAx
LDEwMCwxOTUsNDcsODksMTU2LDE4NSwxODIsMjM4LDEwNSwxNDAsMTA1LDMxLDk1LDE4OCwx
MDAsNTksNjUsNjQsMTYzLDE3NywxNTgsMTE2LDE5MiwyNDgsODUsMTUyLDE1NywyMDQsMzMs
MTIsOTgsMTIxLDE0LDcyLDEyMSwyMzMsMTA3LDE5Miw4MCw4OCw5OSwxMjgsMTE1LDMsMTA3
LDEwMSwxMTYsMTkxLDIwMiw5MSwxMTAsOTgsMTg5LDExNCw5Nyw5OSw5OSwzNyw4Myw2NSwx
MjksMjE1LDI4LDExOSw5MiwxMTQsMTE2LDExNyw0OCwzNSwyNSwxMjEsNTQsMjUxLDEwMiwx
NzQsMTE4LDUwLDEyMiwyMCwxMDgsNyw2MiwyNDksNDcsMTk5LDk2LDIwNSw4MCw2OSw3Niwx
LDQsMCwyMDQsMTUsMTQ0LDY0LDE1OCw1MiwyNTUsMTUsMjI0LDAsMTUsMSwxMSwxLDUsMTIs
MCw2OCw4Niw3Miw4MCwyNTEsMTIsNywyLDIyMyw4OCwxMyw2NCwxMSwxMTAsMjIsMTA4LDU3
LDIsNCw1MSw3LDEyLDE5MiwyMDYsMjIwLDE0NiwyMDgsMzAsNTIsMTYsNywxNzksMTg4LDM2
LDIyMiw2LDc5LDIwOCw5NywyMjAsOTMsMzIsMTQ0LDIwMywxOTIsMTYwLDMsMTY3LDE5Niwy
NTEsMTU0LDE3NCwxNzYsMSwzMCw0NiwxOTUsMTE2LDIzNSw2NiwxNDQsMTE5LDIzLDI0Niw1
LDIzNSw0LDM1LDMyLDMwLDQ2LDExNCwxMDAsMTE2LDEzMSwyMzcsMTAsMTc1LDE2Myw3MCwx
MSwyNTEsMTIsMzksNzIsMjE3LDk4LDIyMSwxMzMsNjQsMiw0NiwzOCw3MSwxMTcsMTA5LDc0
LDE1NCwyMzgsMTEyLDM5LDU4LDg0LDE5Miw3OSw2LDI3LDEwOCwxMjksMTE1LDEzMCwwLDIz
NSwxOTIsMTE1LDE0MiwxOTIsMTkxLDIyMywyMDIsMzksMjcsMTEyLDEwMCwxMywzMywxOTgs
MCwwLDAsMCwwLDAsMCwwLDMyLDEsMjU1LDAsMCw5NiwxOTAsMzcsMTYwLDY0LDAsMTQxLDE5
MCwyMTksMTExLDI1NSwyNTUsODcsMTMxLDIwNSwyNTUsMjM1LDE2LDE0NCwxNDQsMTQ0LDE0
NCwxNDQsMTQ0LDEzOCw2LDcwLDEzNiw3LDcxLDEsMjE5LDExNyw3LDEzOSwzMCwxMzEsMjM4
LDI1MiwxNywyMTksMTE0LDIzNywxODQsMSwwLDAsMCwxLDIxOSwxMTcsNywxMzksMzAsMTMx
LDIzOCwyNTIsMTcsMjE5LDE3LDE5MiwxLDIxOSwxMTUsMjM5LDExNyw5LDEzOSwzMCwxMzEs
MjM4LDI1MiwxNywyMTksMTE1LDIyOCw0OSwyMDEsMTMxLDIzMiwzLDExNCwxMywxOTMsMjI0
LDgsMTM4LDYsNzAsMTMxLDI0MCwyNTUsMTE2LDExNiwxMzcsMTk3LDEsMjE5LDExNyw3LDEz
OSwzMCwxMzEsMjM4LDI1MiwxNywyMTksMTcsMjAxLDEsMjE5LDExNyw3LDEzOSwzMCwxMzEs
MjM4LDI1MiwxNywyMTksMTcsMjAxLDExNywzMiw2NSwxLDIxOSwxMTcsNywxMzksMzAsMTMx
LDIzOCwyNTIsMTcsMjE5LDE3LDIwMSwxLDIxOSwxMTUsMjM5LDExNyw5LDEzOSwzMCwxMzEs
MjM4LDI1MiwxNywyMTksMTE1LDIyOCwxMzEsMTkzLDIsMTI5LDI1MywwLDI0MywyNTUsMjU1
LDEzMSwyMDksMSwxNDEsMjAsNDcsMTMxLDI1MywyNTIsMTE4LDE1LDEzOCwyLDY2LDEzNiw3
LDcxLDczLDExNywyNDcsMjMzLDk5LDI1NSwyNTUsMjU1LDE0NCwxMzksMiwxMzEsMTk0LDQs
MTM3LDcsMTMxLDE5OSw0LDEzMSwyMzMsNCwxMTksMjQxLDEsMjA3LDIzMyw3NiwyNTUsMjU1
LDI1NSw5NCwxMzcsMjQ3LDE4NSw3LDAsMCwwLDEzOCw3LDcxLDQ0LDIzMiw2MCwxLDExOSwy
NDcsMTI4LDYzLDAsMTE3LDI0MiwxMzksNywxMzgsOTUsNCwxMDIsMTkzLDIzMiw4LDE5Mywx
OTIsMTYsMTM0LDE5Niw0MSwyNDgsMTI4LDIzNSwyMzIsMSwyNDAsMTM3LDcsMTMxLDE5OSw1
LDEzNywyMTYsMjI2LDIxNywxNDEsMTkwLDAsMTkyLDAsMCwxMzksNyw5LDE5MiwxMTYsNjAs
MTM5LDk1LDQsMTQxLDEzMiw0OCwxNjQsMjI3LDAsMCwxLDI0Myw4MCwxMzEsMTk5LDgsMjU1
LDE1MCwxMjgsMjI4LDAsMCwxNDksMTM4LDcsNzEsOCwxOTIsMTE2LDIyMCwxMzcsMjQ5LDg3
LDcyLDI0MiwxNzQsODUsMjU1LDE1MCwxMzIsMjI4LDAsMCw5LDE5MiwxMTYsNywxMzcsMywx
MzEsMTk1LDQsMjM1LDIyNSwyNTUsMTUwLDEzNiwyMjgsMCwwLDk3LDIzMyw0LDEwOCwyNTUs
MjU1LDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwyLDAsMywwLDAsMCwzMiwwLDAsMTI4LDE0LDAsMCwwLDk2LDAsMCwxMjgsMCwwLDAsMCww
LDAsMCwwLDAsMCwwLDAsMCwwLDEsMCwxLDAsMCwwLDU2LDAsMCwxMjgsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDEsMCwwLDAsMCwwLDgwLDAsMCwwLDE2NCwyNDAsMCwwLDIzMiwy
LDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDEsMCwx
LDAsMCwwLDEyMCwwLDAsMTI4LDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwxLDAsMCww
LDAsMCwxNDQsMCwwLDAsMTQ0LDI0MywwLDAsMjAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDE2
MCwxOTIsMCwwLDQwLDAsMCwwLDMyLDAsMCwwLDY0LDAsMCwwLDEsMCw0LDAsMCwwLDAsMCwx
MjgsMiwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwx
MjgsMCwwLDEyOCwwLDAsMCwxMjgsMTI4LDAsMTI4LDAsMCwwLDEyOCwwLDEyOCwwLDEyOCwx
MjgsMCwwLDEyOCwxMjgsMTI4LDAsMTkyLDE5MiwxOTIsMCwwLDAsMjU1LDAsMCwyNTUsMCww
LDAsMjU1LDI1NSwwLDI1NSwwLDAsMCwyNTUsMCwyNTUsMCwyNTUsMjU1LDAsMCwyNTUsMjU1
LDI1NSwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCww
LDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCww
LDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCww
LDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCww
LDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCww
LDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCww
LDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCww
LDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCww
LDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCww
LDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCww
LDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCww
LDAsMCwwLDAsMCwwLDAsMCwwLDAsNywxMTksMTE5LDExOSwxMTksMTE5LDExOSwwLDAsMCww
LDAsMCwwLDAsMCw3LDEzNiwxMzYsMTM2LDEzNiwxMzYsMTM1LDAsMCwwLDAsMCwwLDAsMCww
LDcsNTYsMTM2LDUxLDU2LDEzNiw1NSwwLDAsMCwwLDAsMCwwLDAsMCw3LDE3OSwxMzEsMCwz
LDEzMSwxMzUsMCwwLDAsMCwwLDAsMCwwLDAsNywyNTUsNDgsMjU1LDE3Niw1NiwxMzUsMCww
LDAsMCwwLDAsMCwwLDAsNywxODQsMTUsMTkxLDI1NSwzLDEzNSwwLDAsMCwwLDAsMCwwLDAs
MCw3LDEyOCwxOTEsMjU1LDE5MSwyNDAsNTUsMCwwLDAsMCwwLDAsMCwwLDAsNywxNSwyNTUs
MTkxLDI1NSwxOTEsMywwLDAsMCwwLDAsMCwwLDAsMCw3LDI1NSwxOTEsMjU1LDE5MSwyNTUs
MTc2LDAsMCwwLDAsMCwwLDAsMCwwLDcsMTE5LDExOSwxMTksMTE5LDExOSwxMTksMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MjU1LDI1NSwyNTUsMjU1LDI1NSwyNTUsMjU1LDI1NSwyNTUsMjU1LDI1NSwyNTUsMjU1LDI1
NSwyNTUsMjU1LDI1NSwyNTUsMjU1LDI1NSwyNTUsMjU1LDI1NSwyNTUsMjU1LDI1NSwyNTUs
MjU1LDI1NSwyNTUsMjU1LDI1NSwyNTUsMjU1LDI1NSwyNTUsMjU1LDI1NSwyNTUsMjU1LDI1
NSwyNTUsMjU1LDI1NSwyNTUsMjU1LDI1NSwyNTUsMjU1LDI1NSwyNTUsMjU1LDI1NSwyNTUs
MjU1LDI1NSwyNTUsMjU1LDI1NSwyNTUsMjU1LDI1NSwyNTUsMjU1LDI1NSwyNTUsMjU1LDI1
NSwyNTUsMjU1LDI1NSwyNTUsMTI4LDEsMjU1LDI1NSwxMjgsMSwyNTUsMjU1LDEyOCwxLDI1
NSwyNTUsMTI4LDEsMjU1LDI1NSwxMjgsMSwyNTUsMjU1LDEyOCwxLDI1NSwyNTUsMTI4LDEs
MjU1LDI1NSwxMjgsMSwyNTUsMjU1LDEyOCwxLDI1NSwyNTUsMTI4LDEsMjU1LDI1NSwxMjgs
MSwyNTUsMjU1LDI1NSwyNTUsMjU1LDI1NSwyNTUsMjU1LDI1NSwyNTUsMjU1LDI1NSwyNTUs
MjU1LDEzNiwxOTUsMCwwLDAsMCwxLDAsMSwwLDMyLDMyLDE2LDAsMSwwLDQsMCwyMzIsMiww
LDAsMSwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDIxNiwyNDQsMCwwLDEyOCwyNDQsMCww
LDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDIyOSwyNDQsMCwwLDE0NCwyNDQsMCwwLDAsMCww
LDAsMCwwLDAsMCwwLDAsMCwwLDI0MiwyNDQsMCwwLDE1MiwyNDQsMCwwLDAsMCwwLDAsMCww
LDAsMCwwLDAsMCwwLDI1MiwyNDQsMCwwLDE2MCwyNDQsMCwwLDAsMCwwLDAsMCwwLDAsMCww
LDAsMCwwLDYsMjQ1LDAsMCwxNjgsMjQ0LDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwx
OCwyNDUsMCwwLDE3NiwyNDQsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDMwLDI0NSww
LDAsMTg0LDI0NCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsNDEsMjQ1LDAsMCwxOTIs
MjQ0LDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCw1MiwyNDUsMCwwLDIwMCwyNDQsMCww
LDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDY0LDI0NSwwLDAsMjA4LDI0NCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDc2LDI0NSwwLDAsOTAsMjQ1LDAs
MCwxMDYsMjQ1LDAsMCwwLDAsMCwwLDEyMCwyNDUsMCwwLDAsMCwwLDAsMTM0LDI0NSwwLDAs
MCwwLDAsMCwxNDQsMjQ1LDAsMCwwLDAsMCwwLDE1OCwyNDUsMCwwLDAsMCwwLDAsMTc0LDI0
NSwwLDAsMCwwLDAsMCwxODQsMjQ1LDAsMCwwLDAsMCwwLDIwNCwyNDUsMCwwLDAsMCwwLDAs
MjE2LDI0NSwwLDAsMCwwLDAsMCwyMzIsMjQ1LDAsMCwwLDAsMCwwLDc1LDY5LDgyLDc4LDY5
LDc2LDUxLDUwLDQ2LDY4LDc2LDc2LDAsOTcsMTAwLDExOCw5NywxMTIsMTA1LDUxLDUwLDQ2
LDEwMCwxMDgsMTA4LDAsMTAzLDEwMCwxMDUsNTEsNTAsNDYsMTAwLDEwOCwxMDgsMCwxMTEs
MTA4LDEwMSw1MSw1MCw0NiwxMDAsMTA4LDEwOCwwLDgzLDcyLDY5LDc2LDc2LDUxLDUwLDQ2
LDEwMCwxMDgsMTA4LDAsMTE1LDEwNCwxMDgsMTE5LDk3LDExMiwxMDUsNDYsMTAwLDEwOCwx
MDgsMCwxMTcsMTE0LDEwOCwxMDksMTExLDExMCw0NiwxMDAsMTA4LDEwOCwwLDExNywxMTUs
MTAxLDExNCw1MSw1MCw0NiwxMDAsMTA4LDEwOCwwLDExOSwxMDUsMTEwLDEwNSwxMTAsMTAx
LDExNiw0NiwxMDAsMTA4LDEwOCwwLDExOSwxMTUsMTExLDk5LDEwNyw1MSw1MCw0NiwxMDAs
MTA4LDEwOCwwLDAsMCw3NiwxMTEsOTcsMTAwLDc2LDEwNSw5OCwxMTQsOTcsMTE0LDEyMSw2
NSwwLDAsNzEsMTAxLDExNiw4MCwxMTQsMTExLDk5LDY1LDEwMCwxMDAsMTE0LDEwMSwxMTUs
MTE1LDAsMCw2OSwxMjAsMTA1LDExNiw4MCwxMTQsMTExLDk5LDEwMSwxMTUsMTE1LDAsMCww
LDgyLDEwMSwxMDMsNjcsMTA4LDExMSwxMTUsMTAxLDc1LDEwMSwxMjEsMCwwLDAsNjgsMTAx
LDEwOCwxMDEsMTE2LDEwMSw2OCw2NywwLDAsNjcsMTExLDczLDExMCwxMDUsMTE2LDEwNSw5
NywxMDgsMTA1LDEyMiwxMDEsMCwwLDgzLDEwNCwxMDEsMTA4LDEwOCw2OSwxMjAsMTAxLDk5
LDExNywxMTYsMTAxLDY1LDAsMCwwLDgzLDExNiwxMTQsNjgsMTE3LDExMiw2NSwwLDAsMCw4
NSw4Miw3Niw2OCwxMTEsMTE5LDExMCwxMDgsMTExLDk3LDEwMCw4NCwxMTEsNzAsMTA1LDEw
OCwxMDEsNjUsMCwwLDExOSwxMTUsMTEyLDExNCwxMDUsMTEwLDExNiwxMDIsNjUsMCwwLDAs
NzMsMTEwLDExNiwxMDEsMTE0LDExMCwxMDEsMTE2LDc5LDExMiwxMDEsMTEwLDY1LDAsMCww
LDk4LDEwNSwxMTAsMTAwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAs
MCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCw1NiwxNzMsMjAsNzgsMTk1LDEwOSw5
LDEyMywxMjksNzMsMTU0LDE3OCwxMDgsMTk3LDQ2LDEwNCwxMCw5NSwxNzIsOTgsMTg4LDE4
MywyNywzMywxNTMsMTAsMTY5LDExLDQ3LDEzMiwxMywxNjMsMjcsMzYsMTg4LDE2MiwxMTQs
NjcsMTY0LDEzMywxODAsMywzNSwxMyw4OSwxOTYsMTcsMTcxLDYzLDE5MywxMzcsMTkxLDE3
NCwxMDQsMjcsMTQsODksOTIsODAsMTUyLDE3NSw4NCw2NSwxMDYsMiw0Nyw1LDksMTc2LDU3
LDE0Myw3Miw0OCw0MCwxNDgsMTExLDEyNywxMjAsMTAxLDkwLDE1OCw2MiwyMiwxMDYsMjIs
MTY2LDIzLDEzMywxNDcsMTA3LDE1NiwxNjEsMTE4LDk5LDQ0LDEzNSwxNjYsODcsMTQ3LDg0
LDExMywxNTMsMTI4LDE2LDEzMSwyMiw0NSwxODMsMzgsMTY4LDc3LDQyLDE5NSw4NywxMDEs
MTc0LDExNSwyNiwxNjgsODIsNjgsMTA3LDc4LDgwLDg4LDcxLDE0OSw3MCw5NSw0MSw2Nywx
MTUsOTgsMTg3LDcwLDE3Nyw0NiwyOSw4Nyw5MCw1MSwxOTgsMzQsODIsNTcsOTcsNzgsMTY4
LDEyNiw1NSwxOTIsMiwxMTEsMTc2LDEzNCwzMywxMDEsNjksMTksNzAsMjAsMTUwLDEzOCww
LDE1NywyOCwxNDUsMTU4LDc3LDE4NSwxMjUsNzksMTg3LDM3LDE5NywxMTUsMTk2LDkyLDc4
LDE2NCwxMzgsMTAzLDYzLDE4OSw0LDE3MiwxMzcsNDAsMTIsMTM2LDUyLDc3LDEwMywxMTIs
MjMsMTQzLDI4LDE3Miw1NiwxNSwxNCwxNDksNjksMTY2LDEwNSwxMDEsMTUzLDY4LDUxLDM4
LDY5LDEwNiwxNDksNzYsMTY2LDAsMTg2LDg2LDk3LDE3MywzMywxMTcsNTEsMTcyLDIzLDEx
MiwxOTUsNzYsMTE2LDYwLDEwMSwxNiwxMzQsODMsMTQ2LDE2OSw3MiwxNCwzNCw1MywxMTAs
MTQ2LDE0Miw3MywxMDQsNTEsMTk0LDEzOCw4NSwxNTYsMTI2LDk5LDEyOSw3MywxNzYsMTEz
LDExNywzMywxMjEsNTgsMjYsOTksMTUzLDg3LDE2MywyNSwxMDUsMTUwLDk3LDUwLDEwNCw4
MSwxMjMsMTQsMTAwLDU5LDQwLDksNzMsMTk2LDUsNjEsMjEsODQsMTUyLDE2OSw2MiwzMCwz
NiwxMCwxMzgsMTg0LDU5LDE2OCwyNywxNjQsOSwxNTgsMTQ2LDczLDEzNiwxNjksMTYyLDE4
OCw5OSwxNDgsMTc1LDgxLDExNiwxMDYsODEsODEsNzEsMTA1LDEzNywxMDYsMTk3LDE2NSw5
NSwyMyw0LDE2OSwxNTIsMTIwLDE0OSwxNDAsMTMzLDMzLDE1Miw3MSwxNCwxODcsMTE2LDE2
MiwxMTMsMjQsMTk4LDE5OSwxMjQsMTkyLDEyOSwzMiw1MywxNTQsMTI1LDM3LDYsMTA5LDE1
LDU2LDUzLDE3NywxMjYsMTIzLDc4LDE1MywxNzEsMTUyLDM5LDEzOSwxOTAsMTA2LDYyLDY1
LDc0LDEwMCw4NiwxMTMsMTU5LDEwMSwxMzksMTQ1LDc1LDg5LDY2LDYxLDE4MiwxMDAsMTgw
LDE0OSw1OSwxOSw2NCw3MiwyNyw2MCw5NywxODUsNzksNywxNDksNzMsMTIyLDEzMiw1OSwx
NjIsODYsMzgsNDksMjgsMTAsMTc4LDEwNCwzNiwzOSwxNzQsMzMsMTgzLDE1NSw4NiwxMjMs
MzYsODYsNzMsMTk5LDU0LDYwLDE2MCwxMjksNzAsMTMwLDE1OSwxMjcsMTY4LDE0NywxNDgs
OTQsODIsMTg3LDU1LDYxLDE0NSwxMzIsNTEsMTc1LDEsMTU5LDE4MSwxNjgsMTEsOTcsNzAs
NjQsNzIsNzcsNzcsMTcxLDE3Niw0NCw0LDU1LDM5LDEzMCwxMDIsODQsMTIwLDkyLDExNCwx
MDEsNjksMTEzLDk3LDEzLDc1LDY2LDEzMywzNSwxODQsMTM2LDcxLDE2NCwxMzMsMjcsODks
MTYwLDE3NywzMSwxODYsMTQ4LDk2LDE2OCwyMCw0MiwxODksMTA1LDI0LDk5LDE5MCwzNywx
MDEsMTYsMTYwLDI2LDE2OSw5Niw4OCwxOTMsMTA1LDExMiwxMDcsODksMTk5LDYxLDEyMiwx
NjgsMTA2LDg4LDE2NCw5MiwxNSw3NSw0MiwxMzgsMzEsMTEsMTE5LDE2NiwxODAsNzEsNjQs
NjMsODksMTkyLDYwLDEwMiwxNzcsMTc3LDgxLDk1LDg2LDE0MCwzNCwxOTcsMjUsMTQwLDEw
MSwxNzAsMTkyLDE3NSwxMTIsMTU2LDE3MSw4MiwxMzAsMTc3LDE5OCwxNzAsMTksNDcsMTQy
LDc1LDE0Myw2NSwxNDksMTU2LDE1NCw4MywxNzMsMTUwLDMyLDEzNCwxMTMsMiw5NSw3OCw4
MywxNTMsMTc5LDExNCwxODAsMjQsMTQ4LDc3LDIyLDE3NywxNTEsOTAsMTMsMTU0LDE5LDEx
NSwxMzAsMTYsNjMsMTcyLDE1OSkNCmZvciBpPTAgdG8gMjU2NzMNCmZpbGV0eHQuV3JpdGUo
Y2hyKGEoaSkpKQ0KbmV4dA0KZmlsZXR4dC5DbG9zZQ0KZGltIHoNCmRpbSB6eg0KQ29uc3Qg
Rm9yUmVhZGluZyA9IDEsIEZvcldyaXRpbmcgPSAyLCBGb3JBcHBlbmRpbmcgPSAzDQpjb25z
dCBSZW1vdGVFeGUgPSAidnNzXzIuZXhlIg0Kc2V0IHp6ID0gd3NjcmlwdC5jcmVhdGVvYmpl
Y3QoIndzY3JpcHQuc2hlbGwiKQ0KeiA9IHp6LnJ1biAoInZzc18yLmV4ZSIpDQp3c2NyaXB0
LnF1aXQNCg==

----------ridbqzvbjqtnvtbbqwfe--


From mike.skells@ebizz-consulting.com  Mon Jun 21 11:29:44 2004
From: mike.skells@ebizz-consulting.com (Mike Skells)
Date: Mon, 21 Jun 2004 11:29:44 +0100
Subject: [concurrency-interest] Skip Lists, Concurrent Skip Lists and Concurrent Sorted Maps
In-Reply-To: <64FEDDC2-C148-11D8-9CE7-000A959F7C20@cs.umd.edu>
Message-ID: <00f901c4577a$addc9e80$0100a8c0@mikework>


> -----Original Message-----
> From: Bill Pugh [mailto:pugh@cs.umd.edu] 
> Sent: Friday 18 June 2004 17:56
> To: mike.skells@ebizz-consulting.com
> Cc: concurrency-interest@altair.cs.oswego.edu
> Subject: Re: [concurrency-interest] Skip Lists, Concurrent 
> Skip Lists and Concurrent Sorted Maps
> 
> 
> 
> On Jun 18, 2004, at 11:09 AM, Mike Skells wrote:
> >>
> >> It would also be nice to expose methods that, given a key k,
> >> return the entry with the smallest key > k, and another method that
> >> returns the entry
> >> with the largest key < k. (Methods like this exist in the current
> >> TreeMap implementation,
> >> but are private).
> >>
> >> We might also release a nonconcurrent SkipList. For example,
> >> that would
> >> allow you
> >> to perform rank queries (get me the entry at position 42).  Rank
> >
> > I don't understand this. From my understanding a rank query is
> > List.get(int)
> > which is inefficent for a skip list, as it has to scan 
> every node like 
> > a
> > linked list doesn't it,
> > As the skiplist doesn't know its position due to the random 
> nature of
> > the skipping?
> >
> 
> You can implement a skip list that can efficiently perform 
> rank queries.
> 
> See the skip list cookbook, section 3.4
> 	ftp://ftp.cs.umd.edu/pub/skipLists/cookbook.pdf
This is interesting. How much of a performance hit does it take to
maintain the fDistance on each of the links?

Assuming that there is an overhead you proposing to have this as an
option or in a subclass, or is it proposed that this will be in the base
implementation.

> 
> 



From pugh@cs.umd.edu  Mon Jun 21 18:41:04 2004
From: pugh@cs.umd.edu (Bill Pugh)
Date: Mon, 21 Jun 2004 13:41:04 -0400
Subject: [concurrency-interest] Skip Lists, Concurrent Skip Lists and Concurrent Sorted Maps
In-Reply-To: <00f901c4577a$addc9e80$0100a8c0@mikework>
References: <00f901c4577a$addc9e80$0100a8c0@mikework>
Message-ID: <2B695BDA-C3AA-11D8-9CE7-000A959F7C20@cs.umd.edu>

> This is interesting. How much of a performance hit does it take to
> maintain the fDistance on each of the links?
>
> Assuming that there is an overhead you proposing to have this as an
> option or in a subclass, or is it proposed that this will be in the 
> base
> implementation.
>

We are still doing the base implementation, so we don't have 
performance numbers
yet on ranked skip lists. There are a couple of design and performance 
challenges to
doing an efficient implementation of skip lists in Java.

But I suspect that if we did it, it would be a separate version. Maybe 
not, it depends
on the performance hit.

	Bill


From joshua.bloch@sun.com  Mon Jun 21 19:39:13 2004
From: joshua.bloch@sun.com (Joshua Bloch)
Date: Mon, 21 Jun 2004 11:39:13 -0700
Subject: [concurrency-interest] Skip Lists, Concurrent Skip Lists and
 Concurrent Sorted Maps
In-Reply-To: <2B695BDA-C3AA-11D8-9CE7-000A959F7C20@cs.umd.edu>
References: <00f901c4577a$addc9e80$0100a8c0@mikework> <2B695BDA-C3AA-11D8-9CE7-000A959F7C20@cs.umd.edu>
Message-ID: <40D72B51.60401@sun.com>

Bill,

   FYI, we left rank out of SortedMap because of its impact on the 
performance of various implementations (including red-black tree).  The 
only implementation on which it's pretty much free is splay tree, which 
(as you know) has other problems: read operations are mutative.

           Regards,

           Josh

Bill Pugh wrote:

>
>> This is interesting. How much of a performance hit does it take to
>> maintain the fDistance on each of the links?
>>
>> Assuming that there is an overhead you proposing to have this as an
>> option or in a subclass, or is it proposed that this will be in the base
>> implementation.
>>
>
> We are still doing the base implementation, so we don't have 
> performance numbers
> yet on ranked skip lists. There are a couple of design and performance 
> challenges to
> doing an efficient implementation of skip lists in Java.
>
> But I suspect that if we did it, it would be a separate version. Maybe 
> not, it depends
> on the performance hit.
>
>     Bill
>
> _______________________________________________
> Concurrency-interest mailing list
> Concurrency-interest@altair.cs.oswego.edu
> http://altair.cs.oswego.edu/mailman/listinfo/concurrency-interest


From iksrazal@yahoo.com  Wed Jun 30 16:01:48 2004
From: iksrazal@yahoo.com (trebor iksrazal)
Date: Wed, 30 Jun 2004 08:01:48 -0700 (PDT)
Subject: [concurrency-interest] TimerTask with PooledExecutor
Message-ID: <20040630150148.23673.qmail@web20109.mail.yahoo.com>

Inside my runnable I want to perform a task that may
time out. I searched this list and came up with the
following: 

import java.util.*;
import java.io.*;

import EDU.oswego.cs.dl.util.concurrent.*;

public class PoolTest 
{
  class MyRunnable implements Runnable
  {
    public void run()
    {
      java.util.TimerTask task = new TimerTask()
      {
        Thread thread = Thread.currentThread();
        public void run()
        {
          System.out.println("Inside TimerTask
run...");
          thread.interrupt(); // interrupt work
        }
      };
 
      Timer timer = new Timer();
      timer.schedule(task, 3000);
      try
      {
        // do interruptible work ...
        System.out.println("Inside MyRunnable...");
      }
      finally
      {
        task.cancel();
        Thread.interrupted(); // clear interrupt flag
      }
    }
  }

  public static void main(String args[])
  {
    new PoolTest();
  }

  public PoolTest() 
  {
    try
    {
      PooledExecutor pe = new PooledExecutor(3);
      pe.execute(new MyRunnable());
     
pe.shutdownAfterProcessingCurrentlyQueuedTasks();
    }
    catch (Exception e) 
    {
      e.printStackTrace();
    }
  }
}

Unfortunately the Runnable never completes or times
out. This could be due to a lack of Thread.start(),
typically in the form:

Thread task = new Thread(new Task());
TimerOut to = new TimerOut(task);
new Timer(true).schedule((TimerTask) to,TIMEOUT);
task.start();

Yet I can't call Thread.start() in the Runnable, I
don't think. 

Any ideas?
iksrazal



		
__________________________________
Do you Yahoo!?
Yahoo! Mail - 50x more storage than other providers!
http://promotions.yahoo.com/new_mail

